(self.webpackChunkceph_dashboard=self.webpackChunkceph_dashboard||[]).push([[8858],{88858:(V,v,F)=>{F.r(v),F.d(v,{FormlyJsonschema:()=>h});var C=F(87536),_=F(53648),O=F(45451),b=F(50619);function y(o){return""===o||null==o}function A(o){return null!=o&&"object"==typeof o&&!Array.isArray(o)}function w(o){return Number.isInteger?Number.isInteger(o):"number"==typeof o&&Math.floor(o)===o}function M(o){return"object"==typeof o&&(o.hasOwnProperty("const")||o.enum&&1===o.enum.length)}function I(o){if(!o.fieldGroup)return(0,O.\u0275hasKey)(o)&&void 0!==(0,O.\u0275getFieldValue)(o)?1:0;const g=o.fieldGroup.reduce((e,n)=>I(n)+e,0);if(0===g&&(0,O.\u0275hasKey)(o)){const e=(0,O.\u0275getFieldValue)(o);if(null===e||void 0!==e&&(o.fieldArray&&Array.isArray(e)||!o.fieldArray&&A(e)))return 1}return g}let h=(()=>{class o{toFieldConfig(e,n){return this._toFieldConfig(e,{schema:e,...n||{}})}_toFieldConfig(e,{key:n,...i}){e=this.resolveSchema(e,i);const u=this.guessSchemaType(e);let r={type:u[0],defaultValue:e.default,props:{label:e.title,readonly:e.readOnly,description:e.description}};switch(null!=n&&(r.key=n),!i.ignoreDefault&&(e.readOnly||i.readOnly)&&(r.props.disabled=!0,i={...i,readOnly:!0}),i.resetOnHide&&(r.resetOnHide=!0),n&&i.strict&&this.addValidator(r,"type",(t,s)=>{const l=(0,O.\u0275getFieldValue)(s);if(null!=l)switch(r.type){case"string":return"string"==typeof l;case"integer":return w(l);case"number":return"number"==typeof l;case"object":return A(l);case"array":return Array.isArray(l)}return!0}),!1===i.shareFormControl&&(r.shareFormControl=!1),i.ignoreDefault&&delete r.defaultValue,this.addValidator(r,"type",{schemaType:u,expression:({value:t})=>{if(void 0===t||null===t&&-1!==u.indexOf("null"))return!0;switch(u[0]){case"null":return null===typeof t;case"string":return"string"==typeof t;case"integer":return w(t);case"number":return"number"==typeof t;case"object":return A(t);case"array":return Array.isArray(t)}return!0}}),r.type){case"number":case"integer":r.parsers=[t=>y(t)?void 0:Number(t)],e.hasOwnProperty("minimum")&&(r.props.min=e.minimum),e.hasOwnProperty("maximum")&&(r.props.max=e.maximum),e.hasOwnProperty("exclusiveMinimum")&&(r.props.exclusiveMinimum=e.exclusiveMinimum,this.addValidator(r,"exclusiveMinimum",({value:t})=>y(t)||t>e.exclusiveMinimum)),e.hasOwnProperty("exclusiveMaximum")&&(r.props.exclusiveMaximum=e.exclusiveMaximum,this.addValidator(r,"exclusiveMaximum",({value:t})=>y(t)||t<e.exclusiveMaximum)),e.hasOwnProperty("multipleOf")&&(r.props.step=e.multipleOf,this.addValidator(r,"multipleOf",({value:t})=>{if(y(t)||"number"!=typeof t||0===t||e.multipleOf<=0)return!0;const s=Math.pow(10,function P(o){if(!isFinite(o))return 0;let g=1,e=0;for(;Math.round(o*g)/g!==o;)g*=10,e++;return e}(e.multipleOf));return Math.round(t*s)%Math.round(e.multipleOf*s)==0}));break;case"string":r.parsers=[t=>(-1!==u.indexOf("null")?t=y(t)?null:t:r.props.required||(t=""===t?void 0:t),t)],["minLength","maxLength","pattern"].forEach(t=>{e.hasOwnProperty(t)&&(r.props[t]=e[t])});break;case"object":{r.fieldGroup||(r.fieldGroup=[]);const{propDeps:t,schemaDeps:s}=this.resolveDependencies(e);Object.keys(e.properties||{}).forEach(l=>{const a=Array.isArray(e.required)&&-1!==e.required.indexOf(l),d=this._toFieldConfig(e.properties[l],{...i,key:l,isOptional:i.isOptional||!a});if(r.fieldGroup.push(d),(a||t[l])&&(d.expressions={...d.expressions||{},"props.required":p=>{let m=p.parent;const f=p.fieldGroup&&null!=p.key?m.model:p.model;for(;null==m.key&&m.parent;)m=m.parent;return!!(f||m&&m.props&&m.props.required)&&(!(!Array.isArray(e.required)||-1===e.required.indexOf(l))||t[l]&&p.model&&t[l].some(x=>!y(p.model[x])))}}),s[l]){const p=f=>f.hasOwnProperty("const")?f.const:f.enum[0],m=s[l].oneOf;m&&m.every(f=>f.properties&&f.properties[l]&&M(f.properties[l]))?m.forEach(f=>{const{[l]:c,...x}=f.properties;r.fieldGroup.push({...this._toFieldConfig({...f,properties:x},{...i,resetOnHide:!0}),expressions:{hide:E=>!E.model||p(c)!==E.model[l]}})}):r.fieldGroup.push({...this._toFieldConfig(s[l],i),expressions:{hide:f=>!f.model||y(f.model[l])}})}}),e.oneOf&&r.fieldGroup.push(this.resolveMultiSchema("oneOf",e.oneOf,{...i,shareFormControl:!1})),e.anyOf&&r.fieldGroup.push(this.resolveMultiSchema("anyOf",e.anyOf,i));break}case"array":e.hasOwnProperty("minItems")&&(r.props.minItems=e.minItems,this.addValidator(r,"minItems",(t,s)=>{const l=(0,O.\u0275getFieldValue)(s);return y(l)||l.length>=e.minItems}),!i.isOptional&&e.minItems>0&&void 0===r.defaultValue&&(r.defaultValue=Array.from(new Array(e.minItems)))),e.hasOwnProperty("maxItems")&&(r.props.maxItems=e.maxItems,this.addValidator(r,"maxItems",(t,s)=>{const l=(0,O.\u0275getFieldValue)(s);return y(l)||l.length<=e.maxItems})),e.hasOwnProperty("uniqueItems")&&(r.props.uniqueItems=e.uniqueItems,this.addValidator(r,"uniqueItems",(t,s)=>{const l=(0,O.\u0275getFieldValue)(s);return!(!y(l)&&e.uniqueItems)||Array.from(new Set(l.map(d=>JSON.stringify(d)))).length===l.length})),e.items&&!Array.isArray(e.items)&&(e.items=this.resolveSchema(e.items,i)),this.isEnum(e)||(r.fieldArray=t=>{if(!Array.isArray(e.items)){const d=e.items?this._toFieldConfig(e.items,i):{};return d.props&&(d.props.required=!0),d}const s=t.fieldGroup?t.fieldGroup.length:0,l=e.items[s]?e.items[s]:e.additionalItems,a=l?this._toFieldConfig(l,i):{};return a.props&&(a.props.required=!0),e.items[s]&&(a.props.removable=!1),a})}return e.hasOwnProperty("const")&&(r.props.const=e.const,this.addValidator(r,"const",({value:t})=>t===e.const),r.type||(r.defaultValue=e.const)),this.isEnum(e)&&(r.props.multiple="array"===r.type,r.type="enum",r.props.options=this.toEnumOptions(e)),e.oneOf&&!r.type&&(delete r.key,r.fieldGroup=[this.resolveMultiSchema("oneOf",e.oneOf,{...i,key:n,shareFormControl:!1})]),e.oneOf&&!r.type&&(delete r.key,r.fieldGroup=[this.resolveMultiSchema("oneOf",e.oneOf,{...i,key:n,shareFormControl:!1})]),e.widget?.formlyConfig&&(r=this.mergeFields(r,e.widget.formlyConfig)),r.templateOptions=r.props,i.map?i.map(r,e):r}resolveSchema(e,n){return e&&e.$ref&&(e=this.resolveDefinition(e,n)),e&&e.allOf&&(e=this.resolveAllOf(e,n)),e}resolveAllOf({allOf:e,...n},i){if(!e.length)throw Error(`allOf array can not be empty ${e}.`);return e.reduce((u,r)=>(r=this.resolveSchema(r,i),u.required&&r.required&&(u.required=[...u.required,...r.required]),r.uniqueItems&&(u.uniqueItems=r.uniqueItems),["maxLength","maximum","exclusiveMaximum","maxItems","maxProperties"].forEach(t=>{!y(u[t])&&!y(r[t])&&(u[t]=u[t]<r[t]?u[t]:r[t])}),["minLength","minimum","exclusiveMinimum","minItems","minProperties"].forEach(t=>{!y(u[t])&&!y(r[t])&&(u[t]=u[t]>r[t]?u[t]:r[t])}),(0,O.\u0275reverseDeepMerge)(u,r)),n)}resolveMultiSchema(e,n,i){return{type:"multischema",fieldGroup:[{type:"enum",defaultValue:-1,props:{multiple:"anyOf"===e,options:n.map((u,r)=>({label:u.title,value:r,disabled:u.readOnly}))},hooks:{onInit:u=>u.formControl.valueChanges.pipe((0,b.tap)(()=>u.options.detectChanges(u.parent)))}},{fieldGroup:n.map((u,r)=>({...this._toFieldConfig(u,{...i,resetOnHide:!0}),expressions:{hide:(t,s)=>{const l=t.parent.parent.fieldGroup[0].formControl;if(-1===l.value||s){let a=t.parent.fieldGroup.map((d,p)=>[d,p,this.isFieldValid(d,p,n,i)]).sort(([d,,p],[m,,f])=>{if(p!==f)return f?1:-1;const c=I(d),x=I(m);return c===x&&d.props.disabled===m.props.disabled?0:x>c?1:-1}).map(([,d])=>d);if("anyOf"===e){const d=a.filter(p=>I(t.parent.fieldGroup[p]));a=d.length>0?d:[a[0]||0]}a=a.length>0?a:[0],l.setValue("anyOf"===e?a:a[0])}return Array.isArray(l.value)?-1===l.value.indexOf(r):l.value!==r}}}))}]}}resolveDefinition(e,n){const[i,u]=e.$ref.split("#/");if(i)throw Error(`Remote schemas for ${e.$ref} not supported yet.`);const r=u?u.split("/").reduce((t,s)=>t?.hasOwnProperty(s)?t[s]:null,n.schema):null;if(!r)throw Error(`Cannot find a definition for ${e.$ref}.`);return r.$ref?this.resolveDefinition(r,n):{...r,...["title","description","default","widget"].reduce((t,s)=>(e.hasOwnProperty(s)&&(t[s]=e[s]),t),{})}}resolveDependencies(e){const n={},i={};return Object.keys(e.dependencies||{}).forEach(u=>{const r=e.dependencies[u];Array.isArray(r)?r.forEach(t=>{n[t]?n[t].push(u):n[t]=[u]}):i[u]=r}),{propDeps:n,schemaDeps:i}}guessSchemaType(e){const n=e?.type;return!n&&e?.properties?["object"]:Array.isArray(n)?1===n.length?n:2===n.length&&-1!==n.indexOf("null")?n.sort(i=>"null"==i?1:-1):n:n?[n]:[]}addValidator(e,n,i){e.validators=e.validators||{},e.validators[n]=i}isEnum(e){return!!e.enum||e.anyOf&&e.anyOf.every(M)||e.oneOf&&e.oneOf.every(M)||e.uniqueItems&&e.items&&!Array.isArray(e.items)&&this.isEnum(e.items)}toEnumOptions(e){if(e.enum)return e.enum.map(i=>({value:i,label:i}));const n=i=>{const u=i.hasOwnProperty("const")?i.const:i.enum[0],r={value:u,label:i.title||u};return i.readOnly&&(r.disabled=!0),r};return e.anyOf?e.anyOf.map(n):e.oneOf?e.oneOf.map(n):this.toEnumOptions(e.items)}isFieldValid(e,n,i,u){e._schemasFields||(Object.defineProperty(e,"_schemasFields",{enumerable:!1,writable:!0,configurable:!0}),e._schemasFields={});let r=e._schemasFields[n];const t=e.model?(0,O.\u0275clone)(e.model):e.fieldArray?[]:{};return r?(r.model=t,e.options.build(r)):r=e._schemasFields[n]=e.options.build({form:Array.isArray(t)?new _.FormArray([]):new _.FormGroup({}),fieldGroup:[this._toFieldConfig(i[n],{...u,resetOnHide:!0,ignoreDefault:!0,map:null,strict:!0})],model:t,options:{}}),r.form.valid}mergeFields(e,n){for(let i in n){const u="templateOptions"===i?"props":i;A(e[u])&&A(n[i])?e[u]=this.mergeFields(e[u],n[i]):null!=n[i]&&(e[u]=n[i])}return e}}return o.\u0275fac=function(e){return new(e||o)},o.\u0275prov=C.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"}),o})()}}]);
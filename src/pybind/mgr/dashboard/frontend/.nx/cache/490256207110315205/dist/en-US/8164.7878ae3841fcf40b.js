(self.webpackChunkceph_dashboard=self.webpackChunkceph_dashboard||[]).push([[8164],{18164:(l,p,E)=>{E.r(p),E.d(p,{EXPERIMENTAL_SERVICE_PROVIDER:()=>a,EXPERIMENTAL_SERVICE_PROVIDER_FACTORY:()=>d,ExperimentalModule:()=>o,ExperimentalService:()=>r});var n=E(87536);let r=(()=>{class e{constructor(){this.experiments=new Map}addExperiment(t,i={enabled:!1}){this.experiments.has(t)||this.experiments.set(t,i)}enableExperiment(t){this.getExperiment(t).enabled=!0}disableExperiment(t){this.getExperiment(t).enabled=!1}getExperiment(t){return this.experiments.has(t)?this.experiments.get(t):(this.addExperiment(t),this.getExperiment(t))}getExperiments(){return Array.from(this.experiments.entries())}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();function d(e){return e||new r}const a={provide:r,deps:[[new n.Optional,new n.SkipSelf,r]],useFactory:d};let o=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=n.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=n.\u0275\u0275defineInjector({providers:[r,a]}),e})()}}]);
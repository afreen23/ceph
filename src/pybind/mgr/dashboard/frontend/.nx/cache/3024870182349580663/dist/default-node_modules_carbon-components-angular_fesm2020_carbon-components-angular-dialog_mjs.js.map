{"version":3,"file":"default-node_modules_carbon-components-angular_fesm2020_carbon-components-angular-dialog_mjs.js","mappings":"8LAGA,IAAIA,EACOC,EACAA,2DAKRA,IAAeA,EAAa,CAAC,IAJjBC,KAAU,OACrBD,EAAWE,MAAW,QACtBF,EAAWG,IAAS,MACpBH,EAAWI,OAAY,SAEpB,IAAIC,IAAoBN,EAAK,CAAC,GAC9BC,EAAWC,MAAQ,SAAUK,EAAiBC,EAAQC,GAAiB,MAAQ,CAC9EC,IAAKH,EAAgBG,IAAMC,KAAKC,MAAMJ,EAAOK,aAAe,GAAKF,KAAKC,MAAMH,EAAcK,OAAS,GACnGC,KAAMJ,KAAKC,MAAML,EAAgBQ,KAAOP,EAAOQ,aAC/C,EACJhB,EAAGC,EAAWE,OAAS,SAAUI,EAAiBC,EAAQC,GAAiB,MAAQ,CAC/EC,IAAKH,EAAgBG,IAAMC,KAAKC,MAAMJ,EAAOK,aAAe,GAAKF,KAAKC,MAAMH,EAAcK,OAAS,GACnGC,KAAMJ,KAAKC,MAAML,EAAgBQ,KAAON,EAAcQ,OACtD,EACJjB,EAAGC,EAAWG,KAAO,SAAUG,EAAiBC,EAAQC,GAAiB,MAAQ,CAC7EC,IAAKC,KAAKC,MAAML,EAAgBG,IAAMF,EAAOK,cAC7CE,KAAMR,EAAgBQ,KAAOJ,KAAKC,MAAMJ,EAAOQ,YAAc,GAAKL,KAAKC,MAAMH,EAAcQ,MAAQ,GACnG,EACJjB,EAAGC,EAAWI,QAAU,SAAUE,EAAiBC,EAAQC,GAAiB,MAAQ,CAChFC,IAAKC,KAAKC,MAAML,EAAgBG,IAAMD,EAAcK,QACpDC,KAAMR,EAAgBQ,KAAOJ,KAAKC,MAAMJ,EAAOQ,YAAc,GAAKL,KAAKC,MAAMH,EAAcQ,MAAQ,GACnG,EACJjB,GACAkB,SAAmBC,OAAW,IAAcA,OAAS,CACrDC,YAAa,EACbC,QAAS,EACTC,WAAY,EACZC,QAAS,GAETC,EAA0B,WAC1B,SAASA,EAASC,QACI,IAAdA,IAAwBA,EAAY,CAAC,GACzCC,KAAKD,UAAYnB,EACjBoB,KAAKD,UAAYE,OAAOC,OAAO,CAAC,EAAGtB,EAAkBmB,EACzD,CACAD,SAASK,UAAUC,kBAAoB,SAAUtB,GAO7C,QALIuB,EAAU,CACVhB,KAAMP,EAAOwB,WACbtB,IAAKF,EAAOyB,WAGTzB,EAAO0B,cAAmE,WAAnDC,iBAAiB3B,EAAO0B,cAAcE,UAChEL,EAAQhB,MAAQP,EAAOwB,WACvBD,EAAQrB,KAAOF,EAAOyB,UACtBzB,EAASA,EAAO0B,aAEpB,OAAOH,CACX,EACAP,EAASK,UAAUQ,kBAAoB,SAAU7B,GAO7C,QANI8B,EAAc9B,EACd+B,EAAU,CACV7B,IAAK,EACLK,KAAM,GAGHuB,EAAYJ,cAAc,CAC7B,IAAIM,EAAWL,iBAAiBG,EAAYJ,cAIlB,WAAtBM,EAASJ,UACTI,EAASC,YACTD,EAASE,YACLC,SAASH,EAASE,UAAW,MAC7BH,EAAQ7B,KAAOiC,SAASH,EAASE,UAAW,KAE5CC,SAASH,EAASC,WAAY,MAC9BF,EAAQxB,MAAQ4B,SAASH,EAASC,WAAY,MAGtDH,EAAcA,EAAYJ,YAC9B,CACA,IAAIU,EAAapC,EAAOqC,wBACpBC,EAAeC,SAASC,KAAKH,wBACjC,MAAO,CACHnC,IAAKkC,EAAWlC,IAAMoC,EAAapC,IAAM6B,EAAQ7B,IACjDK,KAAM6B,EAAW7B,KAAO+B,EAAa/B,KAAOwB,EAAQxB,KAE5D,EAEAS,EAASK,UAAUoB,aAAe,SAAUC,EAAW1C,EAAQ2C,GAC3D,IAAI5C,EAAkBmB,KAAKI,kBAAkBoB,GACzCzC,EAAgByC,EAAUL,wBAC9B,OAAOnB,KAAK0B,kBAAkB7C,EAAiBE,EAAeD,EAAQ2C,EAC1E,EACA3B,EAASK,UAAUwB,aAAe,SAAUH,EAAW1C,EAAQ2C,GAC3D,IAAI5C,EAAkBmB,KAAKW,kBAAkBa,GACzCzC,EAAgByC,EAAUL,wBAC9B,OAAOnB,KAAK0B,kBAAkB7C,EAAiBE,EAAeD,EAAQ2C,EAC1E,EACA3B,EAASK,UAAUyB,aAAe,SAAUJ,EAAW1C,EAAQ2C,EAAWI,QAC/C,IAAnBA,IAA6BA,EAAiB7B,KAAKW,kBAAkBmB,KAAK9B,OAC9E,IAAInB,EAAkBgD,EAAeL,GACjCzC,EAAgByC,EAAUL,wBAC9B,OAAOnB,KAAK0B,kBAAkB7C,EAAiBE,EAAeD,EAAQ2C,EAC1E,EACA3B,EAASK,UAAU4B,eAAiB,SAAUC,EAAQlD,EAAQ2C,GAC1D,OAAOzB,KAAK0B,kBAAkBM,EAAQ,CAAEhD,IAAK,EAAGK,KAAM,EAAGD,OAAQ,EAAGG,MAAO,GAAKT,EAAQ2C,EAC5F,EAIA3B,EAASK,UAAU8B,gBAAkB,SAAUnD,EAAQ4B,GACnD,IAAIwB,EAAepD,EAAOK,aAAeuB,EAAS1B,IAC9CmD,EAAcrD,EAAOQ,YAAcoB,EAASrB,KAChD,MAAO,CACHL,IAAK0B,EAAS1B,IACdoD,OAAQF,EACR7C,KAAMqB,EAASrB,KACfgD,MAAOF,EAEf,EACArC,EAASK,UAAUmC,UAAY,SAAU5B,EAAU1B,EAAKK,GACpD,YAAY,IAARL,IAAkBA,EAAM,QACf,IAATK,IAAmBA,EAAO,GACvBY,OAAOC,OAAO,CAAC,EAAGQ,EAAU,CAC/B1B,IAAK0B,EAAS1B,IAAMA,EACpBK,KAAMqB,EAASrB,KAAOA,GAE9B,EACAS,EAASK,UAAUoC,WAAa,SAAUC,EAAS9B,GAC/C8B,EAAQC,MAAMzD,IAAM0B,EAAS1B,IAAM,KACnCwD,EAAQC,MAAMpD,KAAOqB,EAASrB,KAAO,IACzC,EACAS,EAASK,UAAUuC,kBAAoB,SAAUlB,EAAW1C,EAAQ6D,EAAYC,EAAmBC,GAC/F,IAAIC,EAAQ9C,UACc,IAAtB4C,IAAgCA,EAAoB5C,KAAK+C,yBAAyBjB,KAAK9B,YAClE,IAArB6C,IAA+BA,EAAmB7C,KAAK4B,aAAaE,KAAK9B,OAK7E,IAAIgD,EAAqBL,EAAWM,IAAI,SAAUxB,GAC9C,IAAIyB,EAAML,EAAiBrB,EAAW1C,EAAQ2C,GAC1C0B,EAAML,EAAMb,gBAAgBnD,EAAQoE,GACpCE,EAAe,EACfC,EAAc,EACdC,EAAYV,IAEZO,EAAInE,IAAMsE,EAAUtE,IACpBoE,EAAeE,EAAUtE,IAAMmE,EAAInE,IAE9BmE,EAAIf,OAASkB,EAAUlE,SAC5BgE,EAAeD,EAAIf,OAASkB,EAAUlE,QAGtC+D,EAAI9D,KAAOiE,EAAUjE,KACrBgE,EAAcC,EAAUjE,KAAO8D,EAAI9D,KAE9B8D,EAAId,MAAQiB,EAAU/D,QAC3B8D,EAAcF,EAAId,MAAQiB,EAAU/D,OAIpC6D,IAAiBC,EACjBA,EAAc,EAETA,IAAgBD,IACrBA,EAAe,GAEnB,IAAIG,EAAOzE,EAAOK,aAAeL,EAAOQ,YAMxC,MAAO,CACHmC,UAAWA,EACX+B,QAJcD,EAHDH,EAAeC,GAIGE,EAKvC,GAEAP,SAAmBS,KAAK,SAAUC,EAAGC,GAAK,OAAOA,EAAEH,OAASE,EAAEF,MAAQ,GAE/DR,EAAmB,GAAGvB,SACjC,EACA3B,EAASK,UAAUyD,oBAAsB,SAAU5B,EAAQlD,EAAQ6D,EAAYC,GAC3E,IAAIE,EAAQ9C,UACc,IAAtB4C,IAAgCA,EAAoB5C,KAAK+C,yBAAyBjB,KAAK9B,OAI3F,OAAOA,KAAK0C,kBAAkB,KAAM5D,EAAQ6D,EAAYC,EAHvC,SAAUiB,EAAG/E,EAAQ2C,GAClC,OAAOqB,EAAMf,eAAeC,EAAQlD,EAAQ2C,EAChD,EAEJ,EACA3B,EAASK,UAAU4C,yBAA2B,WAC1C,MAAO,CAEH/D,IAAK,EACLK,KAAM,EACND,OAAQI,EAAUE,YAClBH,MAAOC,EAAUI,WAEzB,EACAE,EAASK,UAAUuB,kBAAoB,SAAU7C,EAAiBE,EAAeD,EAAQ2C,GACrF,OAAIzB,KAAKD,UAAU0B,GACRzB,KAAKD,UAAU0B,GAAW5C,EAAiBC,EAAQC,IAE9D+E,QAAQC,MAAM,sDACP,CAAE1E,KAAM,EAAGL,IAAK,GAC3B,EACOc,CACX,CA7KIA,GA+KOY,EAAW,IAAIZ,EAC1B,MAAAkE,EAAelE,kYC7Lf,MAAAmE,EAAA,WAAAC,EAAAC,KAAA,2BAAAA,IAAAC,EAAAD,KAAAE,aAAAF,IAAA,SAAAG,EAAAC,EAAAC,GAAA,UAAAC,EAAAF,EAAAC,GAAA,OAAAE,EAAA,MAAAC,EAAAR,KAAA,2BAAAA,IAAA,SAAAS,EAAAL,EAAAC,GAAA,UAAAK,EAAAN,EAAAC,GA2iC4F,GA3iC5F,EAAAD,GAkIgGO,uBAAE,EAAAF,EAAA,qBAy6BN,EAAAL,EAAA,OAAAQ,EAz6BID,mDAAE,mBAAAC,EAAAC,cAy6BP,WAAAC,EAAAV,EAAAC,GAAA,EAAAD,GAz6BKO,yBAAE,EA86BtE,UAAAI,EAAAX,EAAAC,GAAA,EAAAD,IA96BoEO,mDAAE,WAi7BP,UAAAK,EAAAZ,EAAAC,GAAA,EAAAD,GAj7BKO,+BAAE,EAimCnC,UAAAM,EAAAb,EAAAC,GAAA,KAAAD,EAAA,OAAAc,EAjmCiCP,0DAAE,cAAFA,uBAAE,mBAAFA,0BAAEO,GAAA,MAAAN,EAAFD,4BAAE,OAAFA,wBA4lCpFC,EAAAO,UAAS,EA5lC2ER,CA4lC1E,kBA5lC0EA,0BAAEO,GAAA,MAAAN,EAAFD,4BAAE,OAAFA,wBA6lCrFC,EAAAQ,SAAQ,EA7lC6ET,CA6lC5E,mBA7lC4EA,0BAAEO,GAAA,MAAAN,EAAFD,4BAAE,OAAFA,wBA8lCpFC,EAAAS,UAAS,GA9lC2EV,uBAAE,EAAAK,EAAA,sBAAFL,0BAkmCrF,MAAAP,EAAA,OAAAQ,EAlmCqFD,4BAAEW,EAAFX,wBAAE,GAAFA,mCAAE,mCAAAC,EAAAW,WAAA,IAAFZ,uBAAE,WAAAC,EAAAY,SAAFb,CA2lCxE,WAAAC,EAAAa,UA3lCwEd,wBAAE,QAAAC,EAAAc,OAAFf,+CAAE,mBAAAW,EAimCpD,WAAAK,EAAAvB,EAAAC,GAAA,EAAAD,GAjmCkDO,+BAAE,EAinCnC,UAAAiB,EAAAxB,EAAAC,GAAA,KAAAD,EAAA,OAAAyB,EAjnCiClB,0DAAE,SAAFA,uBAAE,mBAAFA,0BAAEkB,GAAA,MAAAjB,EAAFD,4BAAE,OAAFA,wBAymCpFC,EAAAO,UAAS,EAzmC2ER,CAymC1E,kBAzmC0EA,0BAAEkB,GAAA,MAAAjB,EAAFD,4BAAE,OAAFA,wBA0mCrFC,EAAAQ,SAAQ,EA1mC6ET,CA0mC5E,mBA1mC4EA,0BAAEkB,GAAA,MAAAjB,EAAFD,4BAAE,OAAFA,wBA2mCpFC,EAAAS,UAAS,GA3mC2EV,uBAAE,EAAAgB,EAAA,sBAAFhB,0BAknC1F,MAAAP,EAAA,OAAAQ,EAlnC0FD,4BAAEW,EAAFX,wBAAE,GAAFA,mCAAE,mCAAAC,EAAAW,WAAA,IAAFZ,uBAAE,WAAAC,EAAAY,SAAFb,CAwmCxE,OAAAC,EAAAkB,KAxmCwEnB,mDAAE,WAAAC,EAAAa,SAAFd,CAAE,SAAAC,EAAAjG,OAAFgG,CAAE,MAAAC,EAAAmB,IAAFpB,CAAE,QAAAC,EAAAc,OAAFf,+CAAE,mBAAAW,EAinCpD,WAAAU,EAAA5B,EAAAC,GAAA,EAAAD,IAjnCkDO,2BAAE,WAAFA,yBAAE,GAAFA,2BAunCvF,CApvCT,IAAIsB,EACOA,EAonCPC,GApnCOD,EAiBRA,IAAiBA,EAAe,CAAC,IAbnBA,EAAaE,UAAe,GAAK,YAI9CF,EAAaA,EAAaG,aAAkB,GAAK,eAIjDH,EAAaA,EAAaI,YAAiB,GAAK,cAIhDJ,EAAaA,EAAaK,OAAY,GAAK,SAM/C,MAAMC,EAIFC,YAAYC,EAAUC,GAClB7G,KAAK4G,SAAWA,EAChB5G,KAAK6G,mBAAqBA,CAC9B,CAIA,eAAOC,GACHJ,EAAcK,WAAWC,QAAQC,GAAOA,EAAIC,SAASC,QAAQ,CACzDC,OAAQhB,EAAaG,gBAEzBG,EAAcK,WAAWM,OAC7B,CAUAC,KAAKC,EAAeC,EAAcC,GAC9B,IAAKA,EACD,OAEJ,IAAIC,EACJ,OAAIF,EAAaG,aAEbD,EAAYH,EAAcK,gBAAgBH,EAAW,CAAEI,MAAO,EAAGjB,SAAU5G,KAAK4G,WAE1E5G,KAAK6G,mBAAmBiB,oBAS9BJ,EAAY1H,KAAK6G,mBAAmBe,gBAAgBH,EAAWzH,KAAK4G,WARpEc,EAAYH,EAAcK,gBAAgBH,EAAW,CAAEI,MAAO,EAAGjB,SAAU5G,KAAK4G,WAC5Ec,GACAK,WAAW,KACPtI,OAAO4B,SAAS2G,cAAc,QAAQC,YAAYP,EAAUQ,SAASC,cAAa,IAQ9FzB,EAAcK,WAAWqB,IAAIV,GAE7BF,EAAaa,yBAA8BhH,SAASiH,cACpDZ,EAAUR,SAASM,aAAeA,EAClCE,EAAUR,SAASqB,WAAWJ,cAAcK,QACrCd,CACX,CAOAe,MAAMf,GAEF,IAAKA,EACD,OAEJ,MAAMgB,EAAiBhB,EAAUR,SAASM,aAAaa,yBACvDX,EAAUiB,UAENjC,EAAcK,WAAW6B,IAAIlB,IAC7BhB,EAAcK,WAAW8B,OAAOnB,GAI/BA,EAAUQ,SAASC,cAAcW,iBAAiBC,qBACnDL,EAAeF,OAEvB,CAWAQ,uBACStC,EAAcuC,yBACf5H,SAASC,KAAK4H,kBAAkBC,iBAAiB,QAAS,IAAM,MAAM,GACtEzC,EAAcuC,wBAAyB,EAE/C,EAKJvC,EAAcuC,wBAAyB,EAIvCvC,EAAcK,WAAa,IAAIqC,IAC/B1C,EAAc2C,UAAI,SAAAC,GAAA,WAAAA,GAAwF5C,GAAV5B,qBAAyCA,YAAzCA,qBAAiEyE,sBAAqB,EACtL7C,EAAc8C,WADkF1E,+BAAE,CAAA2E,MACY/C,EAAagD,QAAbhD,EAAa2C,YAS3H,MAAMM,EAMFhD,YAAY4B,EAAYqB,EAAgBC,EAAwB,MAC5D7J,KAAKuI,WAAaA,EAClBvI,KAAK4J,eAAiBA,EACtB5J,KAAK6J,sBAAwBA,EAI7B7J,KAAKyI,MAAQ,IAAIqB,eAIjB9J,KAAK+J,KAAO,CAAC,EACb/J,KAAKgK,uBAAyB,IAAIC,eAClCjK,KAAKkK,2BAA6B,IAAID,eAKtCjK,KAAKmK,OAAS,CACV9K,KAAQ6D,GAAOxC,KAAS4B,UAAUY,EAAK,GAAIlD,KAAKwH,aAAa4C,KAC7D/H,MAASa,GAAOxC,KAAS4B,UAAUY,EAAK,EAAGlD,KAAKwH,aAAa4C,KAC7DpL,IAAOkE,GAAOxC,KAAS4B,UAAUY,GAAMlD,KAAKwH,aAAa4C,KACzDhI,OAAUc,GAAOxC,KAAS4B,UAAUY,EAAKlD,KAAKwH,aAAa4C,KAC3D,cAAelH,GAAOxC,KAAS4B,UAAUY,EAAK,GAAIlD,KAAKwH,aAAa4C,KACpE,eAAgBlH,GAAOxC,KAAS4B,UAAUY,EAAK,EAAGlD,KAAKwH,aAAa4C,MAKxEpK,KAAK2C,WAAa,CAAC,CACvB,CAIA0H,WACIrK,KAAKyB,UAAYzB,KAAKwH,aAAa/F,UAAU6I,MAAM,KAAK,GACxDtK,KAAK+J,KAAO/J,KAAKwH,aAAauC,KAE9B/J,KAAKuK,cACT,CAKAC,kBACI,MAAMC,EAAgBzK,KAAK0K,OAAOvC,cAIlC,GAAInI,KAAKwH,aAAamD,aAClB,UAAWC,KAAc5K,KAAKwH,aAAamD,aAAaL,MAAM,KAC1DG,EAAcI,UAAUzC,IAAIwC,IAIpC,EAAIE,uBAAoB9K,KAAK0K,OAAOvC,eAAe4C,OAAS,GACxDN,EAAcjC,QAElB,MAAMwC,EAAgBhL,KAAKwH,aAAayD,UAAU9C,cAC9CnI,KAAK6J,wBACL7J,KAAKkK,2BAA6BlK,KAAK6J,sBAAsBqB,KAAKC,UAAU,KACxEnL,KAAKoL,aAAY,IAGrBpL,KAAKwH,aAAa6D,kBAClBrL,KAAKgK,uBAAyBhK,KAAK4J,eAC9B0B,WAAWN,EAAeA,GAC1BG,UAAUI,IACXvL,KAAKoL,cACAG,EAAMC,SACPxL,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaK,QACxB,IAIbzG,KAAKoL,cAELrD,WAAW,IAAM/H,KAAKyL,sBAC1B,CAIAlB,eAAiB,CAKjBkB,sBAAwB,CAIxBL,cACI,MAAMM,EAAkB,IAAI5L,KAASE,KAAK2C,YAiB1C,IAAIgJ,EAAW3L,KAAKwH,aAAayD,UAAU9C,cACvCyD,EAAK5L,KAAK0K,OAAOvC,cACjB0D,EAAkB7L,KAAKyB,UAG3B,MAAMkB,EAAa3C,KAAKwH,aAAa/F,UAAU6I,MAAM,KAErDuB,EAAkBH,EAAgBhJ,kBAAkBiJ,EAAUC,EAAIjJ,GAElE,MAAMO,GAxBetB,EAACJ,EAAW1C,EAAQ2C,KACrC,IAAIyB,EACJ,OACIA,EADAlD,KAAKwH,aAAaG,aACZ3H,KAAKmK,OAAO1I,GAAWiK,EAAgBnK,aAAaC,EAAW1C,EAAQ2C,IAGvEzB,KAAKmK,OAAO1I,GAAWiK,EAAgB/J,aAAaH,EAAW1C,EAAQ2C,IAE7EzB,KAAKwH,aAAaxF,SAElBkB,EAAIlE,IAAMkE,EAAIlE,IAAMgB,KAAKwH,aAAaxF,OAAO8J,EAC7C5I,EAAI7D,KAAO6D,EAAI7D,KAAOW,KAAKwH,aAAaxF,OAAO+J,GAE5C7I,GAWCtB,CAAa+J,EAAUC,EAAIC,GAEvCH,EAAgBnJ,WAAWqJ,EAAI1I,IAC/B6E,WAAW,KAAQ/H,KAAKyB,UAAYoK,GACxC,CAKAG,YAAYC,GACR,OAAQA,EAAMC,KACV,IAAK,SACDD,EAAME,2BACNnM,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,SAElB,MAEJ,IAAK,OACDsN,eAAUH,EAAOjM,KAAKuI,WAAWJ,eAI7C,CAMAkE,WAAWJ,IACFjM,KAAKuI,WAAWJ,cAAcmE,SAASL,EAAMnN,UAC1CkB,KAAKwH,aAAayD,UAAU9C,cAAcmE,SAASL,EAAMnN,SAC7DkB,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QAG1B,CAIAqI,QAAQoF,EAAO,CAAEnF,OAAQhB,EAAaI,cAClCxG,KAAKyI,MAAM+D,KAAKD,EACpB,CAIAE,cACIzM,KAAKgK,uBAAuB0C,cACxB1M,KAAKkK,4BACLlK,KAAKkK,2BAA2BwC,aAExC,EAEJ/C,EAAON,UAAI,SAAAC,GAAA,WAAAA,GAAwFK,GA9LH7E,8BA8L2BA,cA9L3BA,8BA8LqD6H,kBA9LrD7H,8BA8LmF6H,wBAAwB,KAC3MhD,EAAOiD,UA/LyF9H,8BAAE,CAAA+H,KA+LXlD,EAAMmD,UAAA,gCAAAC,UAAA,SAAAxI,EAAAC,GA/LK,GA+LL,EAAAD,GA/LGO,wBAAEb,EAAA,KAAAM,EAAA,KAAAyI,EAAFlI,2BAAEkI,EAAFlI,6BAAEN,EAAAkG,OAAAsC,EAAAC,MAAA,GAAAC,aAAA,SAAA3I,EAAAC,GAAA,EAAAD,GAAFO,uBAAE,mBAAAqI,GAAA,OA+LX3I,EAAAwH,YAAAmB,EAAmB,EA/LVrI,CA+LH,iBAAAqI,GAAA,OAAN3I,EAAA6H,WAAAc,EAAkB,KA/LTrI,8BA+LH,EAAAsI,OAAA,CAAA5F,aAAA,gBAAA6F,QAAA,CAAA5E,MAAA,SAAA6E,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAjJ,EAAAC,GAAA,EAAAiJ,cAAA,IAiC7F,MAAMC,EAQF/G,YAAY4B,EAAYoF,EAAkBC,EAI1CC,GACI7N,KAAKuI,WAAaA,EAClBvI,KAAK2N,iBAAmBA,EACxB3N,KAAK4N,cAAgBA,EACrB5N,KAAK6N,aAAeA,EAIpB7N,KAAK6F,MAAQ,GAKb7F,KAAK8N,QAAU,QASf9N,KAAK+N,aAAe,aAIpB/N,KAAKyB,UAAY,OAIjBzB,KAAKoK,IAAM,EAIXpK,KAAK2H,cAAe,EAIpB3H,KAAK+J,KAAO,CAAC,EACb/J,KAAKgO,QAAS,EAIdhO,KAAK4F,UAAW,EAIhB5F,KAAKiO,QAAU,IAAInE,eAInB9J,KAAKkO,OAAS,IAAIpE,eAIlB9J,KAAKmO,aAAe,IAAIrE,eACxB9J,KAAKoO,KAAO,SACZpO,KAAKqO,UAAW,EAChBrO,KAAKsO,cAAgB,EACzB,CAKA,aAAIC,CAAUjN,GACVtB,KAAKwO,UAAYlN,CACrB,CACA,YAAImN,GACA,OAAOzO,KAAKgO,OAAShO,KAAKwH,aAAakH,OAAS,IACpD,CACAC,YAAYC,GAER5O,KAAKwH,aAAe,CAChB3B,MAAO7F,KAAK6F,MACZgJ,QAAS7O,KAAKwO,UACd/M,UAAWzB,KAAKyB,UAChBwJ,UAAWjL,KAAKuI,WAChB6B,IAAKpK,KAAKoK,IACV0D,QAAS9N,KAAK8N,QACdC,aAAc/N,KAAK+N,aACnBe,YAAa9O,KAAK8O,mBAAsB,GACxCnH,aAAc3H,KAAK2H,aACnBgD,aAAc3K,KAAK2K,aACnBZ,KAAM/J,KAAK+J,KACX/H,OAAQhC,KAAKgC,OACb4D,SAAU5F,KAAK4F,UAEfgJ,EAAQZ,SACJY,EAAQZ,OAAOe,aACf/O,KAAKsH,OAECsH,EAAQZ,OAAOgB,aACrBhP,KAAKyI,MAAM,CACPrB,OAAQhB,EAAaG,gBAKjCvG,KAAKiP,gBAAgBL,GACrB5O,KAAKkP,cACT,CAKA7E,WAEIrK,KAAK4N,cAAc5E,uBACnB,MAAMxG,EAAUxC,KAAKuI,WAAWJ,cAChCnI,KAAKsO,cAAca,QAAKC,aAAU5M,EAAS,WAAW2I,UAAWc,KACzDA,EAAMnN,SAAWkB,KAAKwH,aAAayD,UAAU9C,gBAC9B,QAAd8D,EAAMC,KAA+B,QAAdD,EAAMC,KAAiBD,EAAMoD,WACvC,WAAdpD,EAAMC,MACNlM,KAAKyI,MAAM,CACPrB,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QACjB,IAIY,UAAjBkB,KAAK8N,SAAwC,eAAjB9N,KAAK8N,QACjC9N,KAAKsO,cAAca,QAAKC,aAAU5M,EAAS,cAAc2I,UAAU,IAAMnL,KAAKsH,SAAM,EAAG8H,aAAU5M,EAASxC,KAAK+N,cAAc5C,UAAWc,IACpIjM,KAAKyI,MAAM,CACPrB,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QACjB,IACJ,EAAGsQ,aAAU5M,EAAS,SAAS2I,UAAU,IAAMnL,KAAKsH,SAAM,EAAG8H,aAAU5M,EAAS,QAAQ2I,UAAWc,IAChGjM,KAAKyI,MAAM,CACPrB,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QACjB,IAILkB,KAAKsO,cAAca,QAAKC,aAAU5M,EAAS,SAAS2I,UAAWc,IAC3DjM,KAAKsP,OAAO,CACRlI,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QACjB,IACJ,EAAGsQ,aAAU5M,EAAS,WAAW2I,UAAWc,KACvB,UAAdA,EAAMC,KAAiC,MAAdD,EAAMC,MAC/BnE,WAAW,KACP/H,KAAKsH,MAAK,EACb,IAIboG,EAAgB6B,gBAChBvP,KAAKwH,aAAakH,OAAS,UAAYhB,EAAgB6B,cAEvDvP,KAAKuK,eACLvK,KAAKkP,cACT,CAKAzC,cACIzM,KAAKyI,MAAM,CACPrB,OAAQhB,EAAaE,YAEzBtG,KAAKsO,cAActH,QAASwI,GAAiBA,EAAa9C,cAC9D,CAKApF,KAAKG,GAED,GAAIzH,KAAK0H,WAAa1H,KAAK4F,SACvB,OAGJ5F,KAAK0H,UAAY1H,KAAK4N,cAActG,KAAKtH,KAAK2N,iBAAkB3N,KAAKwH,aAAcC,GACnFzH,KAAKgO,QAAS,EACdhO,KAAKkO,OAAO1B,OACZxM,KAAKmO,aAAa3B,MAAK,GAGvB,MAAMgD,EAAexP,KAAK0H,UAAUR,SAASuB,MAAM0C,UAAWoB,IACrDvM,KAAK0H,WAGN1H,KAAKwH,aAAasH,aAAe9O,KAAKwH,aAAasH,YAAYvC,KAE/DvM,KAAK4N,cAAcnF,MAAMzI,KAAK0H,WAC9B1H,KAAK0H,UAAY,KACjB1H,KAAKgO,QAAS,EACdhO,KAAKiO,QAAQzB,OACbxM,KAAKmO,aAAa3B,MAAK,GACvBgD,EAAa9C,cAAY,GAGjC,OAAO1M,KAAK0H,SAChB,CAIA4H,OAAO/C,EAAO,CAAEnF,OAAQhB,EAAaI,cAC5BxG,KAAKgO,OAINhO,KAAKyI,MAAM8D,GAHXvM,KAAKsH,MAKb,CAIAmB,MAAM8D,EAAO,CAAEnF,OAAQhB,EAAaI,cAC5BxG,KAAK0H,WACL1H,KAAK0H,UAAUR,SAASC,QAAQoF,EAExC,CAKAhC,eAAiB,CAKjB0E,gBAAgBQ,GAAY,CAC5BP,eAAiB,EAErBxB,EAAgB6B,cAAgB,EAChC7B,EAAgBrE,UAAI,SAAAC,GAAA,WAAAA,GAAwFoE,GA/cZ5I,8BA+c6CA,cA/c7CA,8BA+cuEA,oBA/cvEA,8BA+cuG4B,GA/cvG5B,8BA+ciI6H,gBAAe,EAChPe,EAAgBgC,UAhdgF5K,8BAAE,CAAA+H,KAgdFa,EAAeZ,UAAA,0CAAA6C,SAAA,EAAAzC,aAAA,SAAA3I,EAAAC,GAAA,EAAAD,GAhdfO,wBAAE,gBAAAN,EAAAwJ,OAAFlJ,CAAE,OAAAN,EAAA4J,KAAFtJ,CAAE,gBAAAN,EAAA6J,SAAFvJ,CAAE,YAAAN,EAAAiK,SAAA,EAAArB,OAAA,CAAAvH,MAAA,QAAA0I,UAAA,YAAAC,UAAA,YAAAV,QAAA,UAAAC,aAAA,eAAAtM,UAAA,YAAAO,OAAA,SAAA2I,aAAA,eAAAP,IAAA,MAAAzC,aAAA,eAAAoC,KAAA,OAAAiE,OAAA,SAAApI,SAAA,WAAAkJ,YAAA,eAAAzB,QAAA,CAAAY,QAAA,UAAAC,OAAA,SAAAC,aAAA,gBAAAyB,SAAA,WAAAC,SAAA,CAAF/K,+BAgdwnB,CAChtB4B,IAjdwF5B,oCAihBhG,MAAMgL,UAAyBnG,EAC3BhD,YAAY4B,EAAYwH,EAAMC,EAAcnG,EAAwB,KAEpED,EAAiB,MACbqG,MAAM1H,EAAYqB,EAAgBC,GAClC7J,KAAKuI,WAAaA,EAClBvI,KAAK+P,KAAOA,EACZ/P,KAAKgQ,aAAeA,EACpBhQ,KAAK6J,sBAAwBA,EAC7B7J,KAAK4J,eAAiBA,CAC1B,CACAW,eACI,MAAM2F,EAAuBhN,IACzB,IAAIlB,EAMJ,MAAMmO,KAAaC,eAAY,WAAY,CAAC,WAAY,QAAS,YAAapQ,KAAKuI,WAAWJ,eACxFkI,EAASF,GAAsD,EAAzCA,EAAWhP,wBAAwBnC,IAAW,EACpEsR,EAAUH,GAAuD,EAA1CA,EAAWhP,wBAAwB9B,KAAY,EAE5E,OADA2C,EAAS/C,KAAKC,MAAMc,KAAK0K,OAAOvC,cAAc7I,YAAc,GAAK,GAC7DU,KAAKwH,aAAa+I,KACX7P,KAAS4B,UAAUY,EAAKmN,GAAUrO,EAASsO,GAE/C5P,KAAS4B,UAAUY,EAAKmN,EAASrO,EAASsO,EAAQ,EAE7DtQ,KAAKmK,OAAO/H,OAAY8N,EACxBlQ,KAAKmK,OAAOnL,IAASkR,EAChBlQ,KAAKwH,aAAagJ,YACnBxQ,KAAKwH,aAAagJ,UAAYxQ,KAAK+P,KAAKU,MAAMC,cAAcC,SAEpE,CACAC,SAAS3E,GACL,MAAM4E,EAAY7Q,KAAK6Q,YACvB,OAAQ5E,EAAMC,KACV,IAAK,YAED,GADAD,EAAM6E,kBAAe,EAChBC,qBAAkB9E,EAAO4E,GAK1BA,EAAU,GAAGrI,YALyB,CACtC,MAAMX,EAAQgJ,EAAUG,UAAUC,GAAQA,IAAShF,EAAMnN,QACzD+R,EAAUhJ,EAAQ,GAAGW,OACzB,CAIA,MACJ,IAAK,UAED,GADAyD,EAAM6E,kBAAe,EAChBI,sBAAmBjF,EAAO4E,GAK3BA,EAAUA,EAAU9F,OAAS,GAAGvC,YALO,CACvC,MAAMX,EAAQgJ,EAAUG,UAAUC,GAAQA,IAAShF,EAAMnN,QACzD+R,EAAUhJ,EAAQ,GAAGW,OACzB,CAIA,MACJ,IAAK,OACDyD,EAAM6E,iBACND,EAAU,GAAGrI,QACb,MACJ,IAAK,MACDyD,EAAM6E,iBACND,EAAUA,EAAU9F,OAAS,GAAGvC,QAChC,MACJ,IAAK,SACL,IAAK,MACDyD,EAAME,2BACNnM,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,SAK9B,CACAmP,QAAQhC,GACJjM,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QAEtB,CACA2M,sBACI,MAAM0F,EAAmBnR,KAAK6Q,YAC9BM,EAAiBnK,QAAQoK,IAEmB,OAApCA,EAAOC,aAAa,cACpBD,EAAOzL,UAAW,KAGtBwL,EAAiB,KACjBA,EAAiB,GAAGxL,SAAW,EAC/BwL,EAAiB,GAAG3I,QAE5B,CACAqI,YAEI,OAAOS,MAAMC,KAAKvR,KAAKuI,WAAWJ,cAAcW,iBAD/B,wFAErB,EAEJgH,EAAiBzG,UAAI,SAAAC,GAAA,WAAAA,GAAwFwG,GArnBbhL,8BAqnB+CA,cArnB/CA,8BAqnByE0M,QArnBzE1M,8BAqnB+F2M,uBArnB/F3M,8BAqnBoI6H,wBAAwB,GArnB5J7H,8BAqnByL6H,iBAAiB,KAC1SmD,EAAiBlD,UAtnB+E9H,8BAAE,CAAA+H,KAsnBDiD,EAAgBhD,UAAA,wDAAAI,aAAA,SAAA3I,EAAAC,GAAA,EAAAD,GAtnBjBO,uBAAE,mBAAAqI,GAAA,OAsnBD3I,EAAAoM,SAAAzD,EAAgB,IAAA0C,SAAA,CAtnBjB/K,wCAAEwI,MAAA,EAAAC,KAAA,GAAAmE,OAAA,uKAAAlE,SAAA,SAAAjJ,EAAAC,GAAA,KAAAD,EAAA,OAAAc,EAAFP,0DAAE,YAAFA,uBAAE,iBAAAqI,GAAFrI,iCAAEO,GAAFP,wBA+nBpFN,EAAAyJ,QAAAd,GAAe,GA/nBqErI,uBAAE,EAAAR,EAAA,qBAAFQ,0BAqoBzF,GAAAP,IAroByFO,uBAAE,UAAFA,4BAAE,EAAAZ,EAAAM,EAAAgD,aAAA+I,OAAFzL,wBAAE,KAAAN,EAAAgD,aAAAkH,OAAF5J,CAAE,aAAAN,EAAAgD,aAAAgJ,UAAF1L,CAAE,+BAAAN,EAAA/C,UAAA+C,EAAA/C,UAAA,KAAFqD,CAAE,aAAAN,EAAAgD,aAAAgJ,WAAF1L,sBAAE,GAAFA,uBAAE,mBAAAN,EAAAgD,aAAAqH,QAAF/J,CAkoBnD,0BAloBmDA,4BAAE,EAAAV,EAAAI,IAmoB9C,EAAAmN,aAAA,CAGUC,UAAgGA,oBAAqBnE,cAAA,IAoCnL,MAAMoE,UAA+BlI,EACjChD,YAAY4B,EAAYwH,EAAMlG,EAAwB,KAEtDD,EAAiB,MACbqG,MAAM1H,EAAYqB,EAAgBC,GAClC7J,KAAKuI,WAAaA,EAClBvI,KAAK+P,KAAOA,EACZ/P,KAAK6J,sBAAwBA,EAC7B7J,KAAK4J,eAAiBA,CAC1B,CACApE,QAAQyG,GACJjM,KAAKmH,QAAQ,CACTC,OAAQhB,EAAaI,YACrB1H,OAAQmN,EAAMnN,QAEtB,CACAyL,eACI,MAAM2F,EAAuBhN,IACzB,IAAIlB,EAMJ,MAAMmO,KAAaC,eAAY,WAAY,CAAC,WAAY,QAAS,YAAapQ,KAAKuI,WAAWJ,eACxFkI,EAASF,GAAsD,EAAzCA,EAAWhP,wBAAwBnC,IAAW,EACpEsR,EAAUH,GAAuD,EAA1CA,EAAWhP,wBAAwB9B,KAAY,EAE5E,OADA2C,EAAS/C,KAAKC,MAAMc,KAAK0K,OAAOvC,cAAc7I,YAAc,GAAK,GAC7DU,KAAKwH,aAAa+I,KACX7P,KAAS4B,UAAUY,EAAKmN,GAAUrO,EAASsO,GAE/C5P,KAAS4B,UAAUY,EAAKmN,EAASrO,EAASsO,EAAQ,EAE7DtQ,KAAKmK,OAAO/H,OAAY8N,EACxBlQ,KAAKmK,OAAOnL,IAASkR,EAChBlQ,KAAKwH,aAAagJ,YACnBxQ,KAAKwH,aAAagJ,UAAYxQ,KAAK+P,KAAKU,MAAMC,cAAcC,SAEpE,EAEJkB,EAAuBxI,UAAI,SAAAC,GAAA,WAAAA,GAAwFuI,GAltBnB/M,8BAktB2DA,cAltB3DA,8BAktBqF0M,QAltBrF1M,8BAktB2G6H,wBAAwB,GAltBnI7H,8BAktBgK6H,iBAAiB,KACjRkF,EAAuBjF,UAntByE9H,8BAAE,CAAA+H,KAmtBKgF,EAAsB/E,UAAA,sEAAA+C,SAAA,CAntB7B/K,wCAAEwI,MAAA,EAAAC,KAAA,GAAAmE,OAAA,uKAAAlE,SAAA,SAAAjJ,EAAAC,GAAA,KAAAD,EAAA,OAAAc,EAAFP,0DAAE,aAAFA,uBAAE,iBAAAqI,GAAFrI,iCAAEO,GAAFP,wBA2tBpFN,EAAAgB,QAAA2H,GAAe,GA3tBqErI,uBAAE,EAAAL,EAAA,qBAAFK,0BAkuBxF,GAAAP,IAluBwFO,uBAAE,UAAFA,4BAAE,EAAAZ,EAAAM,EAAAgD,aAAA+I,OAAFzL,wBAAE,KAAAN,EAAAgD,aAAAkH,OAAF5J,CAAE,aAAAN,EAAAgD,aAAAgJ,UAAF1L,CAAE,+BAAAN,EAAA/C,UAAA+C,EAAA/C,UAAA,KAAFqD,CAAE,aAAAN,EAAAgD,aAAAgJ,WAAF1L,sBAAE,GAAFA,uBAAE,mBAAAN,EAAAgD,aAAAqH,QAAF/J,CA+tBnD,0BA/tBmDA,4BAAE,EAAAV,EAAAI,IAguB9C,EAAAmN,aAAA,CAGUC,UAAgGA,oBAAqBnE,cAAA,IAoDnL,MAAMqE,UAA8BpE,EAIhC/G,YAAY4B,EAAYoF,EAAkBC,EAAeC,GACrDoC,MAAM1H,EAAYoF,EAAkBC,EAAeC,GACnD7N,KAAKuI,WAAaA,EAClBvI,KAAK2N,iBAAmBA,EACxB3N,KAAK4N,cAAgBA,EACrB5N,KAAK6N,aAAeA,EAIpB7N,KAAKuQ,MAAO,EAIZvQ,KAAK2K,aAAe,GAIpB3K,KAAK+R,YAAa,CACtB,CAKA,mBAAIC,CAAgBxE,GAChBxN,KAAKiS,gBAAkBzE,CAC3B,CACA0B,eACIlP,KAAKwH,aAAaqH,QAAU7O,KAAKiS,gBACjCjS,KAAKwH,aAAa+I,KAAOvQ,KAAKuQ,KAC9BvQ,KAAKwH,aAAaxF,OAAShC,KAAKgC,OAChChC,KAAKwH,aAAamD,aAAe3K,KAAK2K,YAC1C,CACAiG,SAAS3E,GACL,OAAQA,EAAMC,KACV,IAAK,QACL,IAAK,IACDD,EAAM6E,iBAGlB,CACAxJ,OACI,OAAO2I,MAAM3I,KAAKtH,KAAK+R,WAAaF,EAAyB/B,EACjE,EAEJgC,EAAsBzI,UAAI,SAAAC,GAAA,WAAAA,GAAwFwI,GAv0BlBhN,8BAu0ByDA,cAv0BzDA,8BAu0BmFA,oBAv0BnFA,8BAu0BmH4B,GAv0BnH5B,8BAu0B6I6H,gBAAe,EAC5PmF,EAAsBpC,UAx0B0E5K,8BAAE,CAAA+H,KAw0BIiF,EAAqBhF,UAAA,sDAAAI,aAAA,SAAA3I,EAAAC,GAAA,EAAAD,GAx0B3BO,uBAAE,mBAAAqI,GAAA,OAw0BI3I,EAAAoM,SAAAzD,EAAgB,EAAK,EAAAC,OAAA,CAAA4E,gBAAA,kBAAAC,gBAAA,kBAAA1B,KAAA,OAAAvO,OAAA,SAAA2I,aAAA,eAAAoH,WAAA,cAAAnC,SAAA,iBAAAC,SAAA,CAx0B3B/K,+BAw0B8T,CACtZ4B,IAz0BwF5B,0CAu3BhG,MAAMoN,UAAqBC,iBACvBxL,YAAY4B,EAAYwH,GACpBE,QACAjQ,KAAKuI,WAAaA,EAClBvI,KAAK+P,KAAOA,EACZ/P,KAAKoS,YAAcpS,KAAK+P,KAAKU,MAAMC,cAAcC,SACjD3Q,KAAKqS,YAAcrS,KAAK+P,KAAKU,MAAMC,cAAc4B,iBACjDtS,KAAKuQ,MAAO,EACZvQ,KAAKyB,UAAY,SACjBzB,KAAKsH,MAAO,EACZtH,KAAKuS,WAAa,IAAIzI,eACtB9J,KAAK2K,aAAe,GAIpB3K,KAAKwS,aAAe,EACxB,CACAC,iBAAiBxG,GACbjM,KAAKsH,KAAO2E,EACZjM,KAAKuS,WAAW/F,KAAKP,EACzB,EAEJiG,EAAa7I,UAAI,SAAAC,GAAA,WAAAA,GAAwF4I,GA74BTpN,8BA64BuCA,cA74BvCA,8BA64BiE0M,QAAS,EAC1KU,EAAatF,UA94BmF9H,8BAAE,CAAA+H,KA84BLqF,EAAYpF,UAAA,8CAAA4F,eAAA,SAAAnO,EAAAC,EAAAmO,GAAia,GAAja,EAAApO,GA94BTO,2BAAE6N,EA84BmZb,EAAqB,KAAAvN,EAAA,KAAAyI,EA94B1alI,2BAAEkI,EAAFlI,6BAAEN,EAAAoO,sBAAA5F,EAAAC,MAAA,GAAAG,OAAA,CAAAgF,YAAA,cAAAC,YAAA,cAAA9B,KAAA,OAAA9O,UAAA,YAAA6F,KAAA,OAAAtC,cAAA,gBAAAhD,OAAA,SAAA2I,aAAA,eAAA6H,aAAA,gBAAAnF,QAAA,CAAAkF,WAAA,cAAA1C,SAAA,CAAF/K,wCAAE+N,mBAAAnO,EAAA4I,MAAA,EAAAC,KAAA,GAAAmE,OAAA,gdAAAlE,SAAA,SAAAjJ,EAAAC,GAAA,KAAAD,EAAA,OAAAc,EAAFP,wFAAE,kBAAFA,CAy5B/D,cAz5B+DA,uBAAE,wBAAAqI,GAAFrI,iCAAEO,GAAFP,wBAm6B5EN,EAAAiO,iBAAAtF,GAAwB,GAn6BoDrI,uBAAE,EAAAD,EAAA,YAAFC,oDAAE,EAAAG,EAAA,yBAAFH,oCA66BxE,EAAAI,EAAA,yBA76BwEJ,mCAg7BpE,MAAAP,EAAA,OAAAuO,EAh7BoEhO,wBAAE,GAAAiO,EAAFjO,wBAAE,GAAFA,uBAAE,cAAAN,EAAA6N,YAAFvN,CAi5BlE,QAAAN,EAAAwO,MAj5BkElO,CAk5B9E,aAAAN,EAAAyO,WAl5B8EnO,CAm5BpE,eAAAN,EAAA0O,aAn5BoEpO,CAo5BhE,SAAAN,EAAAwJ,OAp5BgElJ,CAq5B5E,QAAAN,EAAA2O,MAr5B4ErO,CAs5B9E,YAAAN,EAAA4O,UAt5B8EtO,CAu5BtE,eAAAN,EAAA6O,aAv5BsEvO,CAw5BhE,eAAAN,EAAA8O,cAx5BgExO,2DAAE,sBAAAN,EAAAgO,aAAA,IAAF1N,uBAAE,kBAAAgO,EAAFhO,CA45BjE,UA55BiEA,4BAAE,GAAAH,EAAAH,EAAA8C,MAAFxC,CA65B9C,cA75B8CA,CA+5B3E,OAAAN,EAAA+L,KA/5B2EzL,CAi6B/E,SAAAN,EAAA8C,KAj6B+ExC,CAk6B7E,SAAAN,EAAAxC,OAl6B6E8C,CAo6B3E,eAAAN,EAAAmG,aAp6B2E7F,CAq6B/D,YAAAN,EAAA/C,WAr6B+DqD,wBAAE,aAAAN,EAAA4N,aAAFtN,+CAAE,OAAAN,EAAAQ,cAAFF,CAy6BzD,WAAAiO,EAAgB,GAAApB,aAAA,CAUkMC,UAAgGA,OAAsGA,mBAAyK2B,gBAA8LC,SAAkKC,UAA6K3B,GAAqB4B,OAAA,kLAAAjG,cAAA,IAsE1oC,SAAWpH,GACPA,EAAOsN,KAAU,QACjBtN,EAAOuN,MAAW,SAClBvN,EAAOwN,OAAY,UACnBxN,EAAOrH,IAAS,MACpB,CALA,CAKGqH,IAAWA,EAAS,CAAC,IAiBxB,MAAMyN,EACFnN,YAAY4B,GACRvI,KAAKuI,WAAaA,EAClBvI,KAAK+T,aAAc,EACnB/T,KAAKoO,KAAO,eAIZpO,KAAKgU,SAAU,EAIfhU,KAAK6M,KAAO,SAIZ7M,KAAK4F,UAAW,EAIhB5F,KAAK0F,WAAa,GAClB1F,KAAKiU,SAAW,IAAInK,eACpB9J,KAAK2F,UAAW,EAGhB3F,KAAK6F,MAAQ,IACjB,CACA,YAAIqO,GACA,MAAqB,WAAdlU,KAAK6M,IAChB,CACA,cAAIsH,GACA,OAAOnU,KAAK4F,QAChB,CAIA,UAAI9G,CAAOyM,GACFtL,OAAOmU,OAAO/N,GAAQgO,SAAS9I,GAKpCvL,KAAKsU,QAAU/I,EAJXzH,QAAQyQ,KAAK,qDAAqDtU,OAAOmU,OAAO/N,GAAQmO,KAAK,+EAKrG,CACA,UAAI1V,GACA,OAAOkB,KAAKsU,OAChB,CAIA,OAAIpO,GACA,OAAOlG,KAAKsU,QAhER,sBAgEwB,IAChC,CACA9O,UACIxF,KAAKiU,SAASzH,MAClB,CACAlH,UACIyC,WAAW,IAAM/H,KAAK2F,SAAW,EACrC,CACAJ,SACIwC,WAAW,IAAM/H,KAAK2F,UAAW,EACrC,CACA6E,kBACI,MAAM4G,EAASpR,KAAKuI,WAAWJ,cAAcH,cAAc,aACrDyM,EAAgBrD,EAAOpJ,cAAc,+CACvCyM,EAAcC,YAAcD,EAAcnV,cAC1CU,KAAK6F,MAAQuL,EAAOuD,YAE5B,EAEJb,EAAmBzK,UAAI,SAAAC,GAAA,WAAAA,GAAwFwK,GArlCfhP,8BAqlCmDA,cAAa,EAChKgP,EAAmBlH,UAtlC6E9H,8BAAE,CAAA+H,KAslCCiH,EAAkBhH,UAAA,4DAAA6C,SAAA,EAAAzC,aAAA,SAAA3I,EAAAC,GAAA,EAAAD,IAtlCrBO,wBAAE,OAAAN,EAAA4J,MAAFtJ,wBAAE,qCAAAN,EAAAuP,YAAFjP,CAslCqB,6CAAAN,EAAA0P,SAtlCrBpP,CAslCqB,+CAAAN,EAAA2P,WAtlCrBrP,CAslCqB,8BAAAN,EAAAwP,SAAA,EAAA5G,OAAA,CAAA4G,QAAA,UAAAnH,KAAA,OAAAjH,SAAA,WAAAK,KAAA,OAAAnH,OAAA,SAAA4G,WAAA,cAAA2H,QAAA,CAAA4G,SAAA,YAAApB,mBAAAnO,EAAA4I,MAAA,EAAAC,KAAA,EAAAmE,OAAA,kYAAAlE,SAAA,SAAAjJ,EAAAC,GAAA,EAAAD,IAtlCrBO,qDAAE,EAAAM,EAAA,eAAFN,CAgmCxE,EAAAiB,EAAA,WAhmCwEjB,CAgnCxE,EAAAqB,EAAA,yBAhnCwErB,qCAonCrE,EAAAP,IApnCqEO,uBAAE,QAAAN,EAAAyB,MAAFnB,+CAAE,OAAAN,EAAAyB,MAqmCpF,EAAA0L,aAAA,CAoBgDC,OAAsGA,oBAAqBnE,cAAA,IA0EzL,MAAMmH,GAENA,EAAavL,UAAI,SAAAC,GAAA,WAAAA,GAAwFsL,EAAY,EACrHA,EAAaC,UAtsCmF/P,6BAAE,CAAA+H,KAssCQ+H,IAoB1GA,EAAaE,UA1tCmFhQ,6BAAE,CAAAiQ,UA0tCiC,CAACrO,GAAcsO,QAAA,CAAYC,eACtJC,aACAC,oBACAC,qBACAC,cACAC,aACAC,eACAC","names":["_a","PLACEMENTS","LEFT","RIGHT","TOP","BOTTOM","defaultPositions","referenceOffset","target","referenceRect","top","Math","round","offsetHeight","height","left","offsetWidth","width","windowRef","window","innerHeight","scrollY","innerWidth","scrollX","Position","positions","this","Object","assign","prototype","getRelativeOffset","offsets","offsetLeft","offsetTop","offsetParent","getComputedStyle","position","getAbsoluteOffset","currentNode","margins","computed","marginLeft","marginTop","parseInt","targetRect","getBoundingClientRect","relativeRect","document","body","findRelative","reference","placement","calculatePosition","findAbsolute","findPosition","offsetFunction","bind","findPositionAt","offset","getPlacementBox","targetBottom","targetRight","bottom","right","addOffset","setElement","element","style","findBestPlacement","placements","containerFunction","positionFunction","_this","defaultContainerFunction","weightedPlacements","map","pos","box","hiddenHeight","hiddenWidth","container","area","weight","sort","a","b","findBestPlacementAt","_","console","error","__WEBPACK_DEFAULT_EXPORT__","_c0","_c1","a0","_c2","overflowMenu","OverflowMenuPane_ng_template_2_Template","rf","ctx","OverflowMenuCustomPane_ng_template_2_Template","_c3","_c4","OverflowMenu_2_ng_template_0_Template","OverflowMenu_2_Template","i0","ctx_r1","customTrigger","OverflowMenu_ng_template_3_Template","OverflowMenu_ng_template_5_Template","OverflowMenuOption_button_0_ng_container_1_Template","OverflowMenuOption_button_0_Template","_r1","onFocus","onBlur","onClick","tempOutlet_r3","innerClass","tabIndex","disabled","title","OverflowMenuOption_a_1_ng_container_1_Template","OverflowMenuOption_a_1_Template","_r4","href","rel","OverflowMenuOption_ng_template_2_Template","CloseReasons","Target","destroyed","programmatic","interaction","hidden","DialogService","constructor","injector","placeholderService","closeAll","dialogRefs","forEach","ref","instance","doClose","reason","clear","open","viewContainer","dialogConfig","component","dialogRef","appendInline","createComponent","index","hasPlaceholderRef","setTimeout","querySelector","appendChild","location","nativeElement","add","previouslyFocusedElement","activeElement","elementRef","focus","close","elementToFocus","destroy","has","delete","querySelectorAll","tabbableSelector","singletonClickListen","listeningForBodyClicks","firstElementChild","addEventListener","Set","ɵfac","__ngFactoryType__","i1","ɵprov","token","factory","Dialog","elementService","animationFrameService","EventEmitter","data","visibilitySubscription","Subscription","animationFrameSubscription","addGap","gap","ngOnInit","split","onDialogInit","ngAfterViewInit","dialogElement","dialog","wrapperClass","extraClass","classList","getFocusElementList","length","parentElement","parentRef","tick","subscribe","placeDialog","closeWhenHidden","visibility","value","visible","afterDialogViewInit","positionService","parentEl","el","dialogPlacement","y","x","escapeClose","event","key","stopImmediatePropagation","cycleTabs","clickClose","contains","meta","emit","ngOnDestroy","unsubscribe","i2","ɵcmp","type","selectors","viewQuery","_t","first","hostBindings","$event","inputs","outputs","decls","vars","template","encapsulation","DialogDirective","viewContainerRef","dialogService","eventService","trigger","closeTrigger","isOpen","onClose","onOpen","isOpenChange","role","hasPopup","subscriptions","ibmDialog","cdsDialog","ariaOwns","compID","ngOnChanges","changes","content","shouldClose","currentValue","firstChange","onDialogChanges","updateConfig","push","fromEvent","shiftKey","toggle","dialogCounter","subscription","_changes","ɵdir","hostVars","exportAs","features","OverflowMenuPane","i18n","experimental","super","positionOverflowMenu","closestRel","closestAttr","topFix","leftFix","flip","menuLabel","get","OVERFLOW_MENU","OVERFLOW","hostkeys","listItems","preventDefault","isFocusInLastItem","findIndex","item","isFocusInFirstItem","focusElementList","button","getAttribute","Array","from","i1$1","i2$1","consts","dependencies","i2$2","OverflowMenuCustomPane","OverflowMenuDirective","customPane","ibmOverflowMenu","cdsOverflowMenu","OverflowMenu","BaseIconButton","buttonLabel","description","ICON_DESCRIPTION","openChange","triggerClass","handleOpenChange","contentQueries","dirIndex","overflowMenuDirective","ngContentSelectors","options_r3","defaultIcon_r4","caret","dropShadow","highContrast","align","autoAlign","enterDelayMs","leaveDelayMs","i3","i4","i5","styles","self","blank","parent","OverflowMenuOption","optionClass","divider","selected","isDanger","isDisabled","values","includes","_target","warn","join","textContainer","scrollWidth","textContent","DialogModule","ɵmod","ɵinj","providers","imports","CommonModule","I18nModule","PlaceholderModule","ExperimentalModule","UtilsModule","IconModule","ButtonModule","TooltipModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/node_modules/@carbon/utils-position/index.js","./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-dialog.mjs"],"sourcesContent":["/**\n * Utilites to manipulate the position of elements relative to other elements\n */\nvar _a;\nexport var PLACEMENTS;\n(function (PLACEMENTS) {\n    PLACEMENTS[\"LEFT\"] = \"left\";\n    PLACEMENTS[\"RIGHT\"] = \"right\";\n    PLACEMENTS[\"TOP\"] = \"top\";\n    PLACEMENTS[\"BOTTOM\"] = \"bottom\";\n})(PLACEMENTS || (PLACEMENTS = {}));\nexport var defaultPositions = (_a = {},\n    _a[PLACEMENTS.LEFT] = function (referenceOffset, target, referenceRect) { return ({\n        top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),\n        left: Math.round(referenceOffset.left - target.offsetWidth)\n    }); },\n    _a[PLACEMENTS.RIGHT] = function (referenceOffset, target, referenceRect) { return ({\n        top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),\n        left: Math.round(referenceOffset.left + referenceRect.width)\n    }); },\n    _a[PLACEMENTS.TOP] = function (referenceOffset, target, referenceRect) { return ({\n        top: Math.round(referenceOffset.top - target.offsetHeight),\n        left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)\n    }); },\n    _a[PLACEMENTS.BOTTOM] = function (referenceOffset, target, referenceRect) { return ({\n        top: Math.round(referenceOffset.top + referenceRect.height),\n        left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)\n    }); },\n    _a);\nvar windowRef = typeof window !== \"undefined\" ? window : {\n    innerHeight: 0,\n    scrollY: 0,\n    innerWidth: 0,\n    scrollX: 0\n};\nvar Position = /** @class */ (function () {\n    function Position(positions) {\n        if (positions === void 0) { positions = {}; }\n        this.positions = defaultPositions;\n        this.positions = Object.assign({}, defaultPositions, positions);\n    }\n    Position.prototype.getRelativeOffset = function (target) {\n        // start with the initial element offsets\n        var offsets = {\n            left: target.offsetLeft,\n            top: target.offsetTop\n        };\n        // get each static (i.e. not absolute or relative) offsetParent and sum the left/right offsets\n        while (target.offsetParent && getComputedStyle(target.offsetParent).position === \"static\") {\n            offsets.left += target.offsetLeft;\n            offsets.top += target.offsetTop;\n            target = target.offsetParent;\n        }\n        return offsets;\n    };\n    Position.prototype.getAbsoluteOffset = function (target) {\n        var currentNode = target;\n        var margins = {\n            top: 0,\n            left: 0\n        };\n        // searches for containing elements with additional margins\n        while (currentNode.offsetParent) {\n            var computed = getComputedStyle(currentNode.offsetParent);\n            // find static elements with additional margins\n            // since they tend to throw off our positioning\n            // (usually this is just the body)\n            if (computed.position === \"static\" &&\n                computed.marginLeft &&\n                computed.marginTop) {\n                if (parseInt(computed.marginTop, 10)) {\n                    margins.top += parseInt(computed.marginTop, 10);\n                }\n                if (parseInt(computed.marginLeft, 10)) {\n                    margins.left += parseInt(computed.marginLeft, 10);\n                }\n            }\n            currentNode = currentNode.offsetParent;\n        }\n        var targetRect = target.getBoundingClientRect();\n        var relativeRect = document.body.getBoundingClientRect();\n        return {\n            top: targetRect.top - relativeRect.top + margins.top,\n            left: targetRect.left - relativeRect.left + margins.left\n        };\n    };\n    // finds the position relative to the `reference` element\n    Position.prototype.findRelative = function (reference, target, placement) {\n        var referenceOffset = this.getRelativeOffset(reference);\n        var referenceRect = reference.getBoundingClientRect();\n        return this.calculatePosition(referenceOffset, referenceRect, target, placement);\n    };\n    Position.prototype.findAbsolute = function (reference, target, placement) {\n        var referenceOffset = this.getAbsoluteOffset(reference);\n        var referenceRect = reference.getBoundingClientRect();\n        return this.calculatePosition(referenceOffset, referenceRect, target, placement);\n    };\n    Position.prototype.findPosition = function (reference, target, placement, offsetFunction) {\n        if (offsetFunction === void 0) { offsetFunction = this.getAbsoluteOffset.bind(this); }\n        var referenceOffset = offsetFunction(reference);\n        var referenceRect = reference.getBoundingClientRect();\n        return this.calculatePosition(referenceOffset, referenceRect, target, placement);\n    };\n    Position.prototype.findPositionAt = function (offset, target, placement) {\n        return this.calculatePosition(offset, { top: 0, left: 0, height: 0, width: 0 }, target, placement);\n    };\n    /**\n     * Get the dimensions of an element from an AbsolutePosition and a reference element\n     */\n    Position.prototype.getPlacementBox = function (target, position) {\n        var targetBottom = target.offsetHeight + position.top;\n        var targetRight = target.offsetWidth + position.left;\n        return {\n            top: position.top,\n            bottom: targetBottom,\n            left: position.left,\n            right: targetRight\n        };\n    };\n    Position.prototype.addOffset = function (position, top, left) {\n        if (top === void 0) { top = 0; }\n        if (left === void 0) { left = 0; }\n        return Object.assign({}, position, {\n            top: position.top + top,\n            left: position.left + left\n        });\n    };\n    Position.prototype.setElement = function (element, position) {\n        element.style.top = position.top + \"px\";\n        element.style.left = position.left + \"px\";\n    };\n    Position.prototype.findBestPlacement = function (reference, target, placements, containerFunction, positionFunction) {\n        var _this = this;\n        if (containerFunction === void 0) { containerFunction = this.defaultContainerFunction.bind(this); }\n        if (positionFunction === void 0) { positionFunction = this.findPosition.bind(this); }\n        /**\n         * map over the array of placements and weight them based on the percentage of visible area\n         * where visible area is defined as the area not obscured by the window borders\n         */\n        var weightedPlacements = placements.map(function (placement) {\n            var pos = positionFunction(reference, target, placement);\n            var box = _this.getPlacementBox(target, pos);\n            var hiddenHeight = 0;\n            var hiddenWidth = 0;\n            var container = containerFunction();\n            // the element is exceeding from top or bottom of its container\n            if (box.top < container.top) {\n                hiddenHeight = container.top - box.top;\n            }\n            else if (box.bottom > container.height) {\n                hiddenHeight = box.bottom - container.height;\n            }\n            // the element is exceeding from left or right of its container\n            if (box.left < container.left) {\n                hiddenWidth = container.left - box.left;\n            }\n            else if (box.right > container.width) {\n                hiddenWidth = box.right - container.width;\n            }\n            // if one of the hidden dimensions is 0 but the other is > 0\n            // we want to have a positive area, so setting the null one to 1\n            if (hiddenHeight && !hiddenWidth) {\n                hiddenWidth = 1;\n            }\n            else if (hiddenWidth && !hiddenHeight) {\n                hiddenHeight = 1;\n            }\n            var area = target.offsetHeight * target.offsetWidth;\n            var hiddenArea = hiddenHeight * hiddenWidth;\n            // if visibleArea is 0 it means the element is fully outside container bounds\n            // and visiblePercent will then be 0\n            var visibleArea = area - hiddenArea;\n            var visiblePercent = visibleArea / area;\n            return {\n                placement: placement,\n                weight: visiblePercent\n            };\n        });\n        // sort the placements from best to worst\n        weightedPlacements.sort(function (a, b) { return b.weight - a.weight; });\n        // pick the best!\n        return weightedPlacements[0].placement;\n    };\n    Position.prototype.findBestPlacementAt = function (offset, target, placements, containerFunction) {\n        var _this = this;\n        if (containerFunction === void 0) { containerFunction = this.defaultContainerFunction.bind(this); }\n        var positionAt = function (_, target, placement) {\n            return _this.findPositionAt(offset, target, placement);\n        };\n        return this.findBestPlacement(null, target, placements, containerFunction, positionAt);\n    };\n    Position.prototype.defaultContainerFunction = function () {\n        return {\n            // we go with window here, because that's going to be the simple/common case\n            top: 0,\n            left: 0,\n            height: windowRef.innerHeight,\n            width: windowRef.innerWidth\n        };\n    };\n    Position.prototype.calculatePosition = function (referenceOffset, referenceRect, target, placement) {\n        if (this.positions[placement]) {\n            return this.positions[placement](referenceOffset, target, referenceRect);\n        }\n        console.error(\"No function found for placement, defaulting to 0,0\");\n        return { left: 0, top: 0 };\n    };\n    return Position;\n}());\nexport { Position };\nexport var position = new Position();\nexport default Position;\n","import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Optional, Output, Input, ViewChild, HostListener, Directive, HostBinding, ViewEncapsulation, ContentChild, NgModule } from '@angular/core';\nimport { tabbableSelector, getFocusElementList, cycleTabs, isFocusInFirstItem, isFocusInLastItem } from 'carbon-components-angular/common';\nimport * as i1 from 'carbon-components-angular/placeholder';\nimport { PlaceholderModule } from 'carbon-components-angular/placeholder';\nimport { Subscription, fromEvent } from 'rxjs';\nimport Position, { position } from '@carbon/utils-position';\nimport * as i2 from 'carbon-components-angular/utils';\nimport { closestAttr, UtilsModule } from 'carbon-components-angular/utils';\nimport * as i1$1 from 'carbon-components-angular/i18n';\nimport { I18nModule } from 'carbon-components-angular/i18n';\nimport * as i2$1 from 'carbon-components-angular/experimental';\nimport { ExperimentalModule } from 'carbon-components-angular/experimental';\nimport * as i2$2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'carbon-components-angular/button';\nimport { BaseIconButton, ButtonModule } from 'carbon-components-angular/button';\nimport * as i3 from 'carbon-components-angular/icon';\nimport { IconModule } from 'carbon-components-angular/icon';\nimport * as i5 from 'carbon-components-angular/tooltip';\nimport { TooltipModule } from 'carbon-components-angular/tooltip';\n\n/**\n * An enum of the various reasons a dialog may close. For use with `CloseMeta` and `shouldClose`\n *\n * It's expected that `interaction` will be a common closure reason.\n */\nvar CloseReasons;\n(function (CloseReasons) {\n    /**\n     * For when the component is closed by being destroyed\n     */\n    CloseReasons[CloseReasons[\"destroyed\"] = 0] = \"destroyed\";\n    /**\n     * For use in cases where the dialog closes for programmatic reasons other than destruction\n     */\n    CloseReasons[CloseReasons[\"programmatic\"] = 1] = \"programmatic\";\n    /**\n     * interaction reasons will also provide a target for the interaction\n     */\n    CloseReasons[CloseReasons[\"interaction\"] = 2] = \"interaction\";\n    /**\n     * For use in cases where the dialog closes due to being hidden\n     */\n    CloseReasons[CloseReasons[\"hidden\"] = 3] = \"hidden\";\n})(CloseReasons || (CloseReasons = {}));\n\n/**\n * `Dialog` object to be injected into other components.\n */\nclass DialogService {\n    /**\n     * Creates an instance of `DialogService`.\n     */\n    constructor(injector, placeholderService) {\n        this.injector = injector;\n        this.placeholderService = placeholderService;\n    }\n    /**\n     * Closes all known `Dialog`s. Does not focus any previous elements, since we can't know which would be correct\n     */\n    static closeAll() {\n        DialogService.dialogRefs.forEach(ref => ref.instance.doClose({\n            reason: CloseReasons.programmatic\n        }));\n        DialogService.dialogRefs.clear();\n    }\n    /**\n     * If `dialogRef` is defined, the Dialog is already open. If\n     * `dialogRef` is undefined, we create the `Dialog` component and reference to it.\n     * A subscription is created to track if the `Dialog` should close.\n     *\n     * @param viewContainer a `ViewContainerRef` to instantiate the component against.\n     * May be `null` if an `cds-placeholder` exists and `dialogConfig.appendInline` is false\n     * @param dialogConfig the `DialogConfig` for the component\n     */\n    open(viewContainer, dialogConfig, component) {\n        if (!component) {\n            return;\n        }\n        let dialogRef;\n        if (dialogConfig.appendInline) {\n            // add our component to the view\n            dialogRef = viewContainer.createComponent(component, { index: 0, injector: this.injector });\n        }\n        else if (!this.placeholderService.hasPlaceholderRef()) {\n            dialogRef = viewContainer.createComponent(component, { index: 0, injector: this.injector });\n            if (dialogRef) {\n                setTimeout(() => {\n                    window.document.querySelector(\"body\").appendChild(dialogRef.location.nativeElement);\n                });\n            }\n        }\n        else {\n            dialogRef = this.placeholderService.createComponent(component, this.injector);\n        }\n        // keep track of all initialized dialogs\n        DialogService.dialogRefs.add(dialogRef);\n        // initialize some extra options\n        dialogConfig[\"previouslyFocusedElement\"] = document.activeElement;\n        dialogRef.instance.dialogConfig = dialogConfig;\n        dialogRef.instance.elementRef.nativeElement.focus();\n        return dialogRef;\n    }\n    /**\n     * On close of `Dialog` item, sets focus back to previous item, unsets\n     * the current `dialogRef` item. Unsubscribes to the event of `Dialog` close.\n     *\n     * @param dialogRef the dialogRef to close\n     */\n    close(dialogRef) {\n        // to handle the case where we have a null `this.dialogRef`\n        if (!dialogRef) {\n            return;\n        }\n        const elementToFocus = dialogRef.instance.dialogConfig[\"previouslyFocusedElement\"];\n        dialogRef.destroy();\n        // update the globally tracked dialogRefs\n        if (DialogService.dialogRefs.has(dialogRef)) {\n            DialogService.dialogRefs.delete(dialogRef);\n        }\n        // Keeps the focus on the dialog trigger if there are no focusable elements. Change focus to previously focused element\n        // if there are focusable elements in the dialog.\n        if (!dialogRef.location.nativeElement.querySelectorAll(tabbableSelector)) {\n            elementToFocus.focus();\n        }\n    }\n    /**\n     * Fix for safari hijacking clicks.\n     *\n     * Runs on `ngOnInit` of every dialog. Ensures we don't have multiple listeners\n     * because having many of them could degrade performance in certain cases (and is\n     * not necessary for our use case)\n     *\n     * This is an internally used function, can change at any point (even get removed)\n     * and changes to it won't be considered a breaking change. Use at your own risk.\n     */\n    singletonClickListen() {\n        if (!DialogService.listeningForBodyClicks) {\n            document.body.firstElementChild.addEventListener(\"click\", () => null, true);\n            DialogService.listeningForBodyClicks = true;\n        }\n    }\n}\n/**\n * Used in `singletonClickListen`, don't count on its existence and values.\n */\nDialogService.listeningForBodyClicks = false;\n/**\n * A set of all known dialog components\n */\nDialogService.dialogRefs = new Set();\nDialogService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogService, deps: [{ token: i0.Injector }, { token: i1.PlaceholderService }], target: i0.ɵɵFactoryTarget.Injectable });\nDialogService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.PlaceholderService }]; } });\n\n/**\n * Implements a `Dialog` that can be positioned anywhere on the page.\n * Used to implement a popover or tooltip.\n */\nclass Dialog {\n    /**\n     * Creates an instance of `Dialog`.\n     * @param elementRef\n     * @param elementService\n     */\n    constructor(elementRef, elementService, animationFrameService = null) {\n        this.elementRef = elementRef;\n        this.elementService = elementService;\n        this.animationFrameService = animationFrameService;\n        /**\n         * Emits event that handles the closing of a `Dialog` object.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Stores the data received from `dialogConfig`.\n         */\n        this.data = {};\n        this.visibilitySubscription = new Subscription();\n        this.animationFrameSubscription = new Subscription();\n        /**\n         * Handles offsetting the `Dialog` item based on the defined position\n         * to not obscure the content beneath.\n         */\n        this.addGap = {\n            \"left\": pos => position.addOffset(pos, 0, -this.dialogConfig.gap),\n            \"right\": pos => position.addOffset(pos, 0, this.dialogConfig.gap),\n            \"top\": pos => position.addOffset(pos, -this.dialogConfig.gap),\n            \"bottom\": pos => position.addOffset(pos, this.dialogConfig.gap),\n            \"left-bottom\": pos => position.addOffset(pos, 0, -this.dialogConfig.gap),\n            \"right-bottom\": pos => position.addOffset(pos, 0, this.dialogConfig.gap)\n        };\n        /**\n         * Extra placements. Child classes can add to this for use in `placeDialog`.\n         */\n        this.placements = {};\n    }\n    /**\n     * Initialize the `Dialog`, set the placement and gap, and add a `Subscription` to resize events.\n     */\n    ngOnInit() {\n        this.placement = this.dialogConfig.placement.split(\",\")[0];\n        this.data = this.dialogConfig.data;\n        // run any additional initialization code that consuming classes may have\n        this.onDialogInit();\n    }\n    /**\n     * After the DOM is ready, focus is set and dialog is placed\n     * in respect to the parent element.\n     */\n    ngAfterViewInit() {\n        const dialogElement = this.dialog.nativeElement;\n        // split the wrapper class list and apply separately to avoid IE\n        // 1. throwing an error due to assigning a readonly property (classList)\n        // 2. throwing a SyntaxError due to passing an empty string to `add`\n        if (this.dialogConfig.wrapperClass) {\n            for (const extraClass of this.dialogConfig.wrapperClass.split(\" \")) {\n                dialogElement.classList.add(extraClass);\n            }\n        }\n        // only focus the dialog if there are focusable elements within the dialog\n        if (getFocusElementList(this.dialog.nativeElement).length > 0) {\n            dialogElement.focus();\n        }\n        const parentElement = this.dialogConfig.parentRef.nativeElement;\n        if (this.animationFrameService) {\n            this.animationFrameSubscription = this.animationFrameService.tick.subscribe(() => {\n                this.placeDialog();\n            });\n        }\n        if (this.dialogConfig.closeWhenHidden) {\n            this.visibilitySubscription = this.elementService\n                .visibility(parentElement, parentElement)\n                .subscribe(value => {\n                this.placeDialog();\n                if (!value.visible) {\n                    this.doClose({\n                        reason: CloseReasons.hidden\n                    });\n                }\n            });\n        }\n        this.placeDialog();\n        // run afterDialogViewInit on the next tick\n        setTimeout(() => this.afterDialogViewInit());\n    }\n    /**\n     * Empty method to be overridden by consuming classes to run any additional initialization code.\n     */\n    onDialogInit() { }\n    /**\n     * Empty method to be overridden by consuming classes to run any additional initialization code after the view is available.\n     * NOTE: this does _not_ guarantee the dialog will be positioned, simply that it will exist in the DOM\n     */\n    afterDialogViewInit() { }\n    /**\n     * Uses the position service to position the `Dialog` in screen space\n     */\n    placeDialog() {\n        const positionService = new Position(this.placements);\n        // helper to find the position based on the current/given environment\n        const findPosition = (reference, target, placement) => {\n            let pos;\n            if (this.dialogConfig.appendInline) {\n                pos = this.addGap[placement](positionService.findRelative(reference, target, placement));\n            }\n            else {\n                pos = this.addGap[placement](positionService.findAbsolute(reference, target, placement));\n            }\n            if (this.dialogConfig.offset) {\n                // Apply vertical and horizontal offsets given through the dialogConfig\n                pos.top = pos.top + this.dialogConfig.offset.y;\n                pos.left = pos.left + this.dialogConfig.offset.x;\n            }\n            return pos;\n        };\n        let parentEl = this.dialogConfig.parentRef.nativeElement;\n        let el = this.dialog.nativeElement;\n        let dialogPlacement = this.placement;\n        // split always returns an array, so we can just use the auto position logic\n        // for single positions too\n        const placements = this.dialogConfig.placement.split(\",\");\n        // find the best placement\n        dialogPlacement = positionService.findBestPlacement(parentEl, el, placements);\n        // calculate the final position\n        const pos = findPosition(parentEl, el, dialogPlacement);\n        // update the element\n        positionService.setElement(el, pos);\n        setTimeout(() => { this.placement = dialogPlacement; });\n    }\n    /**\n     * Sets up a KeyboardEvent to close `Dialog` with Escape key.\n     * @param event\n     */\n    escapeClose(event) {\n        switch (event.key) {\n            case \"Escape\": {\n                event.stopImmediatePropagation();\n                this.doClose({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n                break;\n            }\n            case \"Tab\": {\n                cycleTabs(event, this.elementRef.nativeElement);\n                break;\n            }\n        }\n    }\n    /**\n     * Sets up a event Listener to close `Dialog` if click event occurs outside\n     * `Dialog` object.\n     * @param event\n     */\n    clickClose(event) {\n        if (!this.elementRef.nativeElement.contains(event.target)\n            && !this.dialogConfig.parentRef.nativeElement.contains(event.target)) {\n            this.doClose({\n                reason: CloseReasons.interaction,\n                target: event.target\n            });\n        }\n    }\n    /**\n     * Closes `Dialog` object by emitting the close event upwards to parents.\n     */\n    doClose(meta = { reason: CloseReasons.interaction }) {\n        this.close.emit(meta);\n    }\n    /**\n     * At destruction of component, `Dialog` unsubscribes from all the subscriptions.\n     */\n    ngOnDestroy() {\n        this.visibilitySubscription.unsubscribe();\n        if (this.animationFrameSubscription) {\n            this.animationFrameSubscription.unsubscribe();\n        }\n    }\n}\nDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Dialog, deps: [{ token: i0.ElementRef }, { token: i2.ElementService }, { token: i2.AnimationFrameService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nDialog.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: Dialog, selector: \"cds-dialog, ibm-dialog\", inputs: { dialogConfig: \"dialogConfig\" }, outputs: { close: \"close\" }, host: { listeners: { \"keydown\": \"escapeClose($event)\", \"document:click\": \"clickClose($event)\" } }, viewQueries: [{ propertyName: \"dialog\", first: true, predicate: [\"dialog\"], descendants: true }], ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-dialog, ibm-dialog\",\n                    template: \"\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i2.ElementService }, { type: i2.AnimationFrameService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { close: [{\n                type: Output\n            }], dialogConfig: [{\n                type: Input\n            }], dialog: [{\n                type: ViewChild,\n                args: [\"dialog\"]\n            }], escapeClose: [{\n                type: HostListener,\n                args: [\"keydown\", [\"$event\"]]\n            }], clickClose: [{\n                type: HostListener,\n                args: [\"document:click\", [\"$event\"]]\n            }] } });\n\n/**\n * A generic directive that can be inherited from to create dialogs (for example, a tooltip or popover)\n *\n * This class contains the relevant initialization code, specific templates, options, and additional inputs\n * should be specified in the derived class.\n *\n * NOTE: All child classes should add `DialogService` as a provider, otherwise they will lose context that\n * the service relies on.\n */\nclass DialogDirective {\n    /**\n     * Creates an instance of DialogDirective.\n     * @param elementRef\n     * @param viewContainerRef\n     * @param dialogService\n     * @param eventService\n     */\n    constructor(elementRef, viewContainerRef, dialogService, \n    /**\n     * Deprecated as of v5\n     */\n    eventService) {\n        this.elementRef = elementRef;\n        this.viewContainerRef = viewContainerRef;\n        this.dialogService = dialogService;\n        this.eventService = eventService;\n        /**\n         * Title for the dialog\n         */\n        this.title = \"\";\n        /**\n         * Defines how the Dialog is triggered.(Hover and click behave the same on mobile - both respond to a single tap).\n         * Do not add focusable elements if trigger is `hover` or `mouseenter`.\n         */\n        this.trigger = \"click\";\n        /**\n         * Defines how the Dialog close event is triggered.\n         *\n         * [See here](https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event)\n         * for more on the difference between `mouseleave` and `mouseout`.\n         *\n         * Defaults to `click` when `trigger` is set to `click`.\n         */\n        this.closeTrigger = \"mouseleave\";\n        /**\n         * Placement of the dialog, usually relative to the element the directive is on.\n         */\n        this.placement = \"left\";\n        /**\n         * Spacing between the dialog and it's triggering element\n         */\n        this.gap = 0;\n        /**\n         * Set to `true` to open the dialog next to the triggering component\n         */\n        this.appendInline = false;\n        /**\n         * Optional data for templates\n         */\n        this.data = {};\n        this.isOpen = false;\n        /**\n         * This prevents the dialog from being toggled\n         */\n        this.disabled = false;\n        /**\n         * Emits an event when the dialog is closed\n         */\n        this.onClose = new EventEmitter();\n        /**\n         * Emits an event when the dialog is opened\n         */\n        this.onOpen = new EventEmitter();\n        /**\n         * Emits an event when the state of `isOpen` changes. Allows `isOpen` to be double bound\n         */\n        this.isOpenChange = new EventEmitter();\n        this.role = \"button\";\n        this.hasPopup = true;\n        this.subscriptions = [];\n    }\n    /**\n     * @deprecated as of v5, use `cdsDialog` instead\n     * Dialog body content.\n     */\n    set ibmDialog(body) {\n        this.cdsDialog = body;\n    }\n    get ariaOwns() {\n        return this.isOpen ? this.dialogConfig.compID : null;\n    }\n    ngOnChanges(changes) {\n        // set the config object (this can [and should!] be added to in child classes depending on what they need)\n        this.dialogConfig = {\n            title: this.title,\n            content: this.cdsDialog,\n            placement: this.placement,\n            parentRef: this.elementRef,\n            gap: this.gap,\n            trigger: this.trigger,\n            closeTrigger: this.closeTrigger,\n            shouldClose: this.shouldClose || (() => true),\n            appendInline: this.appendInline,\n            wrapperClass: this.wrapperClass,\n            data: this.data,\n            offset: this.offset,\n            disabled: this.disabled\n        };\n        if (changes.isOpen) {\n            if (changes.isOpen.currentValue) {\n                this.open();\n            }\n            else if (!changes.isOpen.firstChange) {\n                this.close({\n                    reason: CloseReasons.programmatic\n                });\n            }\n        }\n        // Run any code a child class may need.\n        this.onDialogChanges(changes);\n        this.updateConfig();\n    }\n    /**\n     * Sets the config object and binds events for hovering or clicking before\n     * running code from child class.\n     */\n    ngOnInit() {\n        // fix for safari hijacking clicks\n        this.dialogService.singletonClickListen();\n        const element = this.elementRef.nativeElement;\n        this.subscriptions.push(fromEvent(element, \"keydown\").subscribe((event) => {\n            if (event.target === this.dialogConfig.parentRef.nativeElement &&\n                (event.key === \"Tab\" || event.key === \"Tab\" && event.shiftKey) ||\n                event.key === \"Escape\") {\n                this.close({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n            }\n        }));\n        // bind events for hovering or clicking the host\n        if (this.trigger === \"hover\" || this.trigger === \"mouseenter\") {\n            this.subscriptions.push(fromEvent(element, \"mouseenter\").subscribe(() => this.open()), fromEvent(element, this.closeTrigger).subscribe((event) => {\n                this.close({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n            }), fromEvent(element, \"focus\").subscribe(() => this.open()), fromEvent(element, \"blur\").subscribe((event) => {\n                this.close({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n            }));\n        }\n        else {\n            this.subscriptions.push(fromEvent(element, \"click\").subscribe((event) => {\n                this.toggle({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n            }), fromEvent(element, \"keydown\").subscribe((event) => {\n                if (event.key === \"Enter\" || event.key === \" \") {\n                    setTimeout(() => {\n                        this.open();\n                    });\n                }\n            }));\n        }\n        DialogDirective.dialogCounter++;\n        this.dialogConfig.compID = \"dialog-\" + DialogDirective.dialogCounter;\n        // run any code a child class may need\n        this.onDialogInit();\n        this.updateConfig();\n    }\n    /**\n     * When the host dies, kill the popover.\n     * - Useful for use in a modal or similar.\n     */\n    ngOnDestroy() {\n        this.close({\n            reason: CloseReasons.destroyed\n        });\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    }\n    /**\n     * Helper method to call dialogService 'open'.\n     * - Enforce accessibility by updating an aria attr for nativeElement.\n     */\n    open(component) {\n        // don't allow dialogs to be opened if they're already open\n        if (this.dialogRef || this.disabled) {\n            return;\n        }\n        // actually open the dialog, emit events, and set the open state\n        this.dialogRef = this.dialogService.open(this.viewContainerRef, this.dialogConfig, component);\n        this.isOpen = true;\n        this.onOpen.emit();\n        this.isOpenChange.emit(true);\n        // Handles emitting all the close events to clean everything up\n        // Also enforce accessibility on close by updating an aria attr on the nativeElement.\n        const subscription = this.dialogRef.instance.close.subscribe((meta) => {\n            if (!this.dialogRef) {\n                return;\n            }\n            if (this.dialogConfig.shouldClose && this.dialogConfig.shouldClose(meta)) {\n                // close the dialog, emit events, and clear out the open states\n                this.dialogService.close(this.dialogRef);\n                this.dialogRef = null;\n                this.isOpen = false;\n                this.onClose.emit();\n                this.isOpenChange.emit(false);\n                subscription.unsubscribe();\n            }\n        });\n        return this.dialogRef;\n    }\n    /**\n     * Helper method to toggle the open state of the dialog\n     */\n    toggle(meta = { reason: CloseReasons.interaction }) {\n        if (!this.isOpen) {\n            this.open();\n        }\n        else {\n            this.close(meta);\n        }\n    }\n    /**\n     * Helper method to close the dialogRef.\n     */\n    close(meta = { reason: CloseReasons.interaction }) {\n        if (this.dialogRef) {\n            this.dialogRef.instance.doClose(meta);\n        }\n    }\n    /**\n     * Empty method for child classes to override and specify additional init steps.\n     * Run after DialogDirective completes it's ngOnInit.\n     */\n    onDialogInit() { }\n    /**\n     * Empty method for child to override and specify additional on changes steps.\n     * run after DialogDirective completes it's ngOnChanges.\n     */\n    onDialogChanges(_changes) { }\n    updateConfig() { }\n}\nDialogDirective.dialogCounter = 0;\nDialogDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: DialogService }, { token: i2.EventService }], target: i0.ɵɵFactoryTarget.Directive });\nDialogDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: DialogDirective, selector: \"[cdsDialog], [ibmDialog]\", inputs: { title: \"title\", ibmDialog: \"ibmDialog\", cdsDialog: \"cdsDialog\", trigger: \"trigger\", closeTrigger: \"closeTrigger\", placement: \"placement\", offset: \"offset\", wrapperClass: \"wrapperClass\", gap: \"gap\", appendInline: \"appendInline\", data: \"data\", isOpen: \"isOpen\", disabled: \"disabled\", shouldClose: \"shouldClose\" }, outputs: { onClose: \"onClose\", onOpen: \"onOpen\", isOpenChange: \"isOpenChange\" }, host: { properties: { \"attr.aria-expanded\": \"this.isOpen\", \"attr.role\": \"this.role\", \"attr.aria-haspopup\": \"this.hasPopup\", \"attr.aria-owns\": \"this.ariaOwns\" } }, providers: [\n        DialogService\n    ], exportAs: [\"dialog\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[cdsDialog], [ibmDialog]\",\n                    exportAs: \"dialog\",\n                    providers: [\n                        DialogService\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: DialogService }, { type: i2.EventService }]; }, propDecorators: { title: [{\n                type: Input\n            }], ibmDialog: [{\n                type: Input\n            }], cdsDialog: [{\n                type: Input\n            }], trigger: [{\n                type: Input\n            }], closeTrigger: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], gap: [{\n                type: Input\n            }], appendInline: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: [\"attr.aria-expanded\"]\n            }], disabled: [{\n                type: Input\n            }], shouldClose: [{\n                type: Input\n            }], onClose: [{\n                type: Output\n            }], onOpen: [{\n                type: Output\n            }], isOpenChange: [{\n                type: Output\n            }], role: [{\n                type: HostBinding,\n                args: [\"attr.role\"]\n            }], hasPopup: [{\n                type: HostBinding,\n                args: [\"attr.aria-haspopup\"]\n            }], ariaOwns: [{\n                type: HostBinding,\n                args: [\"attr.aria-owns\"]\n            }] } });\n\n/**\n * Extend the `Dialog` component to create an overflow menu.\n *\n * Not used directly. See overflow-menu.component and overflow-menu.directive for more\n */\nclass OverflowMenuPane extends Dialog {\n    constructor(elementRef, i18n, experimental, animationFrameService = null, \n    // mark `elementService` as optional since making it mandatory would be a breaking change\n    elementService = null) {\n        super(elementRef, elementService, animationFrameService);\n        this.elementRef = elementRef;\n        this.i18n = i18n;\n        this.experimental = experimental;\n        this.animationFrameService = animationFrameService;\n        this.elementService = elementService;\n    }\n    onDialogInit() {\n        const positionOverflowMenu = pos => {\n            let offset;\n            /*\n            * 20 is half the width of the overflow menu trigger element.\n            * we also move the element by half of it's own width, since\n            * position service will try and center everything\n            */\n            const closestRel = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], this.elementRef.nativeElement);\n            const topFix = closestRel ? closestRel.getBoundingClientRect().top * -1 : 0;\n            const leftFix = closestRel ? closestRel.getBoundingClientRect().left * -1 : 0;\n            offset = Math.round(this.dialog.nativeElement.offsetWidth / 2) - 20;\n            if (this.dialogConfig.flip) {\n                return position.addOffset(pos, topFix, (-offset + leftFix));\n            }\n            return position.addOffset(pos, topFix, (offset + leftFix));\n        };\n        this.addGap[\"bottom\"] = positionOverflowMenu;\n        this.addGap[\"top\"] = positionOverflowMenu;\n        if (!this.dialogConfig.menuLabel) {\n            this.dialogConfig.menuLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n        }\n    }\n    hostkeys(event) {\n        const listItems = this.listItems();\n        switch (event.key) {\n            case \"ArrowDown\":\n                event.preventDefault();\n                if (!isFocusInLastItem(event, listItems)) {\n                    const index = listItems.findIndex(item => item === event.target);\n                    listItems[index + 1].focus();\n                }\n                else {\n                    listItems[0].focus();\n                }\n                break;\n            case \"ArrowUp\":\n                event.preventDefault();\n                if (!isFocusInFirstItem(event, listItems)) {\n                    const index = listItems.findIndex(item => item === event.target);\n                    listItems[index - 1].focus();\n                }\n                else {\n                    listItems[listItems.length - 1].focus();\n                }\n                break;\n            case \"Home\":\n                event.preventDefault();\n                listItems[0].focus();\n                break;\n            case \"End\":\n                event.preventDefault();\n                listItems[listItems.length - 1].focus();\n                break;\n            case \"Escape\":\n            case \"Tab\":\n                event.stopImmediatePropagation();\n                this.doClose({\n                    reason: CloseReasons.interaction,\n                    target: event.target\n                });\n                break;\n            default: break;\n        }\n    }\n    onClose(event) {\n        this.doClose({\n            reason: CloseReasons.interaction,\n            target: event.target\n        });\n    }\n    afterDialogViewInit() {\n        const focusElementList = this.listItems();\n        focusElementList.forEach(button => {\n            // Allows user to set tabindex to 0.\n            if (button.getAttribute(\"tabindex\") === null) {\n                button.tabIndex = -1;\n            }\n        });\n        if (focusElementList[0]) {\n            focusElementList[0].tabIndex = 0;\n            focusElementList[0].focus();\n        }\n    }\n    listItems() {\n        const selector = \".cds--overflow-menu-options__option:not([disabled]) .cds--overflow-menu-options__btn\";\n        return Array.from(this.elementRef.nativeElement.querySelectorAll(selector));\n    }\n}\nOverflowMenuPane.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuPane, deps: [{ token: i0.ElementRef }, { token: i1$1.I18n }, { token: i2$1.ExperimentalService }, { token: i2.AnimationFrameService, optional: true }, { token: i2.ElementService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nOverflowMenuPane.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: OverflowMenuPane, selector: \"cds-overflow-menu-pane, ibm-overflow-menu-pane\", host: { listeners: { \"keydown\": \"hostkeys($event)\" } }, usesInheritance: true, ngImport: i0, template: `\n\t\t<ul\n\t\t\t[attr.id]=\"dialogConfig.compID\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[attr.data-floating-menu-direction]=\"placement ? placement : null\"\n\t\t\t[ngClass]=\"{'cds--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\trole=\"menu\"\n\t\t\t#dialog\n\t\t\tclass=\"cds--overflow-menu-options cds--overflow-menu-options--open\"\n\t\t\t(click)=\"onClose($event)\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</ul>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i2$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuPane, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-overflow-menu-pane, ibm-overflow-menu-pane\",\n                    template: `\n\t\t<ul\n\t\t\t[attr.id]=\"dialogConfig.compID\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[attr.data-floating-menu-direction]=\"placement ? placement : null\"\n\t\t\t[ngClass]=\"{'cds--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\trole=\"menu\"\n\t\t\t#dialog\n\t\t\tclass=\"cds--overflow-menu-options cds--overflow-menu-options--open\"\n\t\t\t(click)=\"onClose($event)\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</ul>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.I18n }, { type: i2$1.ExperimentalService }, { type: i2.AnimationFrameService, decorators: [{\n                    type: Optional\n                }] }, { type: i2.ElementService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { hostkeys: [{\n                type: HostListener,\n                args: [\"keydown\", [\"$event\"]]\n            }] } });\n\n/**\n * @deprecated as of v5\n * Use Toggletip or Popover components instead\n */\nclass OverflowMenuCustomPane extends Dialog {\n    constructor(elementRef, i18n, animationFrameService = null, \n    // mark `elementService` as optional since making it mandatory would be a breaking change\n    elementService = null) {\n        super(elementRef, elementService, animationFrameService);\n        this.elementRef = elementRef;\n        this.i18n = i18n;\n        this.animationFrameService = animationFrameService;\n        this.elementService = elementService;\n    }\n    onClick(event) {\n        this.doClose({\n            reason: CloseReasons.interaction,\n            target: event.target\n        });\n    }\n    onDialogInit() {\n        const positionOverflowMenu = pos => {\n            let offset;\n            /*\n            * 20 is half the width of the overflow menu trigger element.\n            * we also move the element by half of it's own width, since\n            * position service will try and center everything\n            */\n            const closestRel = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], this.elementRef.nativeElement);\n            const topFix = closestRel ? closestRel.getBoundingClientRect().top * -1 : 0;\n            const leftFix = closestRel ? closestRel.getBoundingClientRect().left * -1 : 0;\n            offset = Math.round(this.dialog.nativeElement.offsetWidth / 2) - 20;\n            if (this.dialogConfig.flip) {\n                return position.addOffset(pos, topFix, (-offset + leftFix));\n            }\n            return position.addOffset(pos, topFix, (offset + leftFix));\n        };\n        this.addGap[\"bottom\"] = positionOverflowMenu;\n        this.addGap[\"top\"] = positionOverflowMenu;\n        if (!this.dialogConfig.menuLabel) {\n            this.dialogConfig.menuLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n        }\n    }\n}\nOverflowMenuCustomPane.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuCustomPane, deps: [{ token: i0.ElementRef }, { token: i1$1.I18n }, { token: i2.AnimationFrameService, optional: true }, { token: i2.ElementService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nOverflowMenuCustomPane.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: OverflowMenuCustomPane, selector: \"cds-overflow-custom-menu-pane, ibm-overflow-custom-menu-pane\", usesInheritance: true, ngImport: i0, template: `\n\t\t<div\n\t\t\t[attr.id]=\"dialogConfig.compID\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[attr.data-floating-menu-direction]=\"placement ? placement : null\"\n\t\t\t[ngClass]=\"{'cds--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\tclass=\"cds--overflow-menu-options cds--overflow-menu-options--open\"\n\t\t\trole=\"menu\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\t#dialog\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i2$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuCustomPane, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-overflow-custom-menu-pane, ibm-overflow-custom-menu-pane\",\n                    template: `\n\t\t<div\n\t\t\t[attr.id]=\"dialogConfig.compID\"\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\"\n\t\t\t[attr.data-floating-menu-direction]=\"placement ? placement : null\"\n\t\t\t[ngClass]=\"{'cds--overflow-menu--flip': dialogConfig.flip}\"\n\t\t\tclass=\"cds--overflow-menu-options cds--overflow-menu-options--open\"\n\t\t\trole=\"menu\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\t#dialog\n\t\t\t[attr.aria-label]=\"dialogConfig.menuLabel\">\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"dialogConfig.content\"\n\t\t\t\t[ngTemplateOutletContext]=\"{overflowMenu: this}\">\n\t\t\t</ng-template>\n\t\t</div>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.I18n }, { type: i2.AnimationFrameService, decorators: [{\n                    type: Optional\n                }] }, { type: i2.ElementService, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Directive for extending `Dialog` to create overflow menus.\n *\n * class: OverflowMenuDirective (extends DialogDirective)\n *\n *\n * selector: `cdsOverflowMenu`\n *\n *\n * ```html\n * <div [cdsOverflowMenu]=\"templateRef\"></div>\n * <ng-template #templateRef>\n * \t<!-- overflow menu options here -->\n * </ng-template>\n * ```\n *\n * ```html\n * <div [cdsOverflowMenu]=\"templateRef\" [customPane]=\"true\"></div>\n * <ng-template #templateRef>\n *  <!-- custom content goes here -->\n * </ng-template>\n * ```\n */\nclass OverflowMenuDirective extends DialogDirective {\n    /**\n     * Creates an instance of `OverflowMenuDirective`.\n     */\n    constructor(elementRef, viewContainerRef, dialogService, eventService) {\n        super(elementRef, viewContainerRef, dialogService, eventService);\n        this.elementRef = elementRef;\n        this.viewContainerRef = viewContainerRef;\n        this.dialogService = dialogService;\n        this.eventService = eventService;\n        /**\n         * Controls wether the overflow menu is flipped\n         */\n        this.flip = false;\n        /**\n         * Classes to add to the dialog container\n         */\n        this.wrapperClass = \"\";\n        /**\n         * Set to true to for custom content\n         */\n        this.customPane = false;\n    }\n    /**\n     * @deprecated as of v5\n     * Takes a template ref of `OverflowMenuOptions`s\n     */\n    set ibmOverflowMenu(template) {\n        this.cdsOverflowMenu = template;\n    }\n    updateConfig() {\n        this.dialogConfig.content = this.cdsOverflowMenu;\n        this.dialogConfig.flip = this.flip;\n        this.dialogConfig.offset = this.offset;\n        this.dialogConfig.wrapperClass = this.wrapperClass;\n    }\n    hostkeys(event) {\n        switch (event.key) {\n            case \"Enter\":\n            case \" \":\n                event.preventDefault();\n                break;\n        }\n    }\n    open() {\n        return super.open(this.customPane ? OverflowMenuCustomPane : OverflowMenuPane);\n    }\n}\nOverflowMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: DialogService }, { token: i2.EventService }], target: i0.ɵɵFactoryTarget.Directive });\nOverflowMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.3.0\", type: OverflowMenuDirective, selector: \"[cdsOverflowMenu], [ibmOverflowMenu]\", inputs: { ibmOverflowMenu: \"ibmOverflowMenu\", cdsOverflowMenu: \"cdsOverflowMenu\", flip: \"flip\", offset: \"offset\", wrapperClass: \"wrapperClass\", customPane: \"customPane\" }, host: { listeners: { \"keydown\": \"hostkeys($event)\" } }, providers: [\n        DialogService\n    ], exportAs: [\"overflowMenu\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[cdsOverflowMenu], [ibmOverflowMenu]\",\n                    exportAs: \"overflowMenu\",\n                    providers: [\n                        DialogService\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: DialogService }, { type: i2.EventService }]; }, propDecorators: { ibmOverflowMenu: [{\n                type: Input\n            }], cdsOverflowMenu: [{\n                type: Input\n            }], flip: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], customPane: [{\n                type: Input\n            }], hostkeys: [{\n                type: HostListener,\n                args: [\"keydown\", [\"$event\"]]\n            }] } });\n\n/**\n * The OverFlow menu component encapsulates the OverFlowMenu directive, and the menu iconography into one convienent component.\n *\n * Get started with importing the module:\n *\n * ```typescript\n * import { DialogModule } from 'carbon-components-angular';\n * ```\n *\n * ```html\n * <cds-overflow-menu>\n *\t<cds-overflow-menu-option>Option 1</cds-overflow-menu-option>\n *\t<cds-overflow-menu-option>Option 2</cds-overflow-menu-option>\n * </cds-overflow-menu>\n * ```\n *\n * [See demo](../../?path=/story/components-overflow-menu--basic)\n */\nclass OverflowMenu extends BaseIconButton {\n    constructor(elementRef, i18n) {\n        super();\n        this.elementRef = elementRef;\n        this.i18n = i18n;\n        this.buttonLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n        this.description = this.i18n.get().OVERFLOW_MENU.ICON_DESCRIPTION;\n        this.flip = false;\n        this.placement = \"bottom\";\n        this.open = false;\n        this.openChange = new EventEmitter();\n        this.wrapperClass = \"\";\n        /**\n         * This appends additional classes to the overflow trigger/button.\n         */\n        this.triggerClass = \"\";\n    }\n    handleOpenChange(event) {\n        this.open = event;\n        this.openChange.emit(event);\n    }\n}\nOverflowMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenu, deps: [{ token: i0.ElementRef }, { token: i1$1.I18n }], target: i0.ɵɵFactoryTarget.Component });\nOverflowMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: OverflowMenu, selector: \"cds-overflow-menu, ibm-overflow-menu\", inputs: { buttonLabel: \"buttonLabel\", description: \"description\", flip: \"flip\", placement: \"placement\", open: \"open\", customTrigger: \"customTrigger\", offset: \"offset\", wrapperClass: \"wrapperClass\", triggerClass: \"triggerClass\" }, outputs: { openChange: \"openChange\" }, queries: [{ propertyName: \"overflowMenuDirective\", first: true, predicate: OverflowMenuDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n\t\t<cds-tooltip\n\t\t\tclass=\"cds--icon-tooltip\"\n\t\t\t[description]=\"description\"\n\t\t\t[caret]=\"caret\"\n\t\t\t[dropShadow]=\"dropShadow\"\n\t\t\t[highContrast]=\"highContrast\"\n\t\t\t[isOpen]=\"isOpen\"\n\t\t\t[align]=\"align\"\n\t\t\t[autoAlign]=\"autoAlign\"\n\t\t\t[enterDelayMs]=\"enterDelayMs\"\n\t\t\t[leaveDelayMs]=\"leaveDelayMs\">\n\t\t\t<button\n\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t[cdsOverflowMenu]=\"options\"\n\t\t\t\t[ngClass]=\"{'cds--overflow-menu--open': open}\"\n\t\t\t\tclass=\"cds--overflow-menu {{triggerClass}}\"\n\t\t\t\t[iconOnly]=\"true\"\n\t\t\t\t[attr.aria-label]=\"buttonLabel\"\n\t\t\t\t[flip]=\"flip\"\n\t\t\t\t[isOpen]=\"open\"\n\t\t\t\t(isOpenChange)=\"handleOpenChange($event)\"\n\t\t\t\t[offset]=\"offset\"\n\t\t\t\t[wrapperClass]=\"wrapperClass\"\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t[placement]=\"placement\">\n\t\t\t\t<ng-template *ngIf=\"customTrigger; else defaultIcon\" [ngTemplateOutlet]=\"customTrigger\"></ng-template>\n\t\t\t</button>\n\t\t</cds-tooltip>\n\n\t\t<ng-template #options>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t\t<ng-template #defaultIcon>\n\t\t\t<svg cdsIcon=\"overflow-menu--vertical\" size=\"16\" class=\"cds--overflow-menu__icon\"></svg>\n\t\t</ng-template>\n\t`, isInline: true, styles: [\".cds--overflow-menu--open{opacity:1}.cds--data-table-v2 .cds--overflow-menu{transform:rotate(90deg)}.cds--data-table-v2 .cds--overflow-menu__icon{transform:rotate(180deg)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }, { kind: \"directive\", type: i4.Button, selector: \"[cdsButton], [ibmButton]\", inputs: [\"ibmButton\", \"cdsButton\", \"size\", \"skeleton\", \"iconOnly\", \"isExpressive\"] }, { kind: \"component\", type: i5.Tooltip, selector: \"cds-tooltip, ibm-tooltip\", inputs: [\"id\", \"enterDelayMs\", \"leaveDelayMs\", \"disabled\", \"description\", \"templateContext\"] }, { kind: \"directive\", type: OverflowMenuDirective, selector: \"[cdsOverflowMenu], [ibmOverflowMenu]\", inputs: [\"ibmOverflowMenu\", \"cdsOverflowMenu\", \"flip\", \"offset\", \"wrapperClass\", \"customPane\"], exportAs: [\"overflowMenu\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenu, decorators: [{\n            type: Component,\n            args: [{ selector: \"cds-overflow-menu, ibm-overflow-menu\", template: `\n\t\t<cds-tooltip\n\t\t\tclass=\"cds--icon-tooltip\"\n\t\t\t[description]=\"description\"\n\t\t\t[caret]=\"caret\"\n\t\t\t[dropShadow]=\"dropShadow\"\n\t\t\t[highContrast]=\"highContrast\"\n\t\t\t[isOpen]=\"isOpen\"\n\t\t\t[align]=\"align\"\n\t\t\t[autoAlign]=\"autoAlign\"\n\t\t\t[enterDelayMs]=\"enterDelayMs\"\n\t\t\t[leaveDelayMs]=\"leaveDelayMs\">\n\t\t\t<button\n\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t[cdsOverflowMenu]=\"options\"\n\t\t\t\t[ngClass]=\"{'cds--overflow-menu--open': open}\"\n\t\t\t\tclass=\"cds--overflow-menu {{triggerClass}}\"\n\t\t\t\t[iconOnly]=\"true\"\n\t\t\t\t[attr.aria-label]=\"buttonLabel\"\n\t\t\t\t[flip]=\"flip\"\n\t\t\t\t[isOpen]=\"open\"\n\t\t\t\t(isOpenChange)=\"handleOpenChange($event)\"\n\t\t\t\t[offset]=\"offset\"\n\t\t\t\t[wrapperClass]=\"wrapperClass\"\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t[placement]=\"placement\">\n\t\t\t\t<ng-template *ngIf=\"customTrigger; else defaultIcon\" [ngTemplateOutlet]=\"customTrigger\"></ng-template>\n\t\t\t</button>\n\t\t</cds-tooltip>\n\n\t\t<ng-template #options>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t\t<ng-template #defaultIcon>\n\t\t\t<svg cdsIcon=\"overflow-menu--vertical\" size=\"16\" class=\"cds--overflow-menu__icon\"></svg>\n\t\t</ng-template>\n\t`, encapsulation: ViewEncapsulation.None, styles: [\".cds--overflow-menu--open{opacity:1}.cds--data-table-v2 .cds--overflow-menu{transform:rotate(90deg)}.cds--data-table-v2 .cds--overflow-menu__icon{transform:rotate(180deg)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.I18n }]; }, propDecorators: { buttonLabel: [{\n                type: Input\n            }], description: [{\n                type: Input\n            }], flip: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], open: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }], customTrigger: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], triggerClass: [{\n                type: Input\n            }], overflowMenuDirective: [{\n                type: ContentChild,\n                args: [OverflowMenuDirective]\n            }] } });\n\n/**\n * Available HTML anchor targets\n */\nvar Target;\n(function (Target) {\n    Target[\"self\"] = \"_self\";\n    Target[\"blank\"] = \"_blank\";\n    Target[\"parent\"] = \"_parent\";\n    Target[\"top\"] = \"_top\";\n})(Target || (Target = {}));\n/**\n * Security HTML anchor rel when target is set\n */\nconst REL = \"noreferrer noopener\";\n/**\n * `OverflowMenuOption` represents a single option in an overflow menu\n *\n * Presently it has three possible states - normal, disabled, and danger:\n * ```\n * <cds-overflow-menu-option>Simple option</cds-overflow-menu-option>\n * <cds-overflow-menu-option disabled=\"true\">Disabled</cds-overflow-menu-option>\n * <cds-overflow-menu-option type=\"danger\">Danger option</cds-overflow-menu-option>\n * ```\n *\n * For content that expands beyond the overflow menu `OverflowMenuOption` automatically adds a title attribute.\n */\nclass OverflowMenuOption {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.optionClass = true;\n        this.role = \"presentation\";\n        /**\n         * Set to `true` to display a dividing line above this option\n         */\n        this.divider = false;\n        /**\n         * toggles between `normal` and `danger` states\n         */\n        this.type = \"normal\";\n        /**\n         * disable/enable interactions\n         */\n        this.disabled = false;\n        /**\n         * Apply a custom class to the inner button/anchor\n         */\n        this.innerClass = \"\";\n        this.selected = new EventEmitter();\n        this.tabIndex = -1;\n        // note: title must be a real attribute (i.e. not a getter) as of Angular@6 due to\n        // change after checked errors\n        this.title = null;\n    }\n    get isDanger() {\n        return this.type === \"danger\";\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Allows to add a target to the anchor\n     */\n    set target(value) {\n        if (!Object.values(Target).includes(value)) {\n            console.warn(`\\`target\\` must have one of the following values: ${Object.values(Target).join(\", \")}.\nPlease use the \\`Target\\` enum exported by carbon-components-angular`);\n            return;\n        }\n        this._target = value;\n    }\n    get target() {\n        return this._target;\n    }\n    /**\n     * rel only returns its value if target is defined\n     */\n    get rel() {\n        return this._target ? REL : null;\n    }\n    onClick() {\n        this.selected.emit();\n    }\n    onFocus() {\n        setTimeout(() => this.tabIndex = 0);\n    }\n    onBlur() {\n        setTimeout(() => this.tabIndex = -1);\n    }\n    ngAfterViewInit() {\n        const button = this.elementRef.nativeElement.querySelector(\"button, a\");\n        const textContainer = button.querySelector(\".cds--overflow-menu-options__option-content\");\n        if (textContainer.scrollWidth > textContainer.offsetWidth) {\n            this.title = button.textContent;\n        }\n    }\n}\nOverflowMenuOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuOption, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nOverflowMenuOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: OverflowMenuOption, selector: \"cds-overflow-menu-option, ibm-overflow-menu-option\", inputs: { divider: \"divider\", type: \"type\", disabled: \"disabled\", href: \"href\", target: \"target\", innerClass: \"innerClass\" }, outputs: { selected: \"selected\" }, host: { properties: { \"class.cds--overflow-menu-options__option\": \"this.optionClass\", \"attr.role\": \"this.role\", \"class.cds--overflow-menu-options__option--danger\": \"this.isDanger\", \"class.cds--overflow-menu-options__option--disabled\": \"this.isDisabled\", \"class.cds--overflow-menu--divider\": \"this.divider\" } }, ngImport: i0, template: `\n\t\t<button\n\t\t\t*ngIf=\"!href\"\n\t\t\tclass=\"cds--overflow-menu-options__btn {{innerClass}}\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</button>\n\n\t\t<a\n\t\t\t*ngIf=\"href\"\n\t\t\tclass=\"cds--overflow-menu-options__btn {{innerClass}}\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[attr.disabled]=\"disabled\"\n\t\t\t[href]=\"href\"\n\t\t\t[attr.target]=\"target\"\n\t\t\t[attr.rel]=\"rel\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</a>\n\n\t\t<ng-template #tempOutlet>\n\t\t\t<div class=\"cds--overflow-menu-options__option-content\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i2$2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: OverflowMenuOption, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-overflow-menu-option, ibm-overflow-menu-option\",\n                    template: `\n\t\t<button\n\t\t\t*ngIf=\"!href\"\n\t\t\tclass=\"cds--overflow-menu-options__btn {{innerClass}}\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</button>\n\n\t\t<a\n\t\t\t*ngIf=\"href\"\n\t\t\tclass=\"cds--overflow-menu-options__btn {{innerClass}}\"\n\t\t\trole=\"menuitem\"\n\t\t\t[tabindex]=\"tabIndex\"\n\t\t\t(focus)=\"onFocus()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t(click)=\"onClick()\"\n\t\t\t[attr.disabled]=\"disabled\"\n\t\t\t[href]=\"href\"\n\t\t\t[attr.target]=\"target\"\n\t\t\t[attr.rel]=\"rel\"\n\t\t\t[attr.title]=\"title\">\n\t\t\t<ng-container *ngTemplateOutlet=\"tempOutlet\"></ng-container>\n\t\t</a>\n\n\t\t<ng-template #tempOutlet>\n\t\t\t<div class=\"cds--overflow-menu-options__option-content\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { optionClass: [{\n                type: HostBinding,\n                args: [\"class.cds--overflow-menu-options__option\"]\n            }], role: [{\n                type: HostBinding,\n                args: [\"attr.role\"]\n            }], isDanger: [{\n                type: HostBinding,\n                args: [\"class.cds--overflow-menu-options__option--danger\"]\n            }], isDisabled: [{\n                type: HostBinding,\n                args: [\"class.cds--overflow-menu-options__option--disabled\"]\n            }], divider: [{\n                type: HostBinding,\n                args: [\"class.cds--overflow-menu--divider\"]\n            }, {\n                type: Input\n            }], type: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], href: [{\n                type: Input\n            }], target: [{\n                type: Input\n            }], innerClass: [{\n                type: Input\n            }], selected: [{\n                type: Output\n            }] } });\n\n// modules\nclass DialogModule {\n}\nDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogModule, declarations: [Dialog,\n        OverflowMenu,\n        OverflowMenuPane,\n        OverflowMenuCustomPane,\n        DialogDirective,\n        OverflowMenuDirective,\n        OverflowMenuOption], imports: [CommonModule,\n        I18nModule,\n        PlaceholderModule,\n        ExperimentalModule,\n        UtilsModule,\n        IconModule,\n        ButtonModule,\n        TooltipModule], exports: [Dialog,\n        OverflowMenu,\n        OverflowMenuPane,\n        OverflowMenuCustomPane,\n        DialogDirective,\n        OverflowMenuDirective,\n        OverflowMenuOption] });\nDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogModule, providers: [DialogService], imports: [CommonModule,\n        I18nModule,\n        PlaceholderModule,\n        ExperimentalModule,\n        UtilsModule,\n        IconModule,\n        ButtonModule,\n        TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        Dialog,\n                        OverflowMenu,\n                        OverflowMenuPane,\n                        OverflowMenuCustomPane,\n                        DialogDirective,\n                        OverflowMenuDirective,\n                        OverflowMenuOption\n                    ],\n                    exports: [\n                        Dialog,\n                        OverflowMenu,\n                        OverflowMenuPane,\n                        OverflowMenuCustomPane,\n                        DialogDirective,\n                        OverflowMenuDirective,\n                        OverflowMenuOption\n                    ],\n                    providers: [DialogService],\n                    imports: [\n                        CommonModule,\n                        I18nModule,\n                        PlaceholderModule,\n                        ExperimentalModule,\n                        UtilsModule,\n                        IconModule,\n                        ButtonModule,\n                        TooltipModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CloseReasons, Dialog, DialogDirective, DialogModule, DialogService, OverflowMenu, OverflowMenuCustomPane, OverflowMenuDirective, OverflowMenuOption, OverflowMenuPane };\n"],"x_google_ignoreList":[0,1]}
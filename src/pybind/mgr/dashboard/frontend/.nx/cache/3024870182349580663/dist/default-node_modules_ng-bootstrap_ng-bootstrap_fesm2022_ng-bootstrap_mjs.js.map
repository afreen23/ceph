{"version":3,"file":"default-node_modules_ng-bootstrap_ng-bootstrap_fesm2022_ng-bootstrap_mjs.js","mappings":"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ASgc,GAAkBnB,GACvB,OAAQ,GAAK,GAAKA,GAAS,GAAK,EACpC,CA0G4BmB,CAAkB3/B,IAClCmB,IAEGA,CACX,QACSiO,KAAKC,UAAI,UAAAuwB,EAAA,gBAAAtwB,GAAA,OAAAswB,MAn8I8E7hC,kCAm8IUogC,MAAuB7uB,GAAvB6uB,GAAuB,GAA/G,EAAuK,QAChL/uB,KAAKG,WAp8IkFxR,+BAAE,CAAAyR,MAo8IY2uB,GAAuB1uB,QAAvB0uB,GAAuB9uB,WAAK,EAY9I,MAAMwwB,GAAuB,IAAItb,KAAK,KAAM,GAAI,IAC1Cub,GAAsB,IAAIvb,KAAK,KAAM,GAAI,IACzCwb,GAAc,KAGdC,GAAe,CAEjB,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eACA,eACA,eAEA,eACA,eACA,eAC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","names":["_c0","NgbAlert_Conditional_1_Template","rf","ctx","_r1","i0","ctx_r1","close","NgbCarousel_For_2_Template","slide_r2","$implicit","ctx_r2","focus","select","id","NgbSlideEventSource","INDICATOR","activeId","NgbCarousel_For_5_ng_template_3_Template","NgbCarousel_For_5_Template","slide_r4","ɵ$index_8_r5","$index","ɵ$count_8_r6","$count","templateRef","NgbCarousel_Conditional_6_Template","_r7","arrowLeft","arrowRight","_c1","_c2","_c3","NgbDatepickerNavigationSelect_For_3_Template","m_r2","i18n","getMonthFullName","date","year","getMonthShortName","NgbDatepickerNavigationSelect_For_7_Template","y_r4","getYearNumerals","NgbDatepickerNavigation_Conditional_3_Template","$event","emit","disabled","selectBoxes","months","years","NgbDatepickerNavigation_Conditional_4_For_1_Conditional_0_Template","NgbDatepickerNavigation_Conditional_4_For_1_Conditional_3_Template","NgbDatepickerNavigation_Conditional_4_For_1_Template","month_r3","ɵ$index_11_r4","getMonthLabel","firstDate","length","NgbDatepickerNavigation_Conditional_4_Template","NgbDatepickerMonth_Conditional_0_Conditional_1_Template","ctx_r0","getWeekLabel","NgbDatepickerMonth_Conditional_0_For_3_Template","weekday_r2","NgbDatepickerMonth_Conditional_0_Template","datepicker","showWeekNumbers","viewModel","weekdays","NgbDatepickerMonth_For_2_Conditional_0_Conditional_1_Template","week_r3","getWeekNumerals","number","NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_ng_template_0_Template","NgbDatepickerMonth_For_2_Conditional_0_For_3_Conditional_1_Template","day_r5","dayTemplate","context","NgbDatepickerMonth_For_2_Conditional_0_For_3_Template","_r4","doSelect","preventDefault","hidden","today","tabindex","ariaLabel","NgbDatepickerMonth_For_2_Conditional_0_Template","days","NgbDatepickerMonth_For_2_Template","collapsed","_c4","_c5","_c6","a0","NgbDatepicker_ng_template_0_Template","date_r1","currentMonth_r2","currentMonth","selected_r3","selected","disabled_r4","focused_r5","focused","NgbDatepicker_ng_template_2_For_1_Conditional_1_Template","month_r6","ctx_r6","NgbDatepicker_ng_template_2_For_1_Template","navigation","displayMonths","NgbDatepicker_ng_template_2_Template","model","NgbDatepicker_Conditional_5_Template","_r8","onNavigateEvent","onNavigateDateSelect","prevDisabled","nextDisabled","NgbDatepicker_ng_template_8_Template","NgbDatepicker_ng_template_9_Template","_c7","_c8","NgbNavOutlet_For_1_Conditional_0_ng_template_1_Template","NgbNavOutlet_For_1_Conditional_0_Template","item_r1","nav","paneRole","contentTpl","active","isPanelTransitioning","NgbNavOutlet_For_1_Template","isPanelInDom","_c9","a1","a2","pages","_c10","currentPage","_c11","_c12","_c13","NgbPagination_ng_template_0_Template","NgbPagination_ng_template_2_Template","NgbPagination_ng_template_4_Template","NgbPagination_ng_template_6_Template","NgbPagination_ng_template_8_Template","NgbPagination_ng_template_10_Template","page_r1","NgbPagination_ng_template_12_For_1_Conditional_1_ng_template_1_Template","NgbPagination_ng_template_12_For_1_Conditional_1_Template","page_r2","ellipsis_r4","tplEllipsis","NgbPagination_ng_template_12_For_1_Conditional_2_ng_template_1_Template","NgbPagination_ng_template_12_For_1_Conditional_2_Template","_r5","pageNumber_r6","selectPage","disabled_r8","defaultNumber_r9","tplNumber","NgbPagination_ng_template_12_For_1_Template","isEllipsis","NgbPagination_ng_template_12_Template","pages_r10","NgbPagination_Conditional_15_ng_template_2_Template","NgbPagination_Conditional_15_Template","_r11","first_r12","previousDisabled","tplFirst","page","NgbPagination_Conditional_16_ng_template_2_Template","NgbPagination_Conditional_16_Template","_r13","previous_r14","tplPrevious","NgbPagination_ng_template_17_Template","NgbPagination_Conditional_18_ng_template_2_Template","NgbPagination_Conditional_18_Template","_r15","next_r16","tplNext","NgbPagination_Conditional_19_ng_template_2_Template","NgbPagination_Conditional_19_Template","_r17","pageCount","last_r18","tplLast","NgbPopoverWindow_Conditional_1_ng_template_1_Template","title","NgbPopoverWindow_Conditional_1_ng_template_3_Template","NgbPopoverWindow_Conditional_1_Template","simpleTitle_r2","isTitleTemplate","NgbProgressbar_Conditional_1_Template","getValue","max","NgbRating_ng_template_0_Template","fill_r1","fill","NgbRating_For_3_ng_template_3_Template","NgbRating_For_3_Template","_r2","ɵ$index_4_r3","ctx_r3","enter","handleClick","t_r5","nextRate","isInteractive","starTemplate","starTemplateFromContent","contexts","NgbTimepicker_Conditional_3_Template","changeHour","hourStep","isSmallSize","isLargeSize","NgbTimepicker_Conditional_5_Template","_r3","NgbTimepicker_Conditional_9_Template","changeMinute","minuteStep","NgbTimepicker_Conditional_11_Template","NgbTimepicker_Conditional_12_Conditional_3_Template","changeSecond","secondStep","NgbTimepicker_Conditional_12_Conditional_5_Template","NgbTimepicker_Conditional_12_Template","_r6","updateSecond","target","value","handleBlur","formatInput","spinners","formatMinSec","second","readonlyInputs","NgbTimepicker_Conditional_13_Conditional_3_Template","getAfternoonPeriod","NgbTimepicker_Conditional_13_Conditional_4_Template","getMorningPeriod","NgbTimepicker_Conditional_13_Template","_r9","toggleMeridian","hour","NgbToast_ng_template_0_Template","header","NgbToast_Conditional_2_ng_template_1_Template","NgbToast_Conditional_2_Template","hide","headerTpl_r3","contentHeaderTpl","NgbHighlight_For_1_Conditional_0_Template","part_r1","highlightClass","NgbHighlight_For_1_Conditional_1_Template","NgbHighlight_For_1_Template","ɵ$index_1_r3","_c14","result","term","formatter","NgbTypeaheadWindow_ng_template_0_Template","result_r1","term_r2","formatter_r3","NgbTypeaheadWindow_For_3_ng_template_1_Template","NgbTypeaheadWindow_For_3_Template","$index_r5","ctx_r5","markActive","result_r7","rt_r8","activeIdx","resultTemplate","environment","animation","transitionTimerDelayMs","NgbConfig","constructor","this","ɵfac","__ngFactoryType__","ɵprov","token","factory","providedIn","NgbAccordionConfig","_ngbConfig","inject","closeOthers","destroyOnHide","_animation","toInteger","parseInt","toString","getValueInRange","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","isPromise","v","then","padNumber","slice","reflow","element","document","body","getBoundingClientRect","removeAccents","str","normalize","replace","getActiveElement","root","activeEl","activeElement","shadowRoot","noopFn","runningTransitions","Map","ngbRunTransition","zone","startFn","options","running","get","runningTransition","EMPTY","run","transition$","complete","Object","assign","delete","endFn","window","getComputedStyle","transitionProperty","of","undefined","pipe","runInZone","source","Observable","observer","subscribe","next","error","e","Subject","finishTransition$","stop$","endWith","set","transitionDurationMs","getTransitionDurationMs","transitionDelay","transitionDuration","parseFloat","runOutsideAngular","transitionEnd$","fromEvent","takeUntil","filter","timer$","timer","race","asObservable","ngbCollapsingTransition","direction","maxSize","dimension","classList","setInitialClasses","add","remove","measureCollapsingElementDimensionPx","navigator","hasShownClass","contains","style","dimensionSize","NgbCollapseConfig","horizontal","NgbCollapse","_config","_element","ElementRef","_zone","NgZone","_afterInit","_isCollapsed","ngbCollapseChange","EventEmitter","shown","isCollapsed","_runTransitionWithEvents","ngOnInit","_runTransition","toggle","open","nativeElement","ɵdir","type","selectors","hostVars","hostBindings","inputs","outputs","exportAs","standalone","nextId$3","NgbAccordionBody","_vcr","ViewContainerRef","_item","NgbAccordionItem","_viewRef","ngAfterContentChecked","_bodyTpl","_shouldBeInDOM","_createViewIfNotExists","_destroyViewIfExists","ngOnDestroy","destroy","createEmbeddedView","detectChanges","node","rootNodes","appendChild","contentQueries","dirIndex","TemplateRef","_t","first","hostAttrs","NgbAccordionCollapse","item","ngbCollapse","collapseId","toggleId","features","NgbAccordionToggle","accordion","NgbAccordionDirective","NgbAccordionButton","NgbAccordionHeader","_accordion","_cd","ChangeDetectorRef","_destroyRef","DestroyRef","_collapsed","_id","_collapseAnimationRunning","show","_destroyOnHide","collapse","expand","ngAfterContentInit","_collapse","takeUntilDestroyed","_ensureCanExpand","markForCheck","_anItemWasAlreadyExpandedDuringInitialisation","itemId","_getItem","expandAll","_items","find","forEach","collapseAll","isExpanded","toExpand","NgbAccordionModule","ɵmod","ɵinj","NgbAlertConfig","dismissible","ngbAlertFadingTransition","NgbAlert","_elementRef","closed","transition","ɵcmp","ngContentSelectors","decls","vars","consts","i18n_0","$localize","template","styles","encapsulation","changeDetection","NgbAlertModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","pauseOnFocus","showNavigationArrows","showNavigationIndicators","NgbSlideEventDirection","START","END","isBeingAnimated","removeDirectionClasses","removeClasses","ngbCarouselTransitionIn","ngbCarouselTransitionOut","nextId$2","carouselId","NgbSlide","slid","NgbCarousel","_platformId","PLATFORM_ID","_ngZone","_container","_injector","Injector","_interval$","BehaviorSubject","_mouseHover$","_focused$","_pauseOnHover$","_pauseOnFocus$","_pause$","_wrap$","slide","_transitionIds","mouseHover","prev","ARROW_LEFT","ARROW_RIGHT","isPlatformBrowser","hasNextSlide$","combineLatest","map","slideEvent","current","startWith","slides","changes","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","distinctUntilChanged","pause","hasNextSlide","switchMap","NEVER","TIMER","ngbCompleteTransition","_getSlideElement","afterNextRender","phase","AfterRenderPhase","MixedReadWrite","injector","activeSlide","_getSlideById","ngAfterViewInit","slideId","_cycleToSelected","_getSlideEventDirection","_getPrevSlide","_getNextSlide","cycle","slideIdx","transitionIds","selectedSlide","paused","transitions","activeSlideTransition","isShown","push","previousId","nextSlide","zip","take","currentActiveSlideId","nextActiveSlideId","indexOf","querySelector","i18n_1","i18n_2","i18n_3","dependencies","NgTemplateOutlet","NavigationEvent","NgbCarouselModule","NgbCollapseModule","NgbDate","from","month","day","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NgbCalendar","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","checkMonth","expectedMonth","setMonth","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","round","getToday","isValid","ɵNgbCalendarGregorian_BaseFactory","isChangedDate","dateComparator","isChangedMonth","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","force","monthsToReuse","splice","firstDates","Array","_","i","reusedIndex","findIndex","buildMonth","dayTemplateData","outsideDays","weekdayWidth","weekdaysVisible","calendarToday","lastDate","weeks","getFirstViewDate","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","getWeekdayLabel","newDate","nextDate","getDayAriaLabel","contextUserData","dayObject","data","currentYear","shift","NgbDatepickerI18n","getDayNumerals","weekNumber","NgbDatepickerI18nDefault","super","arguments","_locale","LOCALE_ID","_monthsShort","keys","Intl","DateTimeFormat","timeZone","format","UTC","_monthsFull","weekday","width","formatDate","ɵNgbDatepickerI18nDefault_BaseFactory","NgbDatepickerService","_VALIDATORS","_state","focusVisible","toValidDate","_calendar","_i18n","_model$","_dateSelect$","focusDate","selectedDate","model$","dateSelect$","patch","key","reduce","obj","part","_nextState","focusedDate","focusSelect","emitEvent","defaultValue","ngbDate","struct","Error","newState","_updateState","_patchContexts","startDate","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","generateSelectBoxYears","start","numbers","generateSelectBoxMonths","index","prevMonthDisabled","prevDate","nextMonthDisabled","PREV","NEXT","NgbDatepickerConfig","NgbDateAdapter","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","fromModel","toModel","ɵNgbDateStructAdapter_BaseFactory","NgbDatepickerKeyboardService","processKey","event","shiftKey","stopPropagation","NgbDatepickerDayView","isMuted","attrs","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","viewQuery","i18n_4","i18n_5","i18n_6","i18n_7","NgbDatepickerNavigation","navigate","onClickPrev","currentTarget","onClickNext","showSelect","i18n_8","i18n_9","i18n_10","i18n_11","NgbDatepickerContent","NgbDatepickerMonth","_keyboardService","_service","NgbDatepicker","onKeyDown","onDateSelect","_nativeElement","_ngbDateAdapter","_controlValue","_publicState","_initialized","footerTemplate","dateSelect","onChange","onTouched","cd","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","Read","navigateTo","focusIns$","_contentEl","focusOuts$","merge","focusEvent","relatedTarget","name","_defaultDayTemplate","ngOnChanges","currentValue","previousValue","registerOnChange","fn","registerOnTouched","setDisabledState","writeValue","contentTemplateFromContent","contentTemplate","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","defaultContentTemplate_r9","isContainedIn","array","some","matchesSelectorIfAny","selector","closest","isMobile","userAgent","test","maxTouchPoints","ngbAutoClose","closed$","insideElements","ignoreElements","insideSelector","setTimeout","wrapAsyncForMobile","escapes$","tap","mouseDowns$","button","closeableClicks$","withLatestFrom","shouldClose","delay","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","el","tabIndex","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","last","arr","lastFocusedElement","NgbRTL","DOCUMENT","documentElement","isRTL","getAttribute","toLowerCase","placementSeparator","spacesRegExp","bootstrapPopperMatches","top","bottom","left","end","right","popperStartPrimaryPlacement","popperEndPrimaryPlacement","popperStartSecondaryPlacement","popperEndSecondaryPlacement","getPopperOptions","placement","baseClass","rtl","placementVals","isArray","split","hasAuto","val","search","popperPlacements","_placement","getPopperClassPlacement","leftClass","rightClass","modifiers","enabled","bsClassRegExp","RegExp","popperElement","elements","popper","popperPlacement","className","getBootstrapBaseClassPlacement","primary","secondary","newPrimary","classnames","newSecondary","classname","trim","flip","preventOverflow","arrow","fallbackPlacements","noop","arg","ngbPositioning","popperInstance","createPopper","positioningOption","popperOptions","updatePopperOptions","createPopperLite","hostElement","targetElement","update","setOptions","NgbDateParserFormatter","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","parse","dateParts","ɵNgbDateISOParserFormatter_BaseFactory","NgbInputDatepickerConfig","autoClose","restoreFocus","ɵNgbInputDatepickerConfig_BaseFactory","addPopperOffset","offset$1","offset","NgbInputDatepicker","_parserFormatter","_elRef","_vcRef","_dateAdapter","_document","_changeDetector","_cRef","_disabled","_elWithFocus","_model","_positioning","_destroyCloseHandlers$","container","positionTarget","_onChange","_onTouched","_validatorChange","isOpen","instance","registerOnValidatorChange","isDisabled","validate","c","_fromDateStruct","invalid","actual","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","HTMLElement","_afterRenderRef","afterRender","_setCloseHandlers","elementToFocus","onBlur","onFocus","setInput","datepickerClass","_applyPopupClass","datepickerComponentRef","inputName","newClass","oldClass","popupEl","datepickerInstance","navigateEvent","NG_VALIDATORS","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","ɵNgbCalendarHijri_BaseFactory","isGregorianLeapYear$1","gDate","mod$1","a","b","GREGORIAN_EPOCH$1","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hYear","hMonth","ceil","getIslamicYearStart","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","isIslamicLeapYear","ɵNgbCalendarIslamicCivil_BaseFactory","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","MONTH_LENGTH","NgbCalendarIslamicUmalqura","daysDiff","getDaysDiff","date1","date2","time1","time2","diff","abs","j","numOfDays","dayDiff","y","m","ɵNgbCalendarIslamicUmalqura_BaseFactory","toGregorian$3","jalaliDate","jdn","jalaliToJulian","jYear","jMonth","jDay","r","jalCal","gregorianToJulian$1","gy","march","div","julianToGregorian$1","setHours","fromGregorian$3","gdate","julianToJalali","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","mod","leap","setJalaliMonth","trunc","breaks","breaksLength","jump","leapJ","jp","jm","n","gm","gd","d","getDaysPerMonth$1","NgbCalendarPersian","setJalaliYear","yearValue","setJalaliDay","ɵNgbCalendarPersian_BaseFactory","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","isGregorianLeapYear","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","fromGregorian$2","GREGORIAN_EPOCH","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$2","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","ɵNgbCalendarHebrew_BaseFactory","WEEKDAYS$1","MONTHS$1","MONTHS_LEAP","NgbDatepickerI18nHebrew","ɵNgbDatepickerI18nHebrew_BaseFactory","toGregorian$1","fromGregorian$1","NgbCalendarBuddhist","ɵNgbCalendarBuddhist_BaseFactory","JD_EPOCH","DAYSPERMONTH","setEthiopianMonth","leapYear","isEthiopianLeapYear","ethiopianDate","julianToGregorian","jd","z","ethiopianToJulian","juilianToEthiopia","gregorianToJulian","NgbCalendarEthiopian","setEthiopianYear","setEthiopianDay","dt","ɵNgbCalendarEthiopian_BaseFactory","WEEKDAYS","MONTHS","NgbDatepickerI18nAmharic","ɵNgbDatepickerI18nAmharic_BaseFactory","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","ɵNgbDateNativeAdapter_BaseFactory","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","ɵNgbDateNativeUTCAdapter_BaseFactory","NgbDatepickerModule","NgbDropdownConfig","NgbDropdownItem","NgbDropdownButtonItem","NgbDropdownMenu","dropdown","NgbDropdown","menuItems","NgbDropdownAnchor","NgbDropdownToggle","ɵNgbDropdownToggle_BaseFactory","_bodyContainer","_open","openChange","display","_applyPlacementClasses","Write","_applyContainer","firstChange","_anchor","_menu","dropdownClass","_applyCustomDropdownClass","_positionMenu","_resetContainer","itemElements","_getMenuElements","position","itemElement","isEventFromToggle","_isEventFromToggle","_isDropup","setAttribute","removeAttribute","focusableElements","menu","_getFirstPlacement","removeChild","dropdownMenuElement","bodyContainer","createElement","zIndex","NgbDropdownModule","NgbModalConfig","backdrop","fullscreen","ContentRef","nodes","viewRef","componentRef","PopupService","_componentType","_windowRef","_contentRef","_applicationRef","ApplicationRef","_viewContainerRef","content","templateContext","_getContentRef","projectableNodes","nextRenderSubject","mergeMap","windowRef","attachView","createTextNode","ScrollBar","scrollbarWidth","innerWidth","clientWidth","bodyStyle","overflow","paddingRight","actualPadding","NgbModalBackdrop","backdropClass","NgbActiveModal","dismiss","reason","WINDOW_ATTRIBUTES","BACKDROP_ATTRIBUTES","NgbModalRef","_applyWindowOptions","windowInstance","optionName","_applyBackdropOptions","backdropInstance","_windowCmptRef","_backdropCmptRef","componentInstance","_closed","_hidden","dismissed","_dismissed","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","_removeModalElements","_dismiss","windowTransition$","backdropTransition$","parentNode","ModalDismissReasons","BACKDROP_CLICK","ESC","NgbModalWindow","_closed$","fullscreenClass","_show","_disableEventHandling","dialogTransition$","_dialogEl","transitions$","_restoreFocus","_enableEventHandling","_setFocus","requestAnimationFrame","defaultPrevented","_bumpBackdrop","preventClose","autoFocusable","firstFocusable","elWithFocus","ariaLabelledBy","ariaDescribedBy","windowClass","centered","scrollable","size","modalDialogClass","NgbModalStack","_environmentInjector","EnvironmentInjector","_scrollBar","_activeWindowCmptHasChanged","_ariaHiddenValues","_scrollBarRestoreFn","_modalRefs","_windowCmpts","_activeInstances","ngZone","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","_restoreScrollBar","scrollBarRestoreFn","_hideScrollBar","contentInjector","containerEl","activeModal","environmentInjector","contentRef","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","activeInstances","dismissAll","hasOpenModals","elementInjector","hostView","_createFromTemplateRef","_createFromString","_createFromComponent","component","componentType","create","providers","useValue","parent","componentNativeEl","parentElement","children","sibling","nodeName","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","NgbModal","_modalStack","combinedOptions","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItemRole","role","NgbNav","NgbNavItem","_nav","domId","panelDomId","isNgContainer","nodeType","Node","COMMENT_NODE","destroyRef","_navigatingWithKeyboard","activeIdChange","navItemChange$","navChange","click","_updateActiveId","onFocusout","enabledLinks","links","link","navItem","nextId","items","_notifyItemChanged","emitNavChange","nextItemId","_getItemById","NgbNavLinkBase","NgbNavLinkButton","ɵNgbNavLinkButton_BaseFactory","NgbNavLink","ɵNgbNavLink_BaseFactory","ngbNavFadeOutTransition","ngbNavFadeInTransition","NgbNavPane","NgbNavOutlet","_activePane","_updateActivePane","skip","nextItem","activeItem","_getPaneForItem","_getActivePane","_panes","pane","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPaginationPages","NgbPagination","pageChange","hasPrevious","hasNext","pageNumber","_updatePages","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","tplPages","i18n_12","i18n_13","i18n_14","i18n_15","i18n_16","i18n_17","i18n_18","i18n_19","defaultPages_r19","NgbPaginationModule","ALIASES","hover","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelayMs","closeDelayMs","parsedTriggers","parseTriggers","trimmedTriggers","trigger","triggerPair","manualTriggers","includes","activeOpenTriggers","Set","cleanupFns","timeout","addEventListener","listener","removeEventListener","withDelay","delayMs","clearTimeout","openTrigger","closeTrigger","cleanupFn","NgbPopoverConfig","disablePopover","openDelay","closeDelay","nextId$1","NgbPopoverWindow","popoverClass","NgbPopover","_ngbPopoverWindowId","_popupService","_isDisabled","ngbPopover","popoverContext","popoverTitle","_getPositionTargetElement","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","_max","stacked","NgbProgressbarStacked","optional","textType","height","getPercentValue","i18n_20","PercentPipe","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NgbRating","_changeDetectorRef","leave","rateChange","ariaValueText","rate","handleKeyDown","_updateMax","_setupContexts","reset","internalChange","newRate","nextValue","k","NgbRatingModule","toFragmentElement","CSS","escape","defaultProcessChanges","changeActive","rootElement","fragments","scrollSpy","entries","orderedFragments","getOrderedFragments","initialized","gapFragment","visibleFragments","preSelectedFragment","initialFragment","scrollTo","entry","isIntersecting","fragment","boundingClientRect","rootBounds","fragmentIndex","has","NgbScrollSpyConfig","scrollBehavior","processChanges","NgbScrollSpyService","_observer","_containerElement","_fragments","_preRegisteredFragments","_active$","_distinctActive$","_active","_scrollBehavior","_diChangeDetectorRef","active$","_cleanup","rootMargin","threshold","processChangesFn","IntersectionObserver","observe","stop","behavior","fragmentElement","heightPx","offsetTop","lastOffset","scrollTop","matchCounter","containerElement","updateActiveWhenScrollingIsFinished","sameOffsetAsLastTime","unobserve","disconnect","NgbScrollSpyItem","_scrollSpyMenu","NgbScrollSpyMenu","_scrollSpyAPI","_isActive","NgbScrollSpy","_activate","_deactivate","getItem","isActive","_scrollSpyRef","_map","_lastActiveItem","_rebuildMap","_initialFragment","activeChange","_registerFragment","_unregisterFragment","NgbScrollSpyFragment","_scrollSpy","NgbScrollSpyModule","NgbTime","minute","updateHour","NaN","updateMinute","checkSecs","NgbTimepickerConfig","meridian","seconds","NgbTimeAdapter","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","ɵNgbTimeStructAdapter_BaseFactory","NgbTimepickerI18n","NgbTimepickerI18nDefault","_periods","ɵNgbTimepickerI18nDefault_BaseFactory","FILTER_REGEX","NgbTimepicker","_hourStep","_minuteStep","_secondStep","_ngbTimeAdapter","structValue","propagateModelChange","newVal","isPM","enteredHour","input","formatHour","touched","i18n_21","i18n_22","i18n_23","i18n_24","i18n_25","i18n_26","i18n_27","i18n_28","i18n_29","i18n_30","i18n_31","i18n_32","i18n_33","NgbTimepickerModule","NgbToastConfig","autohide","ariaLive","ngbToastFadeInTransition","ngbToastFadeOutTransition","NgbToastHeader","NgbToast","_init","_clearTimeout","_timeoutID","i18n_34","NgbToastModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","tooltipClass","NgbTooltip","_ngbTooltipWindowId","ngbTooltip","_ngbTooltip","tooltipContext","NgbTooltipModule","NgbHighlight","accentSensitive","String","prototype","console","warn","terms","prepareTerm","escapedTerms","regExpEscape","text","toSplit","parts","substring","ARIA_LIVE_DELAY","InjectionToken","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","NgbTypeaheadConfig","editable","focusFirst","selectOnExact","showHint","NgbTypeaheadWindow","selectEvent","activeChangeEvent","hasActive","results","getActive","_activeChanged","resetActive","popupClass","nextWindowId","NgbTypeahead","_live","_subscription","_inputValueBackup","_inputValueForSelectOnExact","_valueChanges$","_resubscribeTypeahead$","autocomplete","selectItem","activeDescendant","popupId","_subscribeToUserInput","ngbTypeahead","_unsubscribeFromUserInput","_closePopup","_writeInputValue","_formatItemForInput","dismissPopup","isPopupOpen","_showHint","_selectResult","_openPopup","_selectResultClosePopup","userInputLowerCase","formattedVal","setSelectionRange","apply","inputFormatter","results$","resultFormatter","count","unsubscribe","NgbTypeaheadModule","NgbOffcanvasConfig","scroll","NgbActiveOffcanvas","NgbOffcanvasRef","_panelCmptRef","_removeOffcanvasElements","panelTransition$","OffcanvasDismissReasons","NgbOffcanvasBackdrop","static","NgbOffcanvasPanel","offcanvasTransition$","panelClass","NgbOffcanvasStack","_activePanelCmptHasChanged","_backdropAttributes","_panelAttributes","_activeInstance","_panelCmpt","activeOffcanvas","panelCmptRef","ngbOffcanvasRef","_registerOffcanvasRef","_registerPanelCmpt","finalize","_applyPanelOptions","activeInstance","_offcanvasRef","hasOpenOffcanvas","unregisterOffcanvasRef","ngbPanelCmpt","NgbOffcanvas","_offcanvasStack","NgbOffcanvasModule","NGB_MODULES","NgbModule","imports"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, inject, ElementRef, NgZone, EventEmitter, Directive, Input, Output, ViewContainerRef, TemplateRef, ContentChild, ChangeDetectorRef, DestroyRef, ContentChildren, NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, PLATFORM_ID, Injector, afterNextRender, AfterRenderPhase, LOCALE_ID, ViewChild, forwardRef, afterRender, ApplicationRef, EnvironmentInjector, createComponent, Attribute, ViewChildren, InjectionToken } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, map, startWith, distinctUntilChanged, switchMap, take, tap, withLatestFrom, delay, mergeMap, skip, finalize } from 'rxjs/operators';\nimport { isPlatformBrowser, NgTemplateOutlet, formatDate, DOCUMENT, PercentPipe } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\n\nconst environment = {\n    animation: true,\n    transitionTimerDelayMs: 5,\n};\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\nclass NgbConfig {\n    constructor() {\n        this.animation = environment.animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.closeOthers = false;\n        this.destroyOnHide = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction getTransitionDurationMs(element) {\n    const { transitionDelay, transitionDuration } = window.getComputedStyle(element);\n    const transitionDelaySec = parseFloat(transitionDelay);\n    const transitionDurationSec = parseFloat(transitionDuration);\n    return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\nfunction toString(value) {\n    return value !== undefined && value !== null ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isPromise(v) {\n    return v && v.then;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    /*\n     * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n     * not support `Element.prototype.closest`. To emulate the correct behaviour\n     * we return null when the method is missing.\n     *\n     * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n     * will return the document element whilst in Edge null will be returned. This\n     * compromise was deemed good enough.\n     */\n    if (typeof element.closest === 'undefined') {\n        return null;\n    }\n    return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nfunction reflow(element) {\n    return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nfunction runInZone(zone) {\n    return (source) => {\n        return new Observable((observer) => {\n            const next = (value) => zone.run(() => observer.next(value));\n            const error = (e) => zone.run(() => observer.error(e));\n            const complete = () => zone.run(() => observer.complete());\n            return source.subscribe({ next, error, complete });\n        });\n    };\n}\nfunction removeAccents(str) {\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\nfunction getActiveElement(root = document) {\n    const activeEl = root?.activeElement;\n    if (!activeEl) {\n        return null;\n    }\n    return activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\n\nconst noopFn = () => { };\nconst { transitionTimerDelayMs } = environment;\nconst runningTransitions = new Map();\nconst ngbRunTransition = (zone, element, startFn, options) => {\n    // Getting initial context from options\n    let context = options.context || {};\n    // Checking if there are already running transitions on the given element.\n    const running = runningTransitions.get(element);\n    if (running) {\n        switch (options.runningTransition) {\n            // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n            // We're not emitting any values, but simply completing the observable (EMPTY).\n            case 'continue':\n                return EMPTY;\n            // If there is one running and we want for it to 'stop', we have to complete the running one.\n            // We're simply completing the running one and not emitting any values and merging newly provided context\n            // with the one coming from currently running transition.\n            case 'stop':\n                zone.run(() => running.transition$.complete());\n                context = Object.assign(running.context, context);\n                runningTransitions.delete(element);\n        }\n    }\n    // Running the start function\n    const endFn = startFn(element, options.animation, context) || noopFn;\n    // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n    // If animations are disabled, we have to emit a value and complete the observable\n    // In this case we have to call the end function, but can finish immediately by emitting a value,\n    // completing the observable and executing end functions synchronously.\n    if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n        zone.run(() => endFn());\n        return of(undefined).pipe(runInZone(zone));\n    }\n    // Starting a new transition\n    const transition$ = new Subject();\n    const finishTransition$ = new Subject();\n    const stop$ = transition$.pipe(endWith(true));\n    runningTransitions.set(element, {\n        transition$,\n        complete: () => {\n            finishTransition$.next();\n            finishTransition$.complete();\n        },\n        context,\n    });\n    const transitionDurationMs = getTransitionDurationMs(element);\n    // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n    // because 'transitionend' event might not be fired in some browsers, if the transitioning\n    // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n    // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n    // 2. We need to filter transition end events, because they might bubble from shorter transitions\n    // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n    zone.runOutsideAngular(() => {\n        const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({ target }) => target === element));\n        const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n        race(timer$, transitionEnd$, finishTransition$)\n            .pipe(takeUntil(stop$))\n            .subscribe(() => {\n            runningTransitions.delete(element);\n            zone.run(() => {\n                endFn();\n                transition$.next();\n                transition$.complete();\n            });\n        });\n    });\n    return transition$.asObservable();\n};\nconst ngbCompleteTransition = (element) => {\n    runningTransitions.get(element)?.complete();\n};\n\nfunction measureCollapsingElementDimensionPx(element, dimension) {\n    // SSR fix for without injecting the PlatformId\n    if (typeof navigator === 'undefined') {\n        return '0px';\n    }\n    const { classList } = element;\n    const hasShownClass = classList.contains('show');\n    if (!hasShownClass) {\n        classList.add('show');\n    }\n    element.style[dimension] = '';\n    const dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n    if (!hasShownClass) {\n        classList.remove('show');\n    }\n    return dimensionSize;\n}\nconst ngbCollapsingTransition = (element, animation, context) => {\n    let { direction, maxSize, dimension } = context;\n    const { classList } = element;\n    function setInitialClasses() {\n        classList.add('collapse');\n        if (direction === 'show') {\n            classList.add('show');\n        }\n        else {\n            classList.remove('show');\n        }\n    }\n    // without animations we just need to set initial classes\n    if (!animation) {\n        setInitialClasses();\n        return;\n    }\n    // No maxHeight -> running the transition for the first time\n    if (!maxSize) {\n        maxSize = measureCollapsingElementDimensionPx(element, dimension);\n        context.maxSize = maxSize;\n        // Fix the height before starting the animation\n        element.style[dimension] = direction !== 'show' ? maxSize : '0px';\n        classList.remove('collapse', 'collapsing', 'show');\n        reflow(element);\n        // Start the animation\n        classList.add('collapsing');\n    }\n    // Start or revert the animation\n    element.style[dimension] = direction === 'show' ? maxSize : '0px';\n    return () => {\n        setInitialClasses();\n        classList.remove('collapsing');\n        element.style[dimension] = '';\n    };\n};\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\nclass NgbCollapseConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.horizontal = false;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\nclass NgbCollapse {\n    constructor() {\n        this._config = inject(NgbCollapseConfig);\n        this._element = inject(ElementRef);\n        this._zone = inject(NgZone);\n        /**\n         * If `true`, collapse will be animated.\n         *\n         * Animation is triggered only when clicked on triggering element\n         * or via the `.toggle()` function\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Flag used to track if the collapse setter is invoked during initialization\n         * or not. This distinction is made in order to avoid running the transition during initialization.\n         */\n        this._afterInit = false;\n        this._isCollapsed = false;\n        this.ngbCollapseChange = new EventEmitter();\n        /**\n         * If `true`, will collapse horizontally.\n         *\n         * @since 13.1.0\n         */\n        this.horizontal = this._config.horizontal;\n        /**\n         * An event emitted when the collapse element is shown, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is hidden, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n    set collapsed(isCollapsed) {\n        if (this._isCollapsed !== isCollapsed) {\n            this._isCollapsed = isCollapsed;\n            if (this._afterInit) {\n                this._runTransitionWithEvents(isCollapsed, this.animation);\n            }\n        }\n    }\n    ngOnInit() {\n        this._runTransition(this._isCollapsed, false);\n        this._afterInit = true;\n    }\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open = this._isCollapsed) {\n        this.collapsed = !open;\n        this.ngbCollapseChange.next(this._isCollapsed);\n    }\n    _runTransition(collapsed, animation) {\n        return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n            animation,\n            runningTransition: 'stop',\n            context: { direction: collapsed ? 'hide' : 'show', dimension: this.horizontal ? 'width' : 'height' },\n        });\n    }\n    _runTransitionWithEvents(collapsed, animation) {\n        this._runTransition(collapsed, animation).subscribe(() => {\n            if (collapsed) {\n                this.hidden.emit();\n            }\n            else {\n                this.shown.emit();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapse, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbCollapse, isStandalone: true, selector: \"[ngbCollapse]\", inputs: { animation: \"animation\", collapsed: [\"ngbCollapse\", \"collapsed\"], horizontal: \"horizontal\" }, outputs: { ngbCollapseChange: \"ngbCollapseChange\", shown: \"shown\", hidden: \"hidden\" }, host: { properties: { \"class.collapse-horizontal\": \"horizontal\" } }, exportAs: [\"ngbCollapse\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    standalone: true,\n                    host: {\n                        '[class.collapse-horizontal]': 'horizontal',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], collapsed: [{\n                type: Input,\n                args: ['ngbCollapse']\n            }], ngbCollapseChange: [{\n                type: Output\n            }], horizontal: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nlet nextId$3 = 0;\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\nclass NgbAccordionBody {\n    constructor() {\n        this._vcr = inject(ViewContainerRef);\n        this._element = inject((ElementRef)).nativeElement;\n        this._item = inject(NgbAccordionItem);\n        this._viewRef = null;\n    }\n    ngAfterContentChecked() {\n        if (this._bodyTpl) {\n            if (this._item._shouldBeInDOM) {\n                this._createViewIfNotExists();\n            }\n            else {\n                this._destroyViewIfExists();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyViewIfExists();\n    }\n    _destroyViewIfExists() {\n        this._viewRef?.destroy();\n        this._viewRef = null;\n    }\n    _createViewIfNotExists() {\n        if (!this._viewRef) {\n            this._viewRef = this._vcr.createEmbeddedView(this._bodyTpl);\n            this._viewRef.detectChanges();\n            for (const node of this._viewRef.rootNodes) {\n                this._element.appendChild(node);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionBody, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionBody, isStandalone: true, selector: \"[ngbAccordionBody]\", host: { classAttribute: \"accordion-body\" }, queries: [{ propertyName: \"_bodyTpl\", first: true, predicate: TemplateRef, descendants: true, static: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionBody, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionBody]',\n                    standalone: true,\n                    host: {\n                        class: 'accordion-body',\n                    },\n                }]\n        }], propDecorators: { _bodyTpl: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\nclass NgbAccordionCollapse {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n        this.ngbCollapse = inject(NgbCollapse);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionCollapse, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionCollapse, isStandalone: true, selector: \"[ngbAccordionCollapse]\", host: { attributes: { \"role\": \"region\" }, properties: { \"id\": \"item.collapseId\", \"attr.aria-labelledby\": \"item.toggleId\" }, classAttribute: \"accordion-collapse\" }, exportAs: [\"ngbAccordionCollapse\"], hostDirectives: [{ directive: NgbCollapse }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'ngbAccordionCollapse',\n                    standalone: true,\n                    selector: '[ngbAccordionCollapse]',\n                    host: {\n                        role: 'region',\n                        class: 'accordion-collapse',\n                        '[id]': 'item.collapseId',\n                        '[attr.aria-labelledby]': 'item.toggleId',\n                    },\n                    hostDirectives: [NgbCollapse],\n                }]\n        }] });\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\nclass NgbAccordionToggle {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n        this.accordion = inject(NgbAccordionDirective);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionToggle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionToggle, isStandalone: true, selector: \"[ngbAccordionToggle]\", host: { listeners: { \"click\": \"!item.disabled && accordion.toggle(item.id)\" }, properties: { \"id\": \"item.toggleId\", \"class.collapsed\": \"item.collapsed\", \"attr.aria-controls\": \"item.collapseId\", \"attr.aria-expanded\": \"!item.collapsed\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionToggle]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'item.toggleId',\n                        '[class.collapsed]': 'item.collapsed',\n                        '[attr.aria-controls]': 'item.collapseId',\n                        '[attr.aria-expanded]': '!item.collapsed',\n                        '(click)': '!item.disabled && accordion.toggle(item.id)',\n                    },\n                }]\n        }] });\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\nclass NgbAccordionButton {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionButton, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionButton, isStandalone: true, selector: \"button[ngbAccordionButton]\", host: { attributes: { \"type\": \"button\" }, properties: { \"disabled\": \"item.disabled\" }, classAttribute: \"accordion-button\" }, hostDirectives: [{ directive: NgbAccordionToggle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbAccordionButton]',\n                    standalone: true,\n                    host: {\n                        '[disabled]': 'item.disabled',\n                        class: 'accordion-button',\n                        type: 'button',\n                    },\n                    hostDirectives: [NgbAccordionToggle],\n                }]\n        }] });\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\nclass NgbAccordionHeader {\n    constructor() {\n        this.item = inject(NgbAccordionItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionHeader, isStandalone: true, selector: \"[ngbAccordionHeader]\", host: { attributes: { \"role\": \"heading\" }, properties: { \"class.collapsed\": \"item.collapsed\" }, classAttribute: \"accordion-header\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionHeader]',\n                    standalone: true,\n                    host: {\n                        role: 'heading',\n                        class: 'accordion-header',\n                        '[class.collapsed]': 'item.collapsed',\n                    },\n                }]\n        }] });\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\nclass NgbAccordionItem {\n    constructor() {\n        this._accordion = inject(NgbAccordionDirective);\n        this._cd = inject(ChangeDetectorRef);\n        this._destroyRef = inject(DestroyRef);\n        this._collapsed = true;\n        this._id = `ngb-accordion-item-${nextId$3++}`;\n        this._collapseAnimationRunning = false;\n        /**\n         * If `true`, the accordion item will be disabled.\n         * It won't react to user's clicks, but still will be toggelable programmatically.\n         */\n        this.disabled = false;\n        /**\n         * Event emitted before the expanding animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. It has no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * It has no payload.\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * Sets the custom ID of the accordion item. It must be unique for the document.\n     *\n     * @param id The ID of the accordion item, must be a non-empty string\n     */\n    set id(id) {\n        if (isString(id) && id !== '') {\n            this._id = id;\n        }\n    }\n    /**\n     * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n     *\n     * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n     */\n    set destroyOnHide(destroyOnHide) {\n        this._destroyOnHide = destroyOnHide;\n    }\n    get destroyOnHide() {\n        return this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide;\n    }\n    /**\n     *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n     *\n     * @param collapsed New state of the accordion item.\n     */\n    set collapsed(collapsed) {\n        if (collapsed) {\n            this.collapse();\n        }\n        else {\n            this.expand();\n        }\n    }\n    get collapsed() {\n        return this._collapsed;\n    }\n    get id() {\n        return `${this._id}`;\n    }\n    get toggleId() {\n        return `${this.id}-toggle`;\n    }\n    get collapseId() {\n        return `${this.id}-collapse`;\n    }\n    get _shouldBeInDOM() {\n        return !this.collapsed || this._collapseAnimationRunning || !this.destroyOnHide;\n    }\n    ngAfterContentInit() {\n        const { ngbCollapse } = this._collapse;\n        // we need to disable the animation for the first init\n        ngbCollapse.animation = false;\n        ngbCollapse.collapsed = this.collapsed;\n        // we set the animation to the default of the accordion\n        ngbCollapse.animation = this._accordion.animation;\n        // event forwarding from 'ngbCollapse' to 'ngbAccordion'\n        ngbCollapse.hidden.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            // when the animation finishes we can remove the template from DOM\n            this._collapseAnimationRunning = false;\n            this.hidden.emit();\n            this._accordion.hidden.emit(this.id);\n        });\n        ngbCollapse.shown.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            this.shown.emit();\n            this._accordion.shown.emit(this.id);\n        });\n    }\n    /**\n     * Toggles an accordion item.\n     */\n    toggle() {\n        this.collapsed = !this.collapsed;\n    }\n    /**\n     * Expands an accordion item.\n     */\n    expand() {\n        if (this.collapsed) {\n            // checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n            if (!this._accordion._ensureCanExpand(this)) {\n                return;\n            }\n            this._collapsed = false;\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n            // we need force CD to get template into DOM before starting animation to calculate its height correctly\n            // this will synchronously put the item body into DOM, because `this._collapsed` was flipped to `false`\n            this._cd.detectChanges();\n            // firing events before starting animations\n            this.show.emit();\n            this._accordion.show.emit(this.id);\n            // we also need to make sure 'animation' flag is up-to- date\n            this._collapse.ngbCollapse.animation = this._accordion.animation;\n            this._collapse.ngbCollapse.collapsed = false;\n        }\n    }\n    /**\n     * Collapses an accordion item.\n     */\n    collapse() {\n        if (!this.collapsed) {\n            this._collapsed = true;\n            this._collapseAnimationRunning = true;\n            // need if the accordion is used inside a component having OnPush change detection strategy\n            this._cd.markForCheck();\n            // firing events before starting animations\n            this.hide.emit();\n            this._accordion.hide.emit(this.id);\n            // we also need to make sure 'animation' flag is up-to- date\n            this._collapse.ngbCollapse.animation = this._accordion.animation;\n            this._collapse.ngbCollapse.collapsed = true;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionItem, isStandalone: true, selector: \"[ngbAccordionItem]\", inputs: { id: [\"ngbAccordionItem\", \"id\"], destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", collapsed: \"collapsed\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"accordion-item\" }, queries: [{ propertyName: \"_collapse\", first: true, predicate: NgbAccordionCollapse, descendants: true, static: true }], exportAs: [\"ngbAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionItem]',\n                    exportAs: 'ngbAccordionItem',\n                    standalone: true,\n                    host: {\n                        '[id]': 'id',\n                        class: 'accordion-item',\n                    },\n                }]\n        }], propDecorators: { _collapse: [{\n                type: ContentChild,\n                args: [NgbAccordionCollapse, { static: true }]\n            }], id: [{\n                type: Input,\n                args: ['ngbAccordionItem']\n            }], destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\nclass NgbAccordionDirective {\n    constructor() {\n        this._config = inject(NgbAccordionConfig);\n        this._anItemWasAlreadyExpandedDuringInitialisation = false;\n        /**\n         * If `true`, accordion will be animated.\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, only one item at the time can stay open.\n         */\n        this.closeOthers = this._config.closeOthers;\n        /**\n         * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n         *\n         * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n         */\n        this.destroyOnHide = this._config.destroyOnHide;\n        /**\n         * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * The payload is the id of hidden accordion item.\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * Toggles an item with the given id.\n     *\n     * It will toggle an item, even if it is disabled.\n     *\n     * @param itemId The id of the item to toggle.\n     */\n    toggle(itemId) {\n        this._getItem(itemId)?.toggle();\n    }\n    /**\n     * Expands an item with the given id.\n     *\n     * If `closeOthers` is `true`, it will collapse other panels.\n     *\n     * @param itemId The id of the item to expand.\n     */\n    expand(itemId) {\n        this._getItem(itemId)?.expand();\n    }\n    /**\n     * Expands all items.\n     *\n     * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n     */\n    expandAll() {\n        if (this._items) {\n            if (this.closeOthers) {\n                // we check if there is an item open and if it is not we can expand the first item\n                // (otherwise we toggle nothing)\n                if (!this._items.find((item) => !item.collapsed)) {\n                    this._items.first.expand();\n                }\n            }\n            else {\n                this._items.forEach((item) => item.expand());\n            }\n        }\n    }\n    /**\n     * Collapses an item with the given id.\n     *\n     * Has no effect if the `itemId` does not correspond to any item.\n     *\n     * @param itemId The id of the item to collapse.\n     */\n    collapse(itemId) {\n        this._getItem(itemId)?.collapse();\n    }\n    /**\n     * Collapses all items.\n     */\n    collapseAll() {\n        this._items?.forEach((item) => item.collapse());\n    }\n    /**\n     * Checks if an item with the given id is expanded.\n     *\n     * If the `itemId` does not correspond to any item, it returns `false`.\n     *\n     * @param itemId The id of the item to check.\n     */\n    isExpanded(itemId) {\n        const item = this._getItem(itemId);\n        return item ? !item.collapsed : false;\n    }\n    /**\n     * It checks, if the item can be expanded in the current state of the accordion.\n     * With `closeOthers` there can be only one expanded item at a time.\n     *\n     * @internal\n     */\n    _ensureCanExpand(toExpand) {\n        if (!this.closeOthers) {\n            return true;\n        }\n        // special case during the initialization of the [collapse]=\"false\" inputs\n        // `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n        if (!this._items) {\n            if (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n                this._anItemWasAlreadyExpandedDuringInitialisation = true;\n                return true;\n            }\n            return false;\n        }\n        // if there is an expanded item, we need to collapse it first\n        this._items.find((item) => !item.collapsed && toExpand !== item)?.collapse();\n        return true;\n    }\n    _getItem(itemId) {\n        return this._items?.find((item) => item.id === itemId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbAccordionDirective, isStandalone: true, selector: \"[ngbAccordion]\", inputs: { animation: \"animation\", closeOthers: \"closeOthers\", destroyOnHide: \"destroyOnHide\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { classAttribute: \"accordion\" }, queries: [{ propertyName: \"_items\", predicate: NgbAccordionItem }], exportAs: [\"ngbAccordion\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordion]',\n                    standalone: true,\n                    exportAs: 'ngbAccordion',\n                    host: {\n                        class: 'accordion',\n                    },\n                }]\n        }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbAccordionItem, { descendants: false }]\n            }], animation: [{\n                type: Input\n            }], closeOthers: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nconst NGB_ACCORDION_DIRECTIVES = [\n    NgbAccordionButton,\n    NgbAccordionDirective,\n    NgbAccordionItem,\n    NgbAccordionHeader,\n    NgbAccordionToggle,\n    NgbAccordionBody,\n    NgbAccordionCollapse,\n];\nclass NgbAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionModule, imports: [NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse], exports: [NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_ACCORDION_DIRECTIVES,\n                    exports: NGB_ACCORDION_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ngbAlertFadingTransition = ({ classList }) => {\n    classList.remove('show');\n};\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    constructor() {\n        this._config = inject(NgbAlertConfig);\n        this._elementRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        /**\n         * If `true`, alert closing will be animated.\n         *\n         * Animation is triggered only when clicked on the close button (×)\n         * or via the `.close()` function\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, alert can be dismissed by the user.\n         *\n         * The close button (×) will be displayed and you can be notified\n         * of the event with the `(closed)` output.\n         */\n        this.dismissible = this._config.dismissible;\n        /**\n         * Type of the alert.\n         *\n         * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n         * `'secondary'`, `'light'` and `'dark'`.\n         */\n        this.type = this._config.type;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         *\n         * @since 8.0.0\n         */\n        this.closed = new EventEmitter();\n    }\n    /**\n     * Triggers alert closing programmatically (same as clicking on the close button (×)).\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(closed)` output\n     *\n     * @since 8.0.0\n     */\n    close() {\n        const transition = ngbRunTransition(this._zone, this._elementRef.nativeElement, ngbAlertFadingTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => this.closed.emit());\n        return transition;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlert, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbAlert, isStandalone: true, selector: \"ngb-alert\", inputs: { animation: \"animation\", dismissible: \"dismissible\", type: \"type\" }, outputs: { closed: \"closed\" }, host: { attributes: { \"role\": \"alert\" }, properties: { \"class\": \"\\\"alert show\\\" + (type ? \\\" alert-\\\" + type : \\\"\\\")\", \"class.fade\": \"animation\", \"class.alert-dismissible\": \"dismissible\" } }, exportAs: [\"ngbAlert\"], ngImport: i0, template: `\n\t\t<ng-content />\n\t\t@if (dismissible) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t\t(click)=\"close()\"\n\t\t\t></button>\n\t\t}\n\t`, isInline: true, styles: [\"ngb-alert{display:block}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlert, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-alert', exportAs: 'ngbAlert', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        role: 'alert',\n                        '[class]': '\"alert show\" + (type ? \" alert-\" + type : \"\")',\n                        '[class.fade]': 'animation',\n                        '[class.alert-dismissible]': 'dismissible',\n                    }, template: `\n\t\t<ng-content />\n\t\t@if (dismissible) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-close\"\n\t\t\t\taria-label=\"Close\"\n\t\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t\t(click)=\"close()\"\n\t\t\t></button>\n\t\t}\n\t`, styles: [\"ngb-alert{display:block}\\n\"] }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }] } });\n\nclass NgbAlertModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertModule, imports: [NgbAlert], exports: [NgbAlert] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbAlertModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbAlert],\n                    exports: [NgbAlert],\n                }]\n        }] });\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.pauseOnFocus = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection;\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[\"START\"] = \"start\";\n    NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nconst isBeingAnimated = ({ classList }) => {\n    return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\nconst removeDirectionClasses = (classList) => {\n    classList.remove('carousel-item-start', 'carousel-item-end');\n};\nconst removeClasses = (classList) => {\n    removeDirectionClasses(classList);\n    classList.remove('carousel-item-prev', 'carousel-item-next');\n};\nconst ngbCarouselTransitionIn = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeClasses(classList);\n        classList.add('active');\n        return;\n    }\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n        reflow(element);\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.add('active');\n    };\n};\nconst ngbCarouselTransitionOut = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeClasses(classList);\n        classList.remove('active');\n        return;\n    }\n    //  direction is left or right, depending on the way the slide goes out.\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.remove('active');\n    };\n};\n\nlet nextId$2 = 0;\nlet carouselId = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n        /**\n         * An event emitted when the slide transition is finished\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbSlide, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbSlide, isStandalone: true, selector: \"ng-template[ngbSlide]\", inputs: { id: \"id\" }, outputs: { slid: \"slid\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbSlide, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbSlide]', standalone: true }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], slid: [{\n                type: Output\n            }] } });\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    constructor() {\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._config = inject(NgbCarouselConfig);\n        this._platformId = inject(PLATFORM_ID);\n        this._ngZone = inject(NgZone);\n        this._cd = inject(ChangeDetectorRef);\n        this._container = inject(ElementRef);\n        this._destroyRef = inject(DestroyRef);\n        this._injector = inject(Injector);\n        this._interval$ = new BehaviorSubject(this._config.interval);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._focused$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(this._config.pauseOnHover);\n        this._pauseOnFocus$ = new BehaviorSubject(this._config.pauseOnFocus);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(this._config.wrap);\n        this.id = `ngb-carousel-${carouselId++}`;\n        /**\n         * A flag to enable/disable the animations.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n         */\n        this.keyboard = this._config.keyboard;\n        /**\n         * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n         *\n         * @since 2.2.0\n         */\n        this.showNavigationArrows = this._config.showNavigationArrows;\n        /**\n         * If `true`, navigation indicators at the bottom of the slide will be visible.\n         *\n         * @since 2.2.0\n         */\n        this.showNavigationIndicators = this._config.showNavigationIndicators;\n        /**\n         * An event emitted just before the slide transition starts.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n        /*\n         * Keep the ids of the panels currently transitionning\n         * in order to allow only the transition revertion\n         */\n        this._transitionIds = null;\n    }\n    /**\n     * Time in milliseconds before the next slide is shown.\n     */\n    set interval(value) {\n        this._interval$.next(value);\n    }\n    get interval() {\n        return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n    set wrap(value) {\n        this._wrap$.next(value);\n    }\n    get wrap() {\n        return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n    set pauseOnHover(value) {\n        this._pauseOnHover$.next(value);\n    }\n    get pauseOnHover() {\n        return this._pauseOnHover$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when the focus is inside the carousel.\n     */\n    set pauseOnFocus(value) {\n        this._pauseOnFocus$.next(value);\n    }\n    get pauseOnFocus() {\n        return this._pauseOnFocus$.value;\n    }\n    set mouseHover(value) {\n        this._mouseHover$.next(value);\n    }\n    get mouseHover() {\n        return this._mouseHover$.value;\n    }\n    set focused(value) {\n        this._focused$.next(value);\n    }\n    get focused() {\n        return this._focused$.value;\n    }\n    arrowLeft() {\n        this.focus();\n        this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n    arrowRight() {\n        this.focus();\n        this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular(() => {\n                const hasNextSlide$ = combineLatest([\n                    this.slide.pipe(map((slideEvent) => slideEvent.current), startWith(this.activeId)),\n                    this._wrap$,\n                    this.slides.changes.pipe(startWith(null)),\n                ]).pipe(map(([currentSlideId, wrap]) => {\n                    const slideArr = this.slides.toArray();\n                    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                }), distinctUntilChanged());\n                combineLatest([\n                    this._pause$,\n                    this._pauseOnHover$,\n                    this._mouseHover$,\n                    this._pauseOnFocus$,\n                    this._focused$,\n                    this._interval$,\n                    hasNextSlide$,\n                ])\n                    .pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap((interval) => (interval > 0 ? timer(interval, interval) : NEVER)), takeUntilDestroyed(this._destroyRef))\n                    .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n            });\n        }\n        this.slides.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n            this._transitionIds?.forEach((id) => ngbCompleteTransition(this._getSlideElement(id)));\n            this._transitionIds = null;\n            this._cd.markForCheck();\n            // The following code need to be done asynchronously, after the dom becomes stable,\n            // otherwise all changes will be undone.\n            afterNextRender(() => {\n                for (const { id } of this.slides) {\n                    const element = this._getSlideElement(id);\n                    if (id === this.activeId) {\n                        element.classList.add('active');\n                    }\n                    else {\n                        element.classList.remove('active');\n                    }\n                }\n            }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n        });\n    }\n    ngAfterContentChecked() {\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n    }\n    ngAfterViewInit() {\n        // Initialize the 'active' class (not managed by the template)\n        if (this.activeId) {\n            const element = this._getSlideElement(this.activeId);\n            if (element) {\n                element.classList.add('active');\n            }\n        }\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    select(slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n    prev(source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n    next(source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n    pause() {\n        this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from start to end.\n     */\n    cycle() {\n        this._pause$.next(false);\n    }\n    /**\n     * Set the focus on the carousel.\n     */\n    focus() {\n        this._container.nativeElement.focus();\n    }\n    _cycleToSelected(slideIdx, direction, source) {\n        const transitionIds = this._transitionIds;\n        if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n            // Revert prevented\n            return;\n        }\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this._transitionIds = [this.activeId, slideIdx];\n            this.slide.emit({\n                prev: this.activeId,\n                current: selectedSlide.id,\n                direction: direction,\n                paused: this._pause$.value,\n                source,\n            });\n            const options = {\n                animation: this.animation,\n                runningTransition: 'stop',\n                context: { direction },\n            };\n            const transitions = [];\n            const activeSlide = this._getSlideById(this.activeId);\n            if (activeSlide) {\n                const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n                activeSlideTransition.subscribe(() => {\n                    activeSlide.slid.emit({ isShown: false, direction, source });\n                });\n                transitions.push(activeSlideTransition);\n            }\n            const previousId = this.activeId;\n            this.activeId = selectedSlide.id;\n            const nextSlide = this._getSlideById(this.activeId);\n            const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n            transition.subscribe(() => {\n                nextSlide?.slid.emit({ isShown: true, direction, source });\n            });\n            transitions.push(transition);\n            zip(...transitions)\n                .pipe(take(1))\n                .subscribe(() => {\n                this._transitionIds = null;\n                this.slid.emit({\n                    prev: previousId,\n                    current: selectedSlide.id,\n                    direction: direction,\n                    paused: this._pause$.value,\n                    source,\n                });\n            });\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n    }\n    _getSlideById(slideId) {\n        return this.slides.find((slide) => slide.id === slideId) || null;\n    }\n    _getSlideIdxById(slideId) {\n        const slide = this._getSlideById(slideId);\n        return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n    _getNextSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide\n            ? this.wrap\n                ? slideArr[0].id\n                : slideArr[slideArr.length - 1].id\n            : slideArr[currentSlideIdx + 1].id;\n    }\n    _getPrevSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide\n            ? this.wrap\n                ? slideArr[slideArr.length - 1].id\n                : slideArr[0].id\n            : slideArr[currentSlideIdx - 1].id;\n    }\n    _getSlideElement(slideId) {\n        return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarousel, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbCarousel, isStandalone: true, selector: \"ngb-carousel\", inputs: { animation: \"animation\", activeId: \"activeId\", interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", pauseOnFocus: \"pauseOnFocus\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\" }, outputs: { slide: \"slide\", slid: \"slid\" }, host: { attributes: { \"tabIndex\": \"0\" }, listeners: { \"keydown.arrowLeft\": \"keyboard && arrowLeft()\", \"keydown.arrowRight\": \"keyboard && arrowRight()\", \"mouseenter\": \"mouseHover = true\", \"mouseleave\": \"mouseHover = false\", \"focusin\": \"focused = true\", \"focusout\": \"focused = false\" }, properties: { \"style.display\": \"\\\"block\\\"\", \"attr.aria-activedescendant\": \"'slide-' + activeId\" }, classAttribute: \"carousel slide\" }, queries: [{ propertyName: \"slides\", predicate: NgbSlide }], exportAs: [\"ngbCarousel\"], ngImport: i0, template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t@for (slide of slides; track slide) {\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-bs-target\n\t\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t\t></button>\n\t\t\t}\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t@for (slide of slides; track slide; let i = $index; let c = $count) {\n\t\t\t\t<div class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.templateRef\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t@if (showNavigationArrows) {\n\t\t\t<button\n\t\t\t\tclass=\"carousel-control-prev\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"arrowLeft()\"\n\t\t\t\t[attr.aria-labelledby]=\"id + '-previous'\"\n\t\t\t>\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\" [id]=\"id + '-previous'\">Previous</span>\n\t\t\t</button>\n\t\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" [attr.aria-labelledby]=\"id + '-next'\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\" [id]=\"id + '-next'\">Next</span>\n\t\t\t</button>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarousel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    standalone: true,\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        tabIndex: '0',\n                        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n                        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n                        '(mouseenter)': 'mouseHover = true',\n                        '(mouseleave)': 'mouseHover = false',\n                        '(focusin)': 'focused = true',\n                        '(focusout)': 'focused = false',\n                        '[attr.aria-activedescendant]': `'slide-' + activeId`,\n                    },\n                    template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t@for (slide of slides; track slide) {\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-bs-target\n\t\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t\t></button>\n\t\t\t}\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t@for (slide of slides; track slide; let i = $index; let c = $count) {\n\t\t\t\t<div class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.templateRef\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t@if (showNavigationArrows) {\n\t\t\t<button\n\t\t\t\tclass=\"carousel-control-prev\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t(click)=\"arrowLeft()\"\n\t\t\t\t[attr.aria-labelledby]=\"id + '-previous'\"\n\t\t\t>\n\t\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\" [id]=\"id + '-previous'\">Previous</span>\n\t\t\t</button>\n\t\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" [attr.aria-labelledby]=\"id + '-next'\">\n\t\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\" [id]=\"id + '-next'\">Next</span>\n\t\t\t</button>\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { slides: [{\n                type: ContentChildren,\n                args: [NgbSlide]\n            }], animation: [{\n                type: Input\n            }], activeId: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], wrap: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], pauseOnHover: [{\n                type: Input\n            }], pauseOnFocus: [{\n                type: Input\n            }], showNavigationArrows: [{\n                type: Input\n            }], showNavigationIndicators: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slid: [{\n                type: Output\n            }] } });\nvar NgbSlideEventSource;\n(function (NgbSlideEventSource) {\n    NgbSlideEventSource[\"TIMER\"] = \"timer\";\n    NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n    NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n    NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nclass NgbCarouselModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselModule, imports: [NgbCarousel, NgbSlide], exports: [NgbCarousel, NgbSlide] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCarousel, NgbSlide],\n                    exports: [NgbCarousel, NgbSlide],\n                }]\n        }] });\n\nclass NgbCollapseModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseModule, imports: [NgbCollapse], exports: [NgbCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCollapseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCollapse],\n                    exports: [NgbCollapse],\n                }]\n        }] });\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    equals(other) {\n        return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nclass NgbCalendar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendar, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendar, providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }]\n        }] });\nclass NgbCalendarGregorian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toJSDate(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromJSDate(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toJSDate(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromJSDate(new Date());\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toJSDate(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarGregorian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarGregorian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarGregorian, decorators: [{\n            type: Injectable\n        }] });\n\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date || null;\n}\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    return !(date === null ||\n        date === undefined ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        const index = months.findIndex((month) => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        const index = months.findIndex((month) => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    const length = end - start + 1;\n    const numbers = Array(length);\n    for (let i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    const nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    const prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return (minDate != null &&\n        ((prevDate.year === minDate.year && prevDate.month < minDate.month) ||\n            (prevDate.year < minDate.year && minDate.month === 1)));\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        const firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            const reusedIndex = monthsToReuse.findIndex((month) => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays, weekdayWidth, weekdaysVisible, } = state;\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // clearing weekdays, if not visible\n    if (!weekdaysVisible) {\n        month.weekdays.length = 0;\n    }\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0 && weekdaysVisible) {\n                month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n            }\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            const nextDate = calendar.getNext(newDate);\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            let contextUserData = dayTemplateData\n                ? dayTemplateData(newDate, { month: month.number, year: month.year })\n                : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year,\n                disabled,\n                focused: false,\n                selected: false,\n                today,\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map((day) => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed =\n            outsideDays === 'collapsed' &&\n                days[0].date.month !== month.number &&\n                days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    const daysPerWeek = calendar.getDaysPerWeek();\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the text label to display above the day view.\n     *\n     * @since 9.1.0\n     */\n    getMonthLabel(date) {\n        return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date) {\n        return `${date.day}`;\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber) {\n        return `${weekNumber}`;\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year) {\n        return `${year}`;\n    }\n    /**\n     * Returns the week label to display in the heading of the month view.\n     *\n     * @since 9.1.0\n     */\n    getWeekLabel() {\n        return '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18n, providedIn: 'root', useFactory: () => new NgbDatepickerI18nDefault() }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => new NgbDatepickerI18nDefault(),\n                }]\n        }] });\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    constructor() {\n        super(...arguments);\n        this._locale = inject(LOCALE_ID);\n        this._monthsShort = [...Array(12).keys()].map((month) => Intl.DateTimeFormat(this._locale, { month: 'short', timeZone: 'UTC' }).format(Date.UTC(2000, month)));\n        this._monthsFull = [...Array(12).keys()].map((month) => Intl.DateTimeFormat(this._locale, { month: 'long', timeZone: 'UTC' }).format(Date.UTC(2000, month)));\n    }\n    getWeekdayLabel(weekday, width = 'narrow') {\n        // 1 MAY 2000 is a Monday\n        const weekdays = [1, 2, 3, 4, 5, 6, 7].map((day) => Intl.DateTimeFormat(this._locale, { weekday: width, timeZone: 'UTC' }).format(Date.UTC(2000, 4, day)));\n        // `weekday` is 1 (Mon) to 7 (Sun)\n        return weekdays[weekday - 1] || '';\n    }\n    getMonthShortName(month) {\n        return this._monthsShort[month - 1] || '';\n    }\n    getMonthFullName(month) {\n        return this._monthsFull[month - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nDefault, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nDefault, decorators: [{\n            type: Injectable\n        }] });\n\nclass NgbDatepickerService {\n    constructor() {\n        this._VALIDATORS = {\n            dayTemplateData: (dayTemplateData) => {\n                if (this._state.dayTemplateData !== dayTemplateData) {\n                    return { dayTemplateData };\n                }\n            },\n            displayMonths: (displayMonths) => {\n                displayMonths = toInteger(displayMonths);\n                if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                    return { displayMonths };\n                }\n            },\n            disabled: (disabled) => {\n                if (this._state.disabled !== disabled) {\n                    return { disabled };\n                }\n            },\n            firstDayOfWeek: (firstDayOfWeek) => {\n                firstDayOfWeek = toInteger(firstDayOfWeek);\n                if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                    return { firstDayOfWeek };\n                }\n            },\n            focusVisible: (focusVisible) => {\n                if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                    return { focusVisible };\n                }\n            },\n            markDisabled: (markDisabled) => {\n                if (this._state.markDisabled !== markDisabled) {\n                    return { markDisabled };\n                }\n            },\n            maxDate: (date) => {\n                const maxDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.maxDate, maxDate)) {\n                    return { maxDate };\n                }\n            },\n            minDate: (date) => {\n                const minDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.minDate, minDate)) {\n                    return { minDate };\n                }\n            },\n            navigation: (navigation) => {\n                if (this._state.navigation !== navigation) {\n                    return { navigation };\n                }\n            },\n            outsideDays: (outsideDays) => {\n                if (this._state.outsideDays !== outsideDays) {\n                    return { outsideDays };\n                }\n            },\n            weekdays: (weekdays) => {\n                const weekdayWidth = weekdays === true || weekdays === false ? 'narrow' : weekdays;\n                const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n                if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n                    return { weekdayWidth, weekdaysVisible };\n                }\n            },\n        };\n        this._calendar = inject(NgbCalendar);\n        this._i18n = inject(NgbDatepickerI18n);\n        this._model$ = new Subject();\n        this._dateSelect$ = new Subject();\n        this._state = {\n            dayTemplateData: null,\n            markDisabled: null,\n            maxDate: null,\n            minDate: null,\n            disabled: false,\n            displayMonths: 1,\n            firstDate: null,\n            firstDayOfWeek: 1,\n            lastDate: null,\n            focusDate: null,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectedDate: null,\n            selectBoxes: { years: [], months: [] },\n            weekdayWidth: 'narrow',\n            weekdaysVisible: true,\n        };\n    }\n    get model$() {\n        return this._model$.pipe(filter((model) => model.months.length > 0));\n    }\n    get dateSelect$() {\n        return this._dateSelect$.pipe(filter((date) => date !== null));\n    }\n    set(options) {\n        let patch = Object.keys(options)\n            .map((key) => this._VALIDATORS[key](options[key]))\n            .reduce((obj, part) => ({ ...obj, ...part }), {});\n        if (Object.keys(patch).length > 0) {\n            this._nextState(patch);\n        }\n    }\n    focus(date) {\n        const focusedDate = this.toValidDate(date, null);\n        if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    open(date) {\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (firstDate != null &&\n            !this._state.disabled &&\n            (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n            this._nextState({ firstDate });\n        }\n    }\n    select(date, options = {}) {\n        const selectedDate = this.toValidDate(date, null);\n        if (selectedDate != null && !this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._dateSelect$.next(selectedDate);\n            }\n        }\n    }\n    toValidDate(date, defaultValue) {\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    getMonth(struct) {\n        for (let month of this._state.months) {\n            if (struct.month === month.number && struct.year === month.year) {\n                return month;\n            }\n        }\n        throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n    }\n    _nextState(patch) {\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach((month) => {\n            month.weeks.forEach((week) => {\n                week.days.forEach((day) => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex =\n                        !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden =\n                            outsideDays === 'hidden' ||\n                                outsideDays === 'collapsed' ||\n                                (displayMonths > 1 &&\n                                    day.date.after(months[0].firstDate) &&\n                                    day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    }\n    _updateState(patch) {\n        // patching fields\n        const state = Object.assign({}, this._state, patch);\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 &&\n                state.focusDate &&\n                !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            const forceRebuild = 'dayTemplateData' in patch ||\n                'firstDayOfWeek' in patch ||\n                'markDisabled' in patch ||\n                'minDate' in patch ||\n                'maxDate' in patch ||\n                'disabled' in patch ||\n                'outsideDays' in patch ||\n                'weekdaysVisible' in patch;\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months[0].firstDate;\n            state.lastDate = months[months.length - 1].lastDate;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerService, decorators: [{\n            type: Injectable\n        }] });\n\nvar NavigationEvent;\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekNumbers = false;\n        this.weekdays = 'narrow';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nclass NgbDateAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }]\n        }] });\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    fromModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nclass NgbDatepickerKeyboardService {\n    /**\n     * Processes a keyboard event.\n     */\n    processKey(event, datepicker) {\n        const { state, calendar } = datepicker;\n        switch (event.key) {\n            case 'PageUp':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case 'PageDown':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case 'End':\n                datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                break;\n            case 'Home':\n                datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                break;\n            case 'ArrowLeft':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                break;\n            case 'ArrowUp':\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case 'ArrowRight':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                break;\n            case 'ArrowDown':\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case 'Enter':\n            case ' ':\n                datepicker.focusSelect();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerKeyboardService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerKeyboardService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerKeyboardService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbDatepickerDayView {\n    constructor() {\n        this.i18n = inject(NgbDatepickerI18n);\n    }\n    isMuted() {\n        return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerDayView, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDatepickerDayView, isStandalone: true, selector: \"[ngbDatepickerDayView]\", inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, host: { properties: { \"class.bg-primary\": \"selected\", \"class.text-white\": \"selected\", \"class.text-muted\": \"isMuted()\", \"class.outside\": \"isMuted()\", \"class.active\": \"focused\" }, classAttribute: \"btn-light\" }, ngImport: i0, template: `{{ i18n.getDayNumerals(date) }}`, isInline: true, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-tertiary-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerDayView, decorators: [{\n            type: Component,\n            args: [{ selector: '[ngbDatepickerDayView]', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused',\n                    }, template: `{{ i18n.getDayNumerals(date) }}`, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-tertiary-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"] }]\n        }], propDecorators: { currentMonth: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\nclass NgbDatepickerNavigationSelect {\n    constructor() {\n        this._month = -1;\n        this._year = -1;\n        this.i18n = inject(NgbDatepickerI18n);\n        this.select = new EventEmitter();\n    }\n    changeMonth(month) {\n        this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n    changeYear(year) {\n        this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n    ngAfterViewChecked() {\n        if (this.date) {\n            if (this.date.month !== this._month) {\n                this._month = this.date.month;\n                this.monthSelect.nativeElement.value = `${this._month}`;\n            }\n            if (this.date.year !== this._year) {\n                this._year = this.date.year;\n                this.yearSelect.nativeElement.value = `${this._year}`;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerNavigationSelect, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbDatepickerNavigationSelect, isStandalone: true, selector: \"ngb-datepicker-navigation-select\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"monthSelect\", first: true, predicate: [\"month\"], descendants: true, read: ElementRef, static: true }, { propertyName: \"yearSelect\", first: true, predicate: [\"year\"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t@for (m of months; track m) {\n\t\t\t\t<option [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t\t}}</option>\n\t\t\t}</select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t@for (y of years; track y) {\n\t\t\t\t<option [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t\t}\n\t\t</select>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerNavigationSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation-select', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t@for (m of months; track m) {\n\t\t\t\t<option [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t\t}}</option>\n\t\t\t}</select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t@for (y of years; track y) {\n\t\t\t\t<option [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t\t}\n\t\t</select>\n\t`, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"] }]\n        }], propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], years: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], monthSelect: [{\n                type: ViewChild,\n                args: ['month', { static: true, read: ElementRef }]\n            }], yearSelect: [{\n                type: ViewChild,\n                args: ['year', { static: true, read: ElementRef }]\n            }] } });\n\nclass NgbDatepickerNavigation {\n    constructor() {\n        this.navigation = NavigationEvent;\n        this.i18n = inject(NgbDatepickerI18n);\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    onClickPrev(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.PREV);\n    }\n    onClickNext(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.NEXT);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerNavigation, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbDatepickerNavigation, isStandalone: true, selector: \"ngb-datepicker-navigation\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, ngImport: i0, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t@if (showSelect) {\n\t\t\t<ngb-datepicker-navigation-select\n\t\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t\t(select)=\"select.emit($event)\"\n\t\t\t/>\n\t\t}\n\n\t\t@if (!showSelect) {\n\t\t\t@for (month of months; track month; let i = $index) {\n\t\t\t\t@if (i > 0) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t@if (i !== months.length - 1) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"], dependencies: [{ kind: \"component\", type: NgbDatepickerNavigationSelect, selector: \"ngb-datepicker-navigation-select\", inputs: [\"date\", \"disabled\", \"months\", \"years\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerNavigation, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation', standalone: true, imports: [NgbDatepickerNavigationSelect], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t@if (showSelect) {\n\t\t\t<ngb-datepicker-navigation-select\n\t\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t\t(select)=\"select.emit($event)\"\n\t\t\t/>\n\t\t}\n\n\t\t@if (!showSelect) {\n\t\t\t@for (month of months; track month; let i = $index) {\n\t\t\t\t@if (i > 0) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t@if (i !== months.length - 1) {\n\t\t\t\t\t<div class=\"ngb-dp-arrow\"></div>\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"] }]\n        }], propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], showSelect: [{\n                type: Input\n            }], prevDisabled: [{\n                type: Input\n            }], nextDisabled: [{\n                type: Input\n            }], selectBoxes: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nclass NgbDatepickerContent {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDatepickerContent, isStandalone: true, selector: \"ng-template[ngbDatepickerContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbDatepickerContent]', standalone: true }]\n        }] });\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nclass NgbDatepickerMonth {\n    constructor() {\n        this._keyboardService = inject(NgbDatepickerKeyboardService);\n        this._service = inject(NgbDatepickerService);\n        this.i18n = inject(NgbDatepickerI18n);\n        this.datepicker = inject(NgbDatepicker);\n    }\n    /**\n     * The first date of month to be rendered.\n     *\n     * This month must one of the months present in the\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n     */\n    set month(month) {\n        this.viewModel = this._service.getMonth(month);\n    }\n    onKeyDown(event) {\n        this._keyboardService.processKey(event, this.datepicker);\n    }\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.datepicker.onDateSelect(day.date);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerMonth, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbDatepickerMonth, isStandalone: true, selector: \"ngb-datepicker-month\", inputs: { month: \"month\" }, host: { attributes: { \"role\": \"grid\" }, listeners: { \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n\t\t@if (viewModel.weekdays.length > 0) {\n\t\t\t<div class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n\t\t\t\t}\n\t\t\t\t@for (weekday of viewModel.weekdays; track $index) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t}\n\t\t@for (week of viewModel.weeks; track week) {\n\t\t\t@if (!week.collapsed) {\n\t\t\t\t<div class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t\t<div class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n\t\t\t\t\t}\n\t\t\t\t\t@for (day of week.days; track day) {\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (!day.hidden) {\n\t\t\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, isInline: true, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-tertiary-bg)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerMonth, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-month', standalone: true, imports: [NgTemplateOutlet], host: {\n                        role: 'grid',\n                        '(keydown)': 'onKeyDown($event)',\n                    }, encapsulation: ViewEncapsulation.None, template: `\n\t\t@if (viewModel.weekdays.length > 0) {\n\t\t\t<div class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n\t\t\t\t}\n\t\t\t\t@for (weekday of viewModel.weekdays; track $index) {\n\t\t\t\t\t<div class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t}\n\t\t@for (week of viewModel.weeks; track week) {\n\t\t\t@if (!week.collapsed) {\n\t\t\t\t<div class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t\t@if (datepicker.showWeekNumbers) {\n\t\t\t\t\t\t<div class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n\t\t\t\t\t}\n\t\t\t\t\t@for (day of week.days; track day) {\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (!day.hidden) {\n\t\t\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-tertiary-bg)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"] }]\n        }], propDecorators: { month: [{\n                type: Input\n            }] } });\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    constructor() {\n        this.injector = inject(Injector);\n        this._service = inject(NgbDatepickerService);\n        this._calendar = inject(NgbCalendar);\n        this._i18n = inject(NgbDatepickerI18n);\n        this._config = inject(NgbDatepickerConfig);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngbDateAdapter = inject((NgbDateAdapter));\n        this._ngZone = inject(NgZone);\n        this._destroyRef = inject(DestroyRef);\n        this._injector = inject(Injector);\n        this._controlValue = null;\n        this._publicState = {};\n        this._initialized = false;\n        /**\n         * The reference to a custom template for the day.\n         *\n         * Allows to completely override the way a day 'cell' in the calendar is displayed.\n         *\n         * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n         */\n        this.dayTemplate = this._config.dayTemplate;\n        /**\n         * The callback to pass any arbitrary data to the template cell via the\n         * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n         *\n         * `current` is the month that is currently displayed by the datepicker.\n         *\n         * @since 3.3.0\n         */\n        this.dayTemplateData = this._config.dayTemplateData;\n        /**\n         * The number of months to display.\n         */\n        this.displayMonths = this._config.displayMonths;\n        /**\n         * The first day of the week.\n         *\n         * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n         */\n        this.firstDayOfWeek = this._config.firstDayOfWeek;\n        /**\n         * The reference to the custom template for the datepicker footer.\n         *\n         * @since 3.3.0\n         */\n        this.footerTemplate = this._config.footerTemplate;\n        /**\n         * The callback to mark some dates as disabled.\n         *\n         * It is called for each new date when navigating to a different month.\n         *\n         * `current` is the month that is currently displayed by the datepicker.\n         */\n        this.markDisabled = this._config.markDisabled;\n        /**\n         * The latest date that can be displayed or selected.\n         *\n         * If not provided, 'year' select box will display 10 years after the current month.\n         */\n        this.maxDate = this._config.maxDate;\n        /**\n         * The earliest date that can be displayed or selected.\n         *\n         * If not provided, 'year' select box will display 10 years before the current month.\n         */\n        this.minDate = this._config.minDate;\n        /**\n         * Navigation type.\n         *\n         * * `\"select\"` - select boxes for month and navigation arrows\n         * * `\"arrows\"` - only navigation arrows\n         * * `\"none\"` - no navigation visible at all\n         */\n        this.navigation = this._config.navigation;\n        /**\n         * The way of displaying days that don't belong to the current month.\n         *\n         * * `\"visible\"` - days are visible\n         * * `\"hidden\"` - days are hidden, white space preserved\n         * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n         *\n         * For the 2+ months view, days in between months are never shown.\n         */\n        this.outsideDays = this._config.outsideDays;\n        /**\n         * If `true`, week numbers will be displayed.\n         */\n        this.showWeekNumbers = this._config.showWeekNumbers;\n        /**\n         * The date to open calendar with.\n         *\n         * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n         * If nothing or invalid date is provided, calendar will open with current month.\n         *\n         * You could use `navigateTo(date)` method as an alternative.\n         */\n        this.startDate = this._config.startDate;\n        /**\n         * The way weekdays should be displayed.\n         *\n         * * `true` - weekdays are displayed using default width\n         * * `false` - weekdays are not displayed\n         * * `\"short\" | \"long\" | \"narrow\"` - weekdays are displayed using specified width\n         *\n         * @since 9.1.0\n         */\n        this.weekdays = this._config.weekdays;\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 5.2.0\n         */\n        this.dateSelect = new EventEmitter();\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        const cd = inject(ChangeDetectorRef);\n        this._service.dateSelect$.pipe(takeUntilDestroyed()).subscribe((date) => {\n            this.dateSelect.emit(date);\n        });\n        this._service.model$.pipe(takeUntilDestroyed()).subscribe((model) => {\n            const newDate = model.firstDate;\n            const oldDate = this.model ? this.model.firstDate : null;\n            // update public state\n            this._publicState = {\n                maxDate: model.maxDate,\n                minDate: model.minDate,\n                firstDate: model.firstDate,\n                lastDate: model.lastDate,\n                focusedDate: model.focusDate,\n                months: model.months.map((viewModel) => viewModel.firstDate),\n            };\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: () => (navigationPrevented = true),\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            const newSelectedDate = model.selectedDate;\n            const newFocusedDate = model.focusDate;\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            cd.markForCheck();\n        });\n    }\n    /**\n     *  Returns the readonly public state of the datepicker\n     *\n     * @since 5.2.0\n     */\n    get state() {\n        return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n    get calendar() {\n        return this._calendar;\n    }\n    /**\n     * Returns the i18n service used in the specific datepicker instance.\n     *\n     * @since 14.2.0\n     */\n    get i18n() {\n        return this._i18n;\n    }\n    /**\n     *  Focuses on given date.\n     */\n    focusDate(date) {\n        this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n    focusSelect() {\n        this._service.focusSelect();\n    }\n    focus() {\n        afterNextRender(() => {\n            this._nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]')?.focus();\n        }, { phase: AfterRenderPhase.Read, injector: this._injector });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? (date.day ? date : { ...date, day: 1 }) : null));\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(() => {\n            const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n            const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter((focusEvent) => {\n                const target = focusEvent.target;\n                const relatedTarget = focusEvent.relatedTarget;\n                return !(target?.classList.contains('ngb-dp-day') &&\n                    relatedTarget?.classList.contains('ngb-dp-day') &&\n                    this._nativeElement.contains(target) &&\n                    this._nativeElement.contains(relatedTarget));\n            }), takeUntilDestroyed(this._destroyRef))\n                .subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n        });\n    }\n    ngOnInit() {\n        if (this.model === undefined) {\n            const inputs = {};\n            [\n                'dayTemplateData',\n                'displayMonths',\n                'markDisabled',\n                'firstDayOfWeek',\n                'navigation',\n                'minDate',\n                'maxDate',\n                'outsideDays',\n                'weekdays',\n            ].forEach((name) => (inputs[name] = this[name]));\n            this._service.set(inputs);\n            this.navigateTo(this.startDate);\n        }\n        if (!this.dayTemplate) {\n            this.dayTemplate = this._defaultDayTemplate;\n        }\n        this._initialized = true;\n    }\n    ngOnChanges(changes) {\n        const inputs = {};\n        [\n            'dayTemplateData',\n            'displayMonths',\n            'markDisabled',\n            'firstDayOfWeek',\n            'navigation',\n            'minDate',\n            'maxDate',\n            'outsideDays',\n            'weekdays',\n        ]\n            .filter((name) => name in changes)\n            .forEach((name) => (inputs[name] = this[name]));\n        this._service.set(inputs);\n        if ('startDate' in changes && this._initialized) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    onNavigateDateSelect(date) {\n        this._service.open(date);\n    }\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this._service.set({ disabled });\n    }\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepicker, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbDatepicker, isStandalone: true, selector: \"ngb-datepicker\", inputs: { contentTemplate: \"contentTemplate\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", weekdays: \"weekdays\" }, outputs: { navigate: \"navigate\", dateSelect: \"dateSelect\" }, host: { properties: { \"class.disabled\": \"model.disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n            NgbDatepickerService,\n        ], queries: [{ propertyName: \"contentTemplateFromContent\", first: true, predicate: NgbDatepickerContent, descendants: true, static: true }], viewQueries: [{ propertyName: \"_defaultDayTemplate\", first: true, predicate: [\"defaultDayTemplate\"], descendants: true, static: true }, { propertyName: \"_contentEl\", first: true, predicate: [\"content\"], descendants: true, static: true }], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t@for (month of model.months; track month) {\n\t\t\t\t<div class=\"ngb-dp-month\">\n\t\t\t\t\t@if (navigation === 'none' || (displayMonths > 1 && navigation === 'select')) {\n\t\t\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t@if (navigation !== 'none') {\n\t\t\t\t<ngb-datepicker-navigation\n\t\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t\t[months]=\"model.months\"\n\t\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\" />\n\t`, isInline: true, styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-tertiary-bg)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-tertiary-bg)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NgbDatepickerDayView, selector: \"[ngbDatepickerDayView]\", inputs: [\"currentMonth\", \"date\", \"disabled\", \"focused\", \"selected\"] }, { kind: \"component\", type: NgbDatepickerMonth, selector: \"ngb-datepicker-month\", inputs: [\"month\"] }, { kind: \"component\", type: NgbDatepickerNavigation, selector: \"ngb-datepicker-navigation\", inputs: [\"date\", \"disabled\", \"months\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"], outputs: [\"navigate\", \"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbDatepicker', selector: 'ngb-datepicker', standalone: true, imports: [NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        '[class.disabled]': 'model.disabled',\n                    }, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t@for (month of model.months; track month) {\n\t\t\t\t<div class=\"ngb-dp-month\">\n\t\t\t\t\t@if (navigation === 'none' || (displayMonths > 1 && navigation === 'select')) {\n\t\t\t\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t@if (navigation !== 'none') {\n\t\t\t\t<ngb-datepicker-navigation\n\t\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t\t[months]=\"model.months\"\n\t\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\" />\n\t`, providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n                        NgbDatepickerService,\n                    ], styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-tertiary-bg)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-tertiary-bg)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _defaultDayTemplate: [{\n                type: ViewChild,\n                args: ['defaultDayTemplate', { static: true }]\n            }], _contentEl: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], contentTemplate: [{\n                type: Input\n            }], contentTemplateFromContent: [{\n                type: ContentChild,\n                args: [NgbDatepickerContent, { static: true }]\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], dateSelect: [{\n                type: Output\n            }] } });\n\nconst isContainedIn = (element, array) => array ? array.some((item) => item.contains(element)) : false;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n    const isAndroid = () => /Android/.test(navigator.userAgent);\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = (fn) => (isMobile ? () => setTimeout(() => fn(), 100) : fn);\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile(() => {\n            const shouldCloseOnClick = (event) => {\n                const element = event.target;\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                } /* if (type === true) */\n                else {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), filter((e) => e.key === 'Escape'), tap((e) => e.preventDefault()));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n            race([escapes$.pipe(map((_) => 0 /* SOURCE.ESCAPE */)), closeableClicks$.pipe(map((_) => 1 /* SOURCE.CLICK */))]).subscribe((source) => zone.run(() => close(source)));\n        }));\n    }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]',\n    'button:not([disabled])',\n    'input:not([disabled]):not([type=\"hidden\"])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '[contenteditable]',\n    '[tabindex]:not([tabindex=\"-1\"])',\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter((el) => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n    zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map((e) => e.target));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), filter((e) => e.key === 'Tab'), withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n            const [first, last] = getFocusableBoundaryElements(element);\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        });\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map((arr) => arr[1]))\n                .subscribe((lastFocusedElement) => lastFocusedElement.focus());\n        }\n    });\n};\n\nclass NgbRTL {\n    constructor() {\n        this._element = inject(DOCUMENT).documentElement;\n    }\n    isRTL() {\n        return (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRTL, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRTL, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRTL, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\nconst bootstrapPopperMatches = {\n    top: ['top'],\n    bottom: ['bottom'],\n    start: ['left', 'right'],\n    left: ['left'],\n    end: ['right', 'left'],\n    right: ['right'],\n    'top-start': ['top-start', 'top-end'],\n    'top-left': ['top-start'],\n    'top-end': ['top-end', 'top-start'],\n    'top-right': ['top-end'],\n    'bottom-start': ['bottom-start', 'bottom-end'],\n    'bottom-left': ['bottom-start'],\n    'bottom-end': ['bottom-end', 'bottom-start'],\n    'bottom-right': ['bottom-end'],\n    'start-top': ['left-start', 'right-start'],\n    'left-top': ['left-start'],\n    'start-bottom': ['left-end', 'right-end'],\n    'left-bottom': ['left-end'],\n    'end-top': ['right-start', 'left-start'],\n    'right-top': ['right-start'],\n    'end-bottom': ['right-end', 'left-end'],\n    'right-bottom': ['right-end'],\n};\nfunction getPopperClassPlacement(placement, isRTL) {\n    const [leftClass, rightClass] = bootstrapPopperMatches[placement];\n    return isRTL ? rightClass || leftClass : leftClass;\n}\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n    let [primary, secondary] = placement.split('-');\n    const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n    let classnames = [newPrimary];\n    if (secondary) {\n        let newSecondary = secondary;\n        if (primary === 'left' || primary === 'right') {\n            newSecondary = newSecondary\n                .replace(popperStartSecondaryPlacement, 'top')\n                .replace(popperEndSecondaryPlacement, 'bottom');\n        }\n        classnames.push(`${newPrimary}-${newSecondary}`);\n    }\n    if (baseClass) {\n        classnames = classnames.map((classname) => `${baseClass}-${classname}`);\n    }\n    return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nfunction getPopperOptions({ placement, baseClass }, rtl) {\n    let placementVals = Array.isArray(placement)\n        ? placement\n        : placement.split(placementSeparator);\n    // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n    const allowedPlacements = [\n        'top',\n        'bottom',\n        'start',\n        'end',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end',\n        'start-top',\n        'start-bottom',\n        'end-top',\n        'end-bottom',\n    ];\n    // replace auto placement with other placements\n    let hasAuto = placementVals.findIndex((val) => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    const popperPlacements = placementVals.map((_placement) => {\n        return getPopperClassPlacement(_placement, rtl.isRTL());\n    });\n    let mainPlacement = popperPlacements.shift();\n    const bsModifier = {\n        name: 'bootstrapClasses',\n        enabled: !!baseClass,\n        phase: 'write',\n        fn({ state }) {\n            const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n            const popperElement = state.elements.popper;\n            const popperPlacement = state.placement;\n            let className = popperElement.className;\n            // Remove old bootstrap classes\n            className = className.replace(bsClassRegExp, '');\n            // Add current placements\n            className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`;\n            // Remove multiple spaces\n            className = className.trim().replace(spacesRegExp, ' ');\n            // Reassign\n            popperElement.className = className;\n        },\n    };\n    return {\n        placement: mainPlacement,\n        modifiers: [\n            bsModifier,\n            flip,\n            preventOverflow,\n            arrow,\n            {\n                enabled: true,\n                name: 'flip',\n                options: {\n                    fallbackPlacements: popperPlacements,\n                },\n            },\n            {\n                enabled: true,\n                name: 'preventOverflow',\n                phase: 'main',\n                fn: function () { },\n            },\n        ],\n    };\n}\nfunction noop(arg) {\n    return arg;\n}\nfunction ngbPositioning() {\n    const rtl = inject(NgbRTL);\n    let popperInstance = null;\n    return {\n        createPopper(positioningOption) {\n            if (!popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n            }\n        },\n        update() {\n            if (popperInstance) {\n                popperInstance.update();\n            }\n        },\n        setOptions(positioningOption) {\n            if (popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance.setOptions(popperOptions);\n            }\n        },\n        destroy() {\n            if (popperInstance) {\n                popperInstance.destroy();\n                popperInstance = null;\n            }\n        },\n    };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nclass NgbDateParserFormatter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateParserFormatter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateParserFormatter, providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateParserFormatter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }]\n        }] });\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n        if (value != null) {\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    format(date) {\n        return date\n            ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}`\n            : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateISOParserFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateISOParserFormatter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateISOParserFormatter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n    constructor() {\n        super(...arguments);\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n        this.restoreFocus = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbInputDatepickerConfig, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbInputDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbInputDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction addPopperOffset(offset$1) {\n    return (options) => {\n        options.modifiers.push(offset, {\n            name: 'offset',\n            options: {\n                offset: () => offset$1,\n            },\n        });\n        return options;\n    };\n}\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    constructor() {\n        this._parserFormatter = inject(NgbDateParserFormatter);\n        this._elRef = inject((ElementRef));\n        this._vcRef = inject(ViewContainerRef);\n        this._ngZone = inject(NgZone);\n        this._calendar = inject(NgbCalendar);\n        this._dateAdapter = inject((NgbDateAdapter));\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._config = inject(NgbInputDatepickerConfig);\n        this._cRef = null;\n        this._disabled = false;\n        this._elWithFocus = null;\n        this._model = null;\n        this._positioning = ngbPositioning();\n        this._destroyCloseHandlers$ = new Subject();\n        /**\n         * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n         *\n         * * `true` - the popup will close on both date selection and outside click.\n         * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n         * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the datepicker popup, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the popup.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * A selector specifying the element the datepicker popup should be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * A css selector or html element specifying the element the datepicker popup should be positioned against.\n         *\n         * By default the input is used as a target.\n         *\n         * @since 4.2.0\n         */\n        this.positionTarget = this._config.positionTarget;\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * @since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._validatorChange = () => { };\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this._validatorChange = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    validate(c) {\n        const { value } = c;\n        if (value != null) {\n            const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n            if (!ngbDate) {\n                return { ngbDate: { invalid: value } };\n            }\n            if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n                return { ngbDate: { minDate: { minDate: this.minDate, actual: value } } };\n            }\n            if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n                return { ngbDate: { maxDate: { maxDate: this.maxDate, actual: value } } };\n            }\n        }\n        return null;\n    }\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    manualDateChange(value, updateView = false) {\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    isOpen() {\n        return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    open() {\n        if (!this.isOpen()) {\n            this._cRef = this._vcRef.createComponent(NgbDatepicker, { injector: this._injector });\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            });\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container)?.appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            this._elWithFocus = this._document.activeElement;\n            ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n            setTimeout(() => this._cRef?.instance.focus());\n            let hostElement;\n            if (isString(this.positionTarget)) {\n                hostElement = this._document.querySelector(this.positionTarget);\n            }\n            else if (this.positionTarget instanceof HTMLElement) {\n                hostElement = this.positionTarget;\n            }\n            else {\n                hostElement = this._elRef.nativeElement;\n            }\n            if (this.positionTarget && !hostElement) {\n                throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n            }\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._cRef && hostElement) {\n                    this._positioning.createPopper({\n                        hostElement,\n                        targetElement: this._cRef.location.nativeElement,\n                        placement: this.placement,\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._afterRenderRef = afterRender(() => {\n                        this._positioning.update();\n                    }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n                }\n            });\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n    close() {\n        if (this.isOpen()) {\n            this._cRef?.destroy();\n            this._cRef = null;\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._destroyCloseHandlers$.next();\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n            // restore focus\n            let elementToFocus = this._elWithFocus;\n            if (isString(this.restoreFocus)) {\n                elementToFocus = this._document.querySelector(this.restoreFocus);\n            }\n            else if (this.restoreFocus !== undefined) {\n                elementToFocus = this.restoreFocus;\n            }\n            // in IE document.activeElement can contain an object without 'focus()' sometimes\n            if (elementToFocus && elementToFocus['focus']) {\n                elementToFocus.focus();\n            }\n            else {\n                this._document.body.focus();\n            }\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    onBlur() {\n        this._onTouched();\n    }\n    onFocus() {\n        this._elWithFocus = this._elRef.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n            if (this.isOpen()) {\n                if (changes['minDate']) {\n                    this._cRef.setInput('minDate', this.minDate);\n                }\n                if (changes['maxDate']) {\n                    this._cRef.setInput('maxDate', this.maxDate);\n                }\n            }\n        }\n        if (changes['datepickerClass']) {\n            const { currentValue, previousValue } = changes['datepickerClass'];\n            this._applyPopupClass(currentValue, previousValue);\n        }\n        if (changes['autoClose'] && this.isOpen()) {\n            this._setCloseHandlers();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    _applyDatepickerInputs(datepickerComponentRef) {\n        [\n            'contentTemplate',\n            'dayTemplate',\n            'dayTemplateData',\n            'displayMonths',\n            'firstDayOfWeek',\n            'footerTemplate',\n            'markDisabled',\n            'minDate',\n            'maxDate',\n            'navigation',\n            'outsideDays',\n            'showNavigation',\n            'showWeekNumbers',\n            'weekdays',\n        ].forEach((inputName) => {\n            if (this[inputName] !== undefined) {\n                datepickerComponentRef.setInput(inputName, this[inputName]);\n            }\n        });\n        datepickerComponentRef.setInput('startDate', this.startDate || this._model);\n    }\n    _applyPopupClass(newClass, oldClass) {\n        const popupEl = this._cRef?.location.nativeElement;\n        if (popupEl) {\n            if (newClass) {\n                popupEl.classList.add(newClass);\n            }\n            if (oldClass) {\n                popupEl.classList.remove(oldClass);\n            }\n        }\n    }\n    _applyPopupStyling(nativeElement) {\n        nativeElement.classList.add('dropdown-menu', 'show');\n        if (this.container === 'body') {\n            nativeElement.classList.add('ngb-dp-body');\n        }\n        this._applyPopupClass(this.datepickerClass);\n    }\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe((navigateEvent) => this.navigate.emit(navigateEvent));\n        datepickerInstance.dateSelect.subscribe((date) => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        });\n    }\n    _writeModelValue(model) {\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._elRef.nativeElement.value = value;\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    _fromDateStruct(date) {\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbInputDatepicker, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbInputDatepicker, isStandalone: true, selector: \"input[ngbDatepicker]\", inputs: { autoClose: \"autoClose\", contentTemplate: \"contentTemplate\", datepickerClass: \"datepickerClass\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", placement: \"placement\", popperOptions: \"popperOptions\", restoreFocus: \"restoreFocus\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\", weekdays: \"weekdays\", disabled: \"disabled\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, host: { listeners: { \"input\": \"manualDateChange($event.target.value)\", \"change\": \"manualDateChange($event.target.value, true)\", \"focus\": \"onFocus()\", \"blur\": \"onBlur()\" }, properties: { \"disabled\": \"disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n        ], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbInputDatepicker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    standalone: true,\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(focus)': 'onFocus()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n                    ],\n                }]\n        }], propDecorators: { autoClose: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }], datepickerClass: [{\n                type: Input\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], dateSelect: [{\n                type: Output\n            }], navigate: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass NgbCalendarHijri extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return this.fromGregorian(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isNumber(date.year) &&\n            isNumber(date.month) &&\n            isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime()));\n    }\n    _setDay(date, day) {\n        day = +day;\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n        return date;\n    }\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHijri, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHijri }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHijri, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear$1(gDate) {\n    const year = gDate.getFullYear();\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n        let julianDay = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (gYear - 1) +\n            Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) +\n            Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        const days = julianDay - ISLAMIC_EPOCH;\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH$1, quadricent = Math.floor(depoch / 146097), dqc = mod$1(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod$1(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod$1(dcent, 1461), yindex = Math.floor(dquad / 365);\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        const gYearStart = GREGORIAN_EPOCH$1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        const yearday = wjd - gYearStart;\n        const tjd = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        const tjd2 = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        let length = 29 + (month % 2);\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicCivil, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicCivil }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicCivil, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010',\n    '110101010100',\n    '111011001001',\n    '011011010100',\n    '011011101010',\n    // 1305-1309\n    '001101101100',\n    '101010101101',\n    '010101010101',\n    '011010101001',\n    '011110010010',\n    // 1310-1314\n    '101110101001',\n    '010111010100',\n    '101011011010',\n    '010101011100',\n    '110100101101',\n    // 1315-1319\n    '011010010101',\n    '011101001010',\n    '101101010100',\n    '101101101010',\n    '010110101101',\n    // 1320-1324\n    '010010101110',\n    '101001001111',\n    '010100010111',\n    '011010001011',\n    '011010100101',\n    // 1325-1329\n    '101011010101',\n    '001011010110',\n    '100101011011',\n    '010010011101',\n    '101001001101',\n    // 1330-1334\n    '110100100110',\n    '110110010101',\n    '010110101100',\n    '100110110110',\n    '001010111010',\n    // 1335-1339\n    '101001011011',\n    '010100101011',\n    '101010010101',\n    '011011001010',\n    '101011101001',\n    // 1340-1344\n    '001011110100',\n    '100101110110',\n    '001010110110',\n    '100101010110',\n    '101011001010',\n    // 1345-1349\n    '101110100100',\n    '101111010010',\n    '010111011001',\n    '001011011100',\n    '100101101101',\n    // 1350-1354\n    '010101001101',\n    '101010100101',\n    '101101010010',\n    '101110100101',\n    '010110110100',\n    // 1355-1359\n    '100110110110',\n    '010101010111',\n    '001010010111',\n    '010101001011',\n    '011010100011',\n    // 1360-1364\n    '011101010010',\n    '101101100101',\n    '010101101010',\n    '101010101011',\n    '010100101011',\n    // 1365-1369\n    '110010010101',\n    '110101001010',\n    '110110100101',\n    '010111001010',\n    '101011010110',\n    // 1370-1374\n    '100101010111',\n    '010010101011',\n    '100101001011',\n    '101010100101',\n    '101101010010',\n    // 1375-1379\n    '101101101010',\n    '010101110101',\n    '001001110110',\n    '100010110111',\n    '010001011011',\n    // 1380-1384\n    '010101010101',\n    '010110101001',\n    '010110110100',\n    '100111011010',\n    '010011011101',\n    // 1385-1389\n    '001001101110',\n    '100100110110',\n    '101010101010',\n    '110101010100',\n    '110110110010',\n    // 1390-1394\n    '010111010101',\n    '001011011010',\n    '100101011011',\n    '010010101011',\n    '101001010101',\n    // 1395-1399\n    '101101001001',\n    '101101100100',\n    '101101110001',\n    '010110110100',\n    '101010110101',\n    // 1400-1404\n    '101001010101',\n    '110100100101',\n    '111010010010',\n    '111011001001',\n    '011011010100',\n    // 1405-1409\n    '101011101001',\n    '100101101011',\n    '010010101011',\n    '101010010011',\n    '110101001001',\n    // 1410-1414\n    '110110100100',\n    '110110110010',\n    '101010111001',\n    '010010111010',\n    '101001011011',\n    // 1415-1419\n    '010100101011',\n    '101010010101',\n    '101100101010',\n    '101101010101',\n    '010101011100',\n    // 1420-1424\n    '010010111101',\n    '001000111101',\n    '100100011101',\n    '101010010101',\n    '101101001010',\n    // 1425-1429\n    '101101011010',\n    '010101101101',\n    '001010110110',\n    '100100111011',\n    '010010011011',\n    // 1430-1434\n    '011001010101',\n    '011010101001',\n    '011101010100',\n    '101101101010',\n    '010101101100',\n    // 1435-1439\n    '101010101101',\n    '010101010101',\n    '101100101001',\n    '101110010010',\n    '101110101001',\n    // 1440-1444\n    '010111010100',\n    '101011011010',\n    '010101011010',\n    '101010101011',\n    '010110010101',\n    // 1445-1449\n    '011101001001',\n    '011101100100',\n    '101110101010',\n    '010110110101',\n    '001010110110',\n    // 1450-1454\n    '101001010110',\n    '111001001101',\n    '101100100101',\n    '101101010010',\n    '101101101010',\n    // 1455-1459\n    '010110101101',\n    '001010101110',\n    '100100101111',\n    '010010010111',\n    '011001001011',\n    // 1460-1464\n    '011010100101',\n    '011010101100',\n    '101011010110',\n    '010101011101',\n    '010010011101',\n    // 1465-1469\n    '101001001101',\n    '110100010110',\n    '110110010101',\n    '010110101010',\n    '010110110101',\n    // 1470-1474\n    '001011011010',\n    '100101011011',\n    '010010101101',\n    '010110010101',\n    '011011001010',\n    // 1475-1479\n    '011011100100',\n    '101011101010',\n    '010011110101',\n    '001010110110',\n    '100101010110',\n    // 1480-1484\n    '101010101010',\n    '101101010100',\n    '101111010010',\n    '010111011001',\n    '001011101010',\n    // 1485-1489\n    '100101101101',\n    '010010101101',\n    '101010010101',\n    '101101001010',\n    '101110100101',\n    // 1490-1494\n    '010110110010',\n    '100110110101',\n    '010011010110',\n    '101010010111',\n    '010101000111',\n    // 1495-1499\n    '011010010011',\n    '011101001001',\n    '101101010101',\n    '010101101010',\n    '101001101011',\n    // 1500-1504\n    '010100101011',\n    '101010001011',\n    '110101000110',\n    '110110100011',\n    '010111001010',\n    // 1505-1509\n    '101011010110',\n    '010011011011',\n    '001001101011',\n    '100101001011',\n    '101010100101',\n    // 1510-1514\n    '101101010010',\n    '101101101001',\n    '010101110101',\n    '000101110110',\n    '100010110111',\n    // 1515-1519\n    '001001011011',\n    '010100101011',\n    '010101100101',\n    '010110110100',\n    '100111011010',\n    // 1520-1524\n    '010011101101',\n    '000101101101',\n    '100010110110',\n    '101010100110',\n    '110101010010',\n    // 1525-1529\n    '110110101001',\n    '010111010100',\n    '101011011010',\n    '100101011011',\n    '010010101011',\n    // 1530-1534\n    '011001010011',\n    '011100101001',\n    '011101100010',\n    '101110101001',\n    '010110110010',\n    // 1535-1539\n    '101010110101',\n    '010101010101',\n    '101100100101',\n    '110110010010',\n    '111011001001',\n    // 1540-1544\n    '011011010010',\n    '101011101001',\n    '010101101011',\n    '010010101011',\n    '101001010101',\n    // 1545-1549\n    '110100101001',\n    '110101010100',\n    '110110101010',\n    '100110110101',\n    '010010111010',\n    // 1550-1554\n    '101000111011',\n    '010010011011',\n    '101001001101',\n    '101010101010',\n    '101011010101',\n    // 1555-1559\n    '001011011010',\n    '100101011101',\n    '010001011110',\n    '101000101110',\n    '110010011010',\n    // 1560-1564\n    '110101010101',\n    '011010110010',\n    '011010111001',\n    '010010111010',\n    '101001011101',\n    // 1565-1569\n    '010100101101',\n    '101010010101',\n    '101101010010',\n    '101110101000',\n    '101110110100',\n    // 1570-1574\n    '010110111001',\n    '001011011010',\n    '100101011010',\n    '101101001010',\n    '110110100100',\n    // 1575-1579\n    '111011010001',\n    '011011101000',\n    '101101101010',\n    '010101101101',\n    '010100110101',\n    // 1580-1584\n    '011010010101',\n    '110101001010',\n    '110110101000',\n    '110111010100',\n    '011011011010',\n    // 1585-1589\n    '010101011011',\n    '001010011101',\n    '011000101011',\n    '101100010101',\n    '101101001010',\n    // 1590-1594\n    '101110010101',\n    '010110101010',\n    '101010101110',\n    '100100101110',\n    '110010001111',\n    // 1595-1599\n    '010100100111',\n    '011010010101',\n    '011010101010',\n    '101011010110',\n    '010101011101',\n    // 1600\n    '001010011101',\n];\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        let hDay = 1, hMonth = 0, hYear = 1300;\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n            return null;\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicUmalqura, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicUmalqura }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarIslamicUmalqura, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian$3(jalaliDate) {\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    let date = julianToGregorian$1(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian$3(gdate) {\n    let g2d = gregorianToJulian$1(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n    return date;\n}\nfunction setJalaliDay(date, day) {\n    let mDays = getDaysPerMonth$1(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth$1(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth$1(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    let breaks = [\n        -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178,\n    ];\n    const breaksLength = breaks.length;\n    const gYear = jalaliYear + 621;\n    let leapJ = -14;\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n        jp = jm;\n    }\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n    if (mod(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    let leap = mod(mod(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian$1(julianDayNumber) {\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12) + 1;\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian$1(gy, gm, gd) {\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n    let gy = julianToGregorian$1(julianDayNumber).getFullYear(), // Calculate Gregorian year (gy).\n    jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian$1(gy, 3, r.march), jalaliDay, jalaliMonth, numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    let r = jalCal(jYear);\n    return gregorianToJulian$1(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth$1(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$3(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian$3(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian$3(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromGregorian$3(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isInteger(date.year) &&\n            isInteger(date.month) &&\n            isInteger(date.day) &&\n            !isNaN(toGregorian$3(date).getTime()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarPersian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarPersian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarPersian, decorators: [{\n            type: Injectable\n        }] });\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\nfunction isGregorianLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    let dayOfWeek = dayNumber % 7; // 0 == Monday\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n    if (year != null) {\n        let b = (year * 12 + 17) % 19;\n        return b >= (b < 0 ? -7 : 12);\n    }\n    return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n    let leapYear = isHebrewLeapYear(year);\n    let daysInMonth = leapYear\n        ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29]\n        : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\nfunction setHebrewDay(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$2(gdate) {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n    let julianDay = GREGORIAN_EPOCH -\n        1 +\n        365 * (gYear - 1) +\n        Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) +\n        Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    let daysSinceHebEpoch = julianDay - 347997;\n    let monthsSinceHebEpoch = Math.floor((daysSinceHebEpoch * PARTS_PER_DAY) / PARTS_PER_MONTH);\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    let hMonth = 1;\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$2(hebrewDate) {\n    const hYear = hebrewDate.year;\n    const hMonth = hebrewDate.month;\n    const hDay = hebrewDate.day;\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    let gYear = 1970;\n    let gMonth = 1;\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    const hArray10_19 = [\n        '\\u05d9',\n        '\\u05d9\\u05d0',\n        '\\u05d9\\u05d1',\n        '\\u05d9\\u05d2',\n        '\\u05d9\\u05d3',\n        '\\u05d8\\u05d5',\n        '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6',\n        '\\u05d9\\u05d7',\n        '\\u05d9\\u05d8',\n    ];\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    const hArray100_900 = [\n        '',\n        '\\u05e7',\n        '\\u05e8',\n        '\\u05e9',\n        '\\u05ea',\n        '\\u05ea\\u05e7',\n        '\\u05ea\\u05e8',\n        '\\u05ea\\u05e9',\n        '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7',\n    ];\n    const hArray1000_9000 = [\n        '',\n        '\\u05d0',\n        '\\u05d1',\n        '\\u05d1\\u05d0',\n        '\\u05d1\\u05d1',\n        '\\u05d4',\n        '\\u05d4\\u05d0',\n        '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0',\n        '\\u05d4\\u05d1\\u05d1',\n    ];\n    const geresh = '\\u05f3', gershaim = '\\u05f4';\n    let mem = 0;\n    let result = [];\n    let step = 0;\n    while (numerals > 0) {\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    isValid(date) {\n        if (date != null) {\n            let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n            b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n            b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n            return b && !isNaN(toGregorian$2(date).getTime());\n        }\n        return false;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$2(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    getToday() {\n        return fromGregorian$2(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n    toGregorian(date) {\n        return fromJSDate(toGregorian$2(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n    fromGregorian(date) {\n        return fromGregorian$2(toJSDate(date));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarHebrew, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS$1 = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS$1 = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = [\n    'תשרי',\n    'חשון',\n    'כסלו',\n    'טבת',\n    'שבט',\n    'אדר א׳',\n    'אדר ב׳',\n    'ניסן',\n    'אייר',\n    'סיון',\n    'תמוז',\n    'אב',\n    'אלול',\n];\n/**\n * @since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n        return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS$1[month - 1] || '';\n    }\n    getWeekdayLabel(weekday, width) {\n        return WEEKDAYS$1[weekday - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    getDayNumerals(date) {\n        return hebrewNumerals(date.day);\n    }\n    getWeekNumerals(weekNumber) {\n        return hebrewNumerals(weekNumber);\n    }\n    getYearNumerals(year) {\n        return hebrewNumerals(year);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nHebrew, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nfunction toGregorian$1(date) {\n    return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nfunction fromGregorian$1(gdate) {\n    return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n\n/**\n * @since 9.1.0\n */\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n    getToday() {\n        return fromGregorian$1(new Date());\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toGregorian$1(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromGregorian$1(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toGregorian$1(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toGregorian$1(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toGregorian$1(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year - 543 &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarBuddhist, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarBuddhist }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarBuddhist, decorators: [{\n            type: Injectable\n        }] });\n\nconst JD_EPOCH = 1724220.5;\nconst DAYSPERMONTH = [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 5];\n/**\n * Determine whether this date is in a leap year.\n * * `year` is the year to examine\n * returns boolean - true if this is a leap year, false if not\n * */\nfunction isEthiopianLeapYear(year) {\n    if (year != null) {\n        return year % 4 == 3 || year % 4 == -1;\n    }\n    return false;\n}\n/**\n * Sets the Ethiopian year.\n * * `date` is Ethiopian date\n * * `yearValue` incremented year\n * returns NgbDate - ethiopian date\n * */\nfunction setEthiopianYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\n/**\n * Sets the Ethiopian month.\n * * `date` is Ethiopian date\n * * `val` incremented month\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianMonth(date, val) {\n    val = +val;\n    date.year = date.year + Math.floor((val - 1) / 13);\n    date.month = Math.floor((((val - 1) % 13) + 13) % 13) + 1;\n    return date;\n}\n/**\n * Sets the Ethiopian day.\n * * `date` is Ethiopian date\n * * `day` incremented day\n * returns NgbDate - Ethiopian date\n * */\nfunction setEthiopianDay(date, day) {\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setEthiopianMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setEthiopianMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction getDaysPerMonth(month, year) {\n    let leapYear = isEthiopianLeapYear(year);\n    return DAYSPERMONTH[month - 1] + (month === 13 && leapYear ? 1 : 0);\n}\nfunction toGregorian(ethiopianDate) {\n    let jdn = ethiopianToJulian(ethiopianDate.year, ethiopianDate.month, ethiopianDate.day);\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\nfunction fromGregorian(gdate) {\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return juilianToEthiopia(g2d);\n}\nfunction ethiopianToJulian(year, month, day) {\n    if (year < 0) {\n        year++;\n    } // No year zero\n    return day + (month - 1) * 30 + (year - 1) * 365 + Math.floor(year / 4) + JD_EPOCH - 1;\n}\nfunction juilianToEthiopia(jd) {\n    let c = Math.floor(jd) + 0.5 - JD_EPOCH;\n    let year = Math.floor((c - Math.floor((c + 366) / 1461)) / 365) + 1;\n    if (year <= 0) {\n        year--;\n    } // No year zero\n    c = Math.floor(jd) + 0.5 - ethiopianToJulian(year, 1, 1);\n    let month = Math.floor(c / 30) + 1;\n    let day = c - (month - 1) * 30 + 1;\n    return new NgbDate(year, month, day);\n}\nfunction julianToGregorian(jd) {\n    let z = Math.floor(jd + 0.5);\n    let a = Math.floor((z - 1867216.25) / 36524.25);\n    a = z + 1 + a - Math.floor(a / 4);\n    let b = a + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    let d = Math.floor(365.25 * c);\n    let e = Math.floor((b - d) / 30.6001);\n    let day = b - d - Math.floor(e * 30.6001);\n    let month = e - (e > 13.5 ? 13 : 1);\n    let year = c - (month > 2.5 ? 4716 : 4715);\n    if (year <= 0) {\n        year--;\n    } // No year zero\n    return new Date(year, month, day);\n}\nfunction gregorianToJulian(year, month, day) {\n    if (year < 0) {\n        year++;\n    } // No year zero\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\n    if (month < 3) {\n        month += 12;\n        year--;\n    }\n    let a = Math.floor(year / 100);\n    let b = 2 - a + Math.floor(a / 4);\n    return Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + b - 1524.5;\n}\n\n/**\n * @since 16.0.0\n */\nclass NgbCalendarEthiopian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths(year) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setEthiopianYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setEthiopianMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setEthiopianDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const dt = Math.floor(ethiopianToJulian(date.year, date.month, date.day) + 3) % 7;\n        return dt === 0 ? 7 : dt;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getToday() {\n        return fromGregorian(new Date());\n    }\n    isValid(date) {\n        return (date &&\n            isInteger(date.year) &&\n            isInteger(date.month) &&\n            isInteger(date.day) &&\n            !isNaN(toGregorian(date).getTime()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarEthiopian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarEthiopian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbCalendarEthiopian, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS = ['እሑድ', 'ሰኞ', 'ማክሰኞ', 'ረቡዕ', 'ሓሙስ', 'ዓርብ', 'ቅዳሜ'];\nconst MONTHS = ['መስከረም', 'ጥቅምት', 'ኅዳር', 'ታህሣሥ', 'ጥር', 'የካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰኔ', 'ሐምሌ', 'ነሐሴ', 'ጳጉሜ'];\n/**\n * @since 16.0.0\n */\nclass NgbDatepickerI18nAmharic extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n        return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n        return MONTHS[month - 1];\n    }\n    getWeekdayLabel(weekday, width) {\n        return WEEKDAYS[weekday - 1];\n    }\n    getDayAriaLabel(date) {\n        return `${date.day} ${this.getMonthFullName(date.month, date.year)} ${date.year}`;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nAmharic, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nAmharic }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerI18nAmharic, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    fromModel(date) {\n        return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? this._toNativeDate(date)\n            : null;\n    }\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeUTCAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeUTCAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDateNativeUTCAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\nclass NgbDatepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerModule, imports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth], exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: NGB_DATEPICKER_DIRECTIVES,\n                    imports: NGB_DATEPICKER_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n        this.container = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nclass NgbDropdownItem {\n    constructor() {\n        this._disabled = false;\n        this.nativeElement = inject(ElementRef).nativeElement;\n        this.tabindex = 0;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || value === true; // accept an empty attribute as true\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdownItem, isStandalone: true, selector: \"[ngbDropdownItem]\", inputs: { tabindex: \"tabindex\", disabled: \"disabled\" }, host: { properties: { \"class.disabled\": \"disabled\", \"tabIndex\": \"disabled ? -1 : tabindex\" }, classAttribute: \"dropdown-item\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownItem]',\n                    standalone: true,\n                    host: {\n                        class: 'dropdown-item',\n                        '[class.disabled]': 'disabled',\n                        '[tabIndex]': 'disabled ? -1 : tabindex',\n                    },\n                }]\n        }], propDecorators: { tabindex: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * A directive that will be applied if dropdown item is a button.\n * It will only set the disabled property.\n */\nclass NgbDropdownButtonItem {\n    constructor() {\n        this.item = inject(NgbDropdownItem);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownButtonItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdownButtonItem, isStandalone: true, selector: \"button[ngbDropdownItem]\", host: { properties: { \"disabled\": \"item.disabled\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownButtonItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbDropdownItem]',\n                    standalone: true,\n                    host: { '[disabled]': 'item.disabled' },\n                }]\n        }] });\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    constructor() {\n        this.dropdown = inject(NgbDropdown);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdownMenu, isStandalone: true, selector: \"[ngbDropdownMenu]\", host: { listeners: { \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Enter\": \"dropdown.onKeyDown($event)\", \"keydown.Space\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.show\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-menu\" }, queries: [{ propertyName: \"menuItems\", predicate: NgbDropdownItem }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownMenu]',\n                    standalone: true,\n                    host: {\n                        class: 'dropdown-menu',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                }]\n        }], propDecorators: { menuItems: [{\n                type: ContentChildren,\n                args: [NgbDropdownItem]\n            }] } });\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nclass NgbDropdownAnchor {\n    constructor() {\n        this.dropdown = inject(NgbDropdown);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownAnchor, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdownAnchor, isStandalone: true, selector: \"[ngbDropdownAnchor]\", host: { properties: { \"class.show\": \"dropdown.isOpen()\", \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownAnchor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    standalone: true,\n                    host: {\n                        class: 'dropdown-toggle',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                    },\n                }]\n        }] });\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdownToggle, isStandalone: true, selector: \"[ngbDropdownToggle]\", host: { listeners: { \"click\": \"dropdown.toggle()\", \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.show\": \"dropdown.isOpen()\", \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownToggle]',\n                    standalone: true,\n                    host: {\n                        class: 'dropdown-toggle',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'dropdown.toggle()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }],\n                }]\n        }] });\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    constructor() {\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._config = inject(NgbDropdownConfig);\n        this._document = inject(DOCUMENT);\n        this._injector = inject(Injector);\n        this._ngZone = inject(NgZone);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._destroyCloseHandlers$ = new Subject();\n        this._bodyContainer = null;\n        this._positioning = ngbPositioning();\n        /**\n         * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n         *\n         * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n         * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n         * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * The preferred placement of the dropdown, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the dropdown.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * A selector specifying the element the dropdown should be appended to.\n         * Currently only supports \"body\".\n         *\n         * @since 4.1.0\n         */\n        this.container = this._config.container;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.display) {\n            this.display = this._nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n        }\n    }\n    ngAfterContentInit() {\n        afterNextRender(() => {\n            this._applyPlacementClasses();\n            if (this._open) {\n                this._setCloseHandlers();\n            }\n        }, { phase: AfterRenderPhase.Write, injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.firstChange) {\n            this._positioning.setOptions({\n                hostElement: this._anchor.nativeElement,\n                targetElement: this._bodyContainer || this._menu.nativeElement,\n                placement: this.placement,\n            });\n            this._applyPlacementClasses();\n        }\n        if (changes.dropdownClass) {\n            const { currentValue, previousValue } = changes.dropdownClass;\n            this._applyCustomDropdownClass(currentValue, previousValue);\n        }\n        if (changes.autoClose && this._open) {\n            this.autoClose = changes.autoClose.currentValue;\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    isOpen() {\n        return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n            if (this._anchor) {\n                this._anchor.nativeElement.focus();\n                if (this.display === 'dynamic') {\n                    this._ngZone.runOutsideAngular(() => {\n                        this._positioning.createPopper({\n                            hostElement: this._anchor.nativeElement,\n                            targetElement: this._bodyContainer || this._menu.nativeElement,\n                            placement: this.placement,\n                            updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                        });\n                        this._applyPlacementClasses();\n                        this._afterRenderRef = afterRender(() => {\n                            this._positionMenu();\n                        }, { phase: AfterRenderPhase.Write, injector: this._injector });\n                    });\n                }\n            }\n        }\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (source) => {\n            this.close();\n            if (source === 0 /* SOURCE.ESCAPE */) {\n                this._anchor.nativeElement.focus();\n            }\n        }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n    close() {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._destroyCloseHandlers$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    onKeyDown(event) {\n        const { key } = event;\n        const itemElements = this._getMenuElements();\n        let position = -1;\n        let itemElement = null;\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((item, index) => {\n                if (item.contains(event.target)) {\n                    itemElement = item;\n                }\n                if (item === getActiveElement(this._document)) {\n                    position = index;\n                }\n            });\n        }\n        // closing on Enter / Space\n        if (key === ' ' || key === 'Enter') {\n            if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n                // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                // So we have to register a one-time click handler that will fire after any user defined click handlers\n                // to close the dropdown\n                fromEvent(itemElement, 'click')\n                    .pipe(take(1))\n                    .subscribe(() => this.close());\n            }\n            return;\n        }\n        if (key === 'Tab') {\n            if (event.target && this.isOpen() && this.autoClose) {\n                if (this._anchor.nativeElement === event.target) {\n                    if (this.container === 'body' && !event.shiftKey) {\n                        /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n                        this._menu.nativeElement.setAttribute('tabindex', '0');\n                        this._menu.nativeElement.focus();\n                        this._menu.nativeElement.removeAttribute('tabindex');\n                    }\n                    else if (event.shiftKey) {\n                        this.close();\n                    }\n                    return;\n                }\n                else if (this.container === 'body') {\n                    const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n                    if (event.shiftKey && event.target === focusableElements[0]) {\n                        this._anchor.nativeElement.focus();\n                        event.preventDefault();\n                    }\n                    else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n                        this._anchor.nativeElement.focus();\n                        this.close();\n                    }\n                }\n                else {\n                    fromEvent(event.target, 'focusout')\n                        .pipe(take(1))\n                        .subscribe(({ relatedTarget }) => {\n                        if (!this._nativeElement.contains(relatedTarget)) {\n                            this.close();\n                        }\n                    });\n                }\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || itemElement) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case 'ArrowDown':\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case 'ArrowUp':\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case 'Home':\n                        position = 0;\n                        break;\n                    case 'End':\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _isDropup() {\n        return this._nativeElement.classList.contains('dropup');\n    }\n    _isEventFromToggle(event) {\n        return this._anchor.nativeElement.contains(event.target);\n    }\n    _getMenuElements() {\n        return this._menu\n            ? this._menu.menuItems.filter(({ disabled }) => !disabled).map(({ nativeElement }) => nativeElement)\n            : [];\n    }\n    _positionMenu() {\n        const menu = this._menu;\n        if (this.isOpen() && menu) {\n            if (this.display === 'dynamic') {\n                this._positioning.update();\n                this._applyPlacementClasses();\n            }\n            else {\n                this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n            }\n        }\n    }\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n    _resetContainer() {\n        if (this._menu) {\n            this._nativeElement.appendChild(this._menu.nativeElement);\n        }\n        if (this._bodyContainer) {\n            this._document.body.removeChild(this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            const dropdownMenuElement = this._menu.nativeElement;\n            const bodyContainer = (this._bodyContainer = this._bodyContainer || this._document.createElement('div'));\n            // Override some styles to have the positioning working\n            bodyContainer.style.position = 'absolute';\n            dropdownMenuElement.style.position = 'static';\n            bodyContainer.style.zIndex = '1055';\n            bodyContainer.appendChild(dropdownMenuElement);\n            this._document.body.appendChild(bodyContainer);\n        }\n        this._applyCustomDropdownClass(this.dropdownClass);\n    }\n    _applyCustomDropdownClass(newClass, oldClass) {\n        const targetElement = this.container === 'body' ? this._bodyContainer : this._nativeElement;\n        if (targetElement) {\n            if (oldClass) {\n                targetElement.classList.remove(oldClass);\n            }\n            if (newClass) {\n                targetElement.classList.add(newClass);\n            }\n        }\n    }\n    _applyPlacementClasses(placement) {\n        if (this._menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            // remove the current placement classes\n            this._nativeElement.classList.remove('dropup', 'dropdown');\n            if (this.display === 'static') {\n                this._menu.nativeElement.setAttribute('data-bs-popper', 'static');\n            }\n            else {\n                this._menu.nativeElement.removeAttribute('data-bs-popper');\n            }\n            /*\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            this._nativeElement.classList.add(dropdownClass);\n            if (this._bodyContainer) {\n                this._bodyContainer.classList.remove('dropup', 'dropdown');\n                this._bodyContainer.classList.add(dropdownClass);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdown, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbDropdown, isStandalone: true, selector: \"[ngbDropdown]\", inputs: { autoClose: \"autoClose\", dropdownClass: \"dropdownClass\", _open: [\"open\", \"_open\"], placement: \"placement\", popperOptions: \"popperOptions\", container: \"container\", display: \"display\" }, outputs: { openChange: \"openChange\" }, host: { properties: { \"class.show\": \"isOpen()\" } }, queries: [{ propertyName: \"_menu\", first: true, predicate: NgbDropdownMenu, descendants: true }, { propertyName: \"_anchor\", first: true, predicate: NgbDropdownAnchor, descendants: true }], exportAs: [\"ngbDropdown\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdown, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdown]',\n                    exportAs: 'ngbDropdown',\n                    standalone: true,\n                    host: { '[class.show]': 'isOpen()' },\n                }]\n        }], propDecorators: { _menu: [{\n                type: ContentChild,\n                args: [NgbDropdownMenu, { static: false }]\n            }], _anchor: [{\n                type: ContentChild,\n                args: [NgbDropdownAnchor, { static: false }]\n            }], autoClose: [{\n                type: Input\n            }], dropdownClass: [{\n                type: Input\n            }], _open: [{\n                type: Input,\n                args: ['open']\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }] } });\n\nconst NGB_DROPDOWN_DIRECTIVES = [\n    NgbDropdown,\n    NgbDropdownAnchor,\n    NgbDropdownToggle,\n    NgbDropdownMenu,\n    NgbDropdownItem,\n    NgbDropdownButtonItem,\n];\nclass NgbDropdownModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownModule, imports: [NgbDropdown,\n            NgbDropdownAnchor,\n            NgbDropdownToggle,\n            NgbDropdownMenu,\n            NgbDropdownItem,\n            NgbDropdownButtonItem], exports: [NgbDropdown,\n            NgbDropdownAnchor,\n            NgbDropdownToggle,\n            NgbDropdownMenu,\n            NgbDropdownItem,\n            NgbDropdownButtonItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_DROPDOWN_DIRECTIVES,\n                    exports: NGB_DROPDOWN_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\nclass NgbModalConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.backdrop = true;\n        this.fullscreen = false;\n        this.keyboard = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass ContentRef {\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nclass PopupService {\n    constructor(_componentType) {\n        this._componentType = _componentType;\n        this._windowRef = null;\n        this._contentRef = null;\n        this._document = inject(DOCUMENT);\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._viewContainerRef = inject(ViewContainerRef);\n        this._ngZone = inject(NgZone);\n    }\n    open(content, templateContext, animation = false) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, templateContext);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n                injector: this._injector,\n                projectableNodes: this._contentRef.nodes,\n            });\n        }\n        const { nativeElement } = this._windowRef.location;\n        const nextRenderSubject = new Subject();\n        afterNextRender(() => {\n            nextRenderSubject.next();\n            nextRenderSubject.complete();\n        }, {\n            injector: this._injector,\n            phase: AfterRenderPhase.MixedReadWrite,\n        });\n        const transition$ = nextRenderSubject.pipe(mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({ classList }) => classList.add('show'), {\n            animation,\n            runningTransition: 'continue',\n        })));\n        return { windowRef: this._windowRef, transition$ };\n    }\n    close(animation = false) {\n        if (!this._windowRef) {\n            return of(undefined);\n        }\n        return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({ classList }) => classList.remove('show'), { animation, runningTransition: 'stop' }).pipe(tap(() => {\n            this._windowRef?.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._windowRef = null;\n            this._contentRef = null;\n        }));\n    }\n    _getContentRef(content, templateContext) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            const viewRef = content.createEmbeddedView(templateContext);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._document.createTextNode(`${content}`)]]);\n        }\n    }\n}\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\nclass ScrollBar {\n    constructor() {\n        this._document = inject(DOCUMENT);\n    }\n    /**\n     * To be called to hide a potential vertical scrollbar:\n     * - if a scrollbar is there and has a width greater than 0, adds some compensation\n     * padding to the body to keep the same layout as when the scrollbar is there\n     * - adds overflow: hidden\n     *\n     * @return a callback used to revert the change\n     */\n    hide() {\n        const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n        const body = this._document.body;\n        const bodyStyle = body.style;\n        const { overflow, paddingRight } = bodyStyle;\n        if (scrollbarWidth > 0) {\n            const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n            bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n        }\n        bodyStyle.overflow = 'hidden';\n        return () => {\n            if (scrollbarWidth > 0) {\n                bodyStyle.paddingRight = paddingRight;\n            }\n            bodyStyle.overflow = overflow;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: ScrollBar, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: ScrollBar, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: ScrollBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbModalBackdrop {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n    }\n    ngOnInit() {\n        afterNextRender(() => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, { animation: this.animation, runningTransition: 'continue' }), { injector: this._injector, phase: AfterRenderPhase.MixedReadWrite });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalBackdrop, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbModalBackdrop, isStandalone: true, selector: \"ngb-modal-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\" }, host: { properties: { \"class\": \"\\\"modal-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" }, styleAttribute: \"z-index: 1055\" }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-modal-backdrop',\n                    standalone: true,\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        style: 'z-index: 1055',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }] } });\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) { }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbModalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\nconst WINDOW_ATTRIBUTES = [\n    'animation',\n    'ariaLabelledBy',\n    'ariaDescribedBy',\n    'backdrop',\n    'centered',\n    'fullscreen',\n    'keyboard',\n    'scrollable',\n    'size',\n    'windowClass',\n    'modalDialogClass',\n];\nconst BACKDROP_ATTRIBUTES = ['animation', 'backdropClass'];\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    _applyWindowOptions(windowInstance, options) {\n        WINDOW_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        BACKDROP_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) {\n        this._applyWindowOptions(this._windowCmptRef.instance, options);\n        if (this._backdropCmptRef && this._backdropCmptRef.instance) {\n            this._applyBackdropOptions(this._backdropCmptRef.instance, options);\n        }\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the modal is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     *\n     * @since 8.0.0\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     *\n     * @since 8.0.0\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both modal window and backdrop are closed and animations were finished.\n     * At this point modal and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     *\n     * @since 8.0.0\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when modal is fully visible and animation was finished.\n     * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if modal is closed before open animation is finished.\n     *\n     * @since 8.0.0\n     */\n    get shown() {\n        return this._windowCmptRef.instance.shown.asObservable();\n    }\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeModalElements() {\n        const windowTransition$ = this._windowCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding window\n        windowTransition$.subscribe(() => {\n            const { nativeElement } = this._windowCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._windowCmptRef.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._windowCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(windowTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._elRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to modal opening\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    get fullscreenClass() {\n        return this.fullscreen === true\n            ? ' modal-fullscreen'\n            : isString(this.fullscreen)\n                ? ` modal-fullscreen-${this.fullscreen}-down`\n                : '';\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        afterNextRender(() => this._show(), { injector: this._injector, phase: AfterRenderPhase.MixedReadWrite });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        const transitions$ = zip(windowTransition$, dialogTransition$);\n        transitions$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return transitions$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        zip(windowTransition$, dialogTransition$).subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), filter((e) => e.key === 'Escape'))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                        }\n                    });\n                }\n                else if (this.backdrop === 'static') {\n                    this._bumpBackdrop();\n                }\n            });\n            // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n            // inside the modal dialog and releasing it outside\n            let preventClose = false;\n            fromEvent(this._dialogEl.nativeElement, 'mousedown')\n                .pipe(takeUntil(this._closed$), tap(() => (preventClose = false)), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({ target }) => nativeElement === target))\n                .subscribe(() => {\n                preventClose = true;\n            });\n            // We're listening to 'click' to dismiss modal on modal window click, except when:\n            // 1. clicking on modal dialog itself\n            // 2. closing was prevented by mousedown/up handlers\n            // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n            fromEvent(nativeElement, 'click')\n                .pipe(takeUntil(this._closed$))\n                .subscribe(({ target }) => {\n                if (nativeElement === target) {\n                    if (this.backdrop === 'static') {\n                        this._bumpBackdrop();\n                    }\n                    else if (this.backdrop === true && !preventClose) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n                    }\n                }\n                preventClose = false;\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    _bumpBackdrop() {\n        if (this.backdrop === 'static') {\n            ngbRunTransition(this._zone, this._elRef.nativeElement, ({ classList }) => {\n                classList.add('modal-static');\n                return () => classList.remove('modal-static');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbModalWindow, isStandalone: true, selector: \"ngb-modal-window\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", backdrop: \"backdrop\", centered: \"centered\", fullscreen: \"fullscreen\", keyboard: \"keyboard\", scrollable: \"scrollable\", size: \"size\", windowClass: \"windowClass\", modalDialogClass: \"modalDialogClass\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"modal d-block\\\" + (windowClass ? \\\" \\\" + windowClass : \\\"\\\")\", \"class.fade\": \"animation\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, viewQueries: [{ propertyName: \"_dialogEl\", first: true, predicate: [\"dialog\"], descendants: true, static: true }], ngImport: i0, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content /></div>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-modal-window', standalone: true, host: {\n                        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    }, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content /></div>\n\t\t</div>\n\t`, encapsulation: ViewEncapsulation.None, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"] }]\n        }], propDecorators: { _dialogEl: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], backdrop: [{\n                type: Input\n            }], centered: [{\n                type: Input\n            }], fullscreen: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], windowClass: [{\n                type: Input\n            }], modalDialogClass: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbModalStack {\n    constructor() {\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._environmentInjector = inject(EnvironmentInjector);\n        this._document = inject(DOCUMENT);\n        this._scrollBar = inject(ScrollBar);\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._scrollBarRestoreFn = null;\n        this._modalRefs = [];\n        this._windowCmpts = [];\n        this._activeInstances = new EventEmitter();\n        const ngZone = inject(NgZone);\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe(() => {\n            if (this._windowCmpts.length) {\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        this._hideScrollBar();\n        const activeModal = new NgbActiveModal();\n        contentInjector = options.injector || contentInjector;\n        const environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n        const contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let windowCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n        // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n        // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n        ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n            if (!this._modalRefs.length) {\n                this._document.body.classList.remove('modal-open');\n                this._restoreScrollBar();\n                this._revertAriaHidden();\n            }\n        }));\n        activeModal.close = (result) => {\n            ngbModalRef.close(result);\n        };\n        activeModal.dismiss = (reason) => {\n            ngbModalRef.dismiss(reason);\n        };\n        activeModal.update = (options) => {\n            ngbModalRef.update(options);\n        };\n        ngbModalRef.update(options);\n        if (this._modalRefs.length === 1) {\n            this._document.body.classList.add('modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        windowCmptRef.changeDetectorRef.detectChanges();\n        return ngbModalRef;\n    }\n    get activeInstances() {\n        return this._activeInstances;\n    }\n    dismissAll(reason) {\n        this._modalRefs.forEach((ngbModalRef) => ngbModalRef.dismiss(reason));\n    }\n    hasOpenModals() {\n        return this._modalRefs.length > 0;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbModalBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let windowCmptRef = createComponent(NgbModalWindow, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    _getContentRef(contentInjector, environmentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeModal) {\n        const context = {\n            $implicit: activeModal,\n            close(result) {\n                activeModal.close(result);\n            },\n            dismiss(reason) {\n                activeModal.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, environmentInjector, componentType, context, options) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveModal, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            componentNativeEl.classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _setAriaHidden(element) {\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach((sibling) => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            });\n            this._setAriaHidden(parent);\n        }\n    }\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        });\n        this._ariaHiddenValues.clear();\n    }\n    _registerModalRef(ngbModalRef) {\n        const unregisterModalRef = () => {\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n                this._activeInstances.emit(this._modalRefs);\n            }\n        };\n        this._modalRefs.push(ngbModalRef);\n        this._activeInstances.emit(this._modalRefs);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy(() => {\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalStack, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    constructor() {\n        this._injector = inject(Injector);\n        this._modalStack = inject(NgbModalStack);\n        this._config = inject(NgbModalConfig);\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._modalStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active modal instances.\n     */\n    get activeInstances() {\n        return this._modalStack.activeInstances;\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason) {\n        this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals() {\n        return this._modalStack.hasOpenModals();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModal, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModal, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModal, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbModalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalModule, providers: [NgbModal] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModalModule, decorators: [{\n            type: NgModule,\n            args: [{ providers: [NgbModal] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbNavConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.destroyOnHide = true;\n        this.orientation = 'horizontal';\n        this.roles = 'tablist';\n        this.keyboard = true;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst isValidNavId = (id) => isDefined(id) && id !== '';\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nclass NgbNavContent {\n    constructor() {\n        this.templateRef = inject(TemplateRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavContent, isStandalone: true, selector: \"ng-template[ngbNavContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbNavContent]', standalone: true }]\n        }] });\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\nclass NgbNavItemRole {\n    constructor(role) {\n        this.role = role;\n        this.nav = inject(NgbNav);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavItemRole, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavItemRole, isStandalone: true, selector: \"[ngbNavItem]:not(ng-container)\", host: { properties: { \"attr.role\": \"role ? role : nav.roles ? 'presentation' : undefined\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavItemRole, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavItem]:not(ng-container)',\n                    standalone: true,\n                    host: {\n                        '[attr.role]': `role ? role : nav.roles ? 'presentation' : undefined`,\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }] });\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nclass NgbNavItem {\n    constructor() {\n        this._nav = inject(NgbNav);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        /**\n         * If `true`, the current nav item is disabled and can't be toggled by user.\n         *\n         * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n         */\n        this.disabled = false;\n        /**\n         * An event emitted when the fade in transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!isDefined(this.domId)) {\n            this.domId = `ngb-nav-${navCounter++}`;\n        }\n    }\n    get active() {\n        return this._nav.activeId === this.id;\n    }\n    get id() {\n        return isValidNavId(this._id) ? this._id : this.domId;\n    }\n    get panelDomId() {\n        return `${this.domId}-panel`;\n    }\n    isPanelInDom() {\n        return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n    /**\n     * @internal\n     */\n    isNgContainer() {\n        return this._nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavItem, isStandalone: true, selector: \"[ngbNavItem]\", inputs: { destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", domId: \"domId\", _id: [\"ngbNavItem\", \"_id\"] }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { classAttribute: \"nav-item\" }, queries: [{ propertyName: \"contentTpl\", first: true, predicate: NgbNavContent }], exportAs: [\"ngbNavItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavItem]',\n                    exportAs: 'ngbNavItem',\n                    standalone: true,\n                    host: {\n                        class: 'nav-item',\n                    },\n                }]\n        }], propDecorators: { destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], domId: [{\n                type: Input\n            }], _id: [{\n                type: Input,\n                args: ['ngbNavItem']\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], contentTpl: [{\n                type: ContentChild,\n                args: [NgbNavContent, { descendants: false }]\n            }] } });\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nclass NgbNav {\n    constructor(role) {\n        this.role = role;\n        this._config = inject(NgbNavConfig);\n        this._cd = inject(ChangeDetectorRef);\n        this._document = inject(DOCUMENT);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this.destroyRef = inject(DestroyRef);\n        this._navigatingWithKeyboard = false;\n        /**\n         * The event emitted after the active nav changes\n         * The payload of the event is the newly active nav id\n         *\n         * If you want to prevent nav change, you should use `(navChange)` event\n         */\n        this.activeIdChange = new EventEmitter();\n        /**\n         * If `true`, nav change will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * If `true`, non-active nav content will be removed from DOM\n         * Otherwise it will just be hidden\n         */\n        this.destroyOnHide = this._config.destroyOnHide;\n        /**\n         * The orientation of navs.\n         *\n         * Using `vertical` will also add the `aria-orientation` attribute\n         */\n        this.orientation = this._config.orientation;\n        /**\n         * Role attribute generating strategy:\n         * - `false` - no role attributes will be generated\n         * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n         */\n        this.roles = this._config.roles;\n        /**\n         * Keyboard support for nav focus/selection using arrow keys.\n         *\n         * * `true` - navs will be focused using keyboard arrow keys\n         * * `false` - no keyboard support\n         * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\n         *\n         * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\n         *\n         * @since 6.1.0\n         */\n        this.keyboard = this._config.keyboard;\n        /**\n         * An event emitted when the fade in transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just shown.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just hidden.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.navItemChange$ = new Subject();\n        /**\n         * The nav change event emitted right before the nav change happens on user click.\n         *\n         * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n         *\n         * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n         */\n        this.navChange = new EventEmitter();\n    }\n    click(item) {\n        if (!item.disabled) {\n            this._updateActiveId(item.id);\n        }\n    }\n    onFocusout({ relatedTarget }) {\n        if (!this._nativeElement.contains(relatedTarget)) {\n            this._navigatingWithKeyboard = false;\n        }\n    }\n    onKeyDown(event) {\n        if (this.roles !== 'tablist' || !this.keyboard) {\n            return;\n        }\n        const enabledLinks = this.links.filter((link) => !link.navItem.disabled);\n        const { length } = enabledLinks;\n        let position = -1;\n        enabledLinks.forEach((link, index) => {\n            if (link.nativeElement === this._document.activeElement) {\n                position = index;\n            }\n        });\n        if (length) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'ArrowLeft':\n                    position = (position - 1 + length) % length;\n                    break;\n                case 'ArrowRight':\n                case 'ArrowDown':\n                    position = (position + 1) % length;\n                    break;\n                case 'Home':\n                    position = 0;\n                    break;\n                case 'End':\n                    position = length - 1;\n                    break;\n            }\n            if (this.keyboard === 'changeWithArrows') {\n                this.select(enabledLinks[position].navItem.id);\n            }\n            enabledLinks[position].nativeElement.focus();\n            this._navigatingWithKeyboard = true;\n            event.preventDefault();\n        }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    select(id) {\n        this._updateActiveId(id, false);\n    }\n    ngAfterContentInit() {\n        if (!isDefined(this.activeId)) {\n            const nextId = this.items.first ? this.items.first.id : null;\n            if (isValidNavId(nextId)) {\n                this._updateActiveId(nextId, false);\n                this._cd.detectChanges();\n            }\n        }\n        this.items.changes\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe(() => this._notifyItemChanged(this.activeId));\n    }\n    ngOnChanges({ activeId }) {\n        if (activeId && !activeId.firstChange) {\n            this._notifyItemChanged(activeId.currentValue);\n        }\n    }\n    _updateActiveId(nextId, emitNavChange = true) {\n        if (this.activeId !== nextId) {\n            let defaultPrevented = false;\n            if (emitNavChange) {\n                this.navChange.emit({\n                    activeId: this.activeId,\n                    nextId,\n                    preventDefault: () => {\n                        defaultPrevented = true;\n                    },\n                });\n            }\n            if (!defaultPrevented) {\n                this.activeId = nextId;\n                this.activeIdChange.emit(nextId);\n                this._notifyItemChanged(nextId);\n            }\n        }\n    }\n    _notifyItemChanged(nextItemId) {\n        this.navItemChange$.next(this._getItemById(nextItemId));\n    }\n    _getItemById(itemId) {\n        return (this.items && this.items.find((item) => item.id === itemId)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNav, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNav, isStandalone: true, selector: \"[ngbNav]\", inputs: { activeId: \"activeId\", animation: \"animation\", destroyOnHide: \"destroyOnHide\", orientation: \"orientation\", roles: \"roles\", keyboard: \"keyboard\" }, outputs: { activeIdChange: \"activeIdChange\", shown: \"shown\", hidden: \"hidden\", navChange: \"navChange\" }, host: { listeners: { \"keydown.arrowLeft\": \"onKeyDown($event)\", \"keydown.arrowRight\": \"onKeyDown($event)\", \"keydown.arrowDown\": \"onKeyDown($event)\", \"keydown.arrowUp\": \"onKeyDown($event)\", \"keydown.Home\": \"onKeyDown($event)\", \"keydown.End\": \"onKeyDown($event)\", \"focusout\": \"onFocusout($event)\" }, properties: { \"class.flex-column\": \"orientation === 'vertical'\", \"attr.aria-orientation\": \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\", \"attr.role\": \"role ? role : roles ? 'tablist' : undefined\" }, classAttribute: \"nav\" }, queries: [{ propertyName: \"items\", predicate: NgbNavItem }, { propertyName: \"links\", predicate: i0.forwardRef(() => NgbNavLinkBase), descendants: true }], exportAs: [\"ngbNav\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNav, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNav]',\n                    exportAs: 'ngbNav',\n                    standalone: true,\n                    host: {\n                        class: 'nav',\n                        '[class.flex-column]': `orientation === 'vertical'`,\n                        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n                        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n                        '(keydown.arrowLeft)': 'onKeyDown($event)',\n                        '(keydown.arrowRight)': 'onKeyDown($event)',\n                        '(keydown.arrowDown)': 'onKeyDown($event)',\n                        '(keydown.arrowUp)': 'onKeyDown($event)',\n                        '(keydown.Home)': 'onKeyDown($event)',\n                        '(keydown.End)': 'onKeyDown($event)',\n                        '(focusout)': 'onFocusout($event)',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }], propDecorators: { activeId: [{\n                type: Input\n            }], activeIdChange: [{\n                type: Output\n            }], animation: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roles: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], items: [{\n                type: ContentChildren,\n                args: [NgbNavItem]\n            }], links: [{\n                type: ContentChildren,\n                args: [forwardRef(() => NgbNavLinkBase), { descendants: true }]\n            }], navChange: [{\n                type: Output\n            }] } });\nclass NgbNavLinkBase {\n    constructor(role) {\n        this.role = role;\n        this.navItem = inject(NgbNavItem);\n        this.nav = inject(NgbNav);\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    get tabindex() {\n        if (this.nav.keyboard === false) {\n            return this.navItem.disabled ? -1 : undefined;\n        }\n        if (this.nav._navigatingWithKeyboard) {\n            return -1;\n        }\n        return this.navItem.disabled || !this.navItem.active ? -1 : undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLinkBase, deps: [{ token: 'role', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavLinkBase, isStandalone: true, selector: \"[ngbNavLink]\", host: { properties: { \"id\": \"navItem.domId\", \"class.nav-item\": \"navItem.isNgContainer()\", \"attr.role\": \"role ? role : nav.roles ? 'tab' : undefined\", \"class.active\": \"navItem.active\", \"class.disabled\": \"navItem.disabled\", \"attr.tabindex\": \"tabindex\", \"attr.aria-controls\": \"navItem.isPanelInDom() ? navItem.panelDomId : null\", \"attr.aria-selected\": \"navItem.active\", \"attr.aria-disabled\": \"navItem.disabled\" }, classAttribute: \"nav-link\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLinkBase, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavLink]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'navItem.domId',\n                        class: 'nav-link',\n                        '[class.nav-item]': 'navItem.isNgContainer()',\n                        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n                        '[class.active]': 'navItem.active',\n                        '[class.disabled]': 'navItem.disabled',\n                        '[attr.tabindex]': 'tabindex',\n                        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n                        '[attr.aria-selected]': 'navItem.active',\n                        '[attr.aria-disabled]': 'navItem.disabled',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }] });\n/**\n * A directive to mark the nav link when used on a button element.\n */\nclass NgbNavLinkButton extends NgbNavLinkBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLinkButton, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavLinkButton, isStandalone: true, selector: \"button[ngbNavLink]\", host: { attributes: { \"type\": \"button\" }, listeners: { \"click\": \"nav.click(navItem)\" }, properties: { \"disabled\": \"navItem.disabled\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLinkButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbNavLink]',\n                    standalone: true,\n                    host: {\n                        type: 'button',\n                        '[disabled]': 'navItem.disabled',\n                        '(click)': 'nav.click(navItem)',\n                    },\n                }]\n        }] });\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\nclass NgbNavLink extends NgbNavLinkBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLink, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavLink, isStandalone: true, selector: \"a[ngbNavLink]\", host: { attributes: { \"href\": \"\" }, listeners: { \"click\": \"nav.click(navItem); $event.preventDefault()\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[ngbNavLink]',\n                    standalone: true,\n                    host: {\n                        href: '',\n                        '(click)': 'nav.click(navItem); $event.preventDefault()',\n                    },\n                }]\n        }] });\n\nconst ngbNavFadeOutTransition = ({ classList }) => {\n    classList.remove('show');\n    return () => classList.remove('active');\n};\nconst ngbNavFadeInTransition = (element, animation) => {\n    if (animation) {\n        reflow(element);\n    }\n    element.classList.add('show');\n};\n\nclass NgbNavPane {\n    constructor() {\n        this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavPane, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbNavPane, isStandalone: true, selector: \"[ngbNavPane]\", inputs: { item: \"item\", nav: \"nav\", role: \"role\" }, host: { properties: { \"id\": \"item.panelDomId\", \"class.fade\": \"nav.animation\", \"attr.role\": \"role ? role : nav.roles ? \\\"tabpanel\\\" : undefined\", \"attr.aria-labelledby\": \"item.domId\" }, classAttribute: \"tab-pane\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavPane, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavPane]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'item.panelDomId',\n                        class: 'tab-pane',\n                        '[class.fade]': 'nav.animation',\n                        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n                        '[attr.aria-labelledby]': 'item.domId',\n                    },\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], nav: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nclass NgbNavOutlet {\n    constructor() {\n        this._cd = inject(ChangeDetectorRef);\n        this._ngZone = inject(NgZone);\n        this._activePane = null;\n    }\n    isPanelTransitioning(item) {\n        return this._activePane?.item === item;\n    }\n    ngAfterViewInit() {\n        // initial display\n        this._updateActivePane();\n        // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n        this.nav.navItemChange$\n            .pipe(takeUntilDestroyed(this.nav.destroyRef), startWith(this._activePane?.item || null), distinctUntilChanged(), skip(1))\n            .subscribe((nextItem) => {\n            const options = { animation: this.nav.animation, runningTransition: 'stop' };\n            // next panel we're switching to will only appear in DOM after the change detection is done\n            // and `this._panes` will be updated\n            this._cd.detectChanges();\n            // fading out\n            if (this._activePane) {\n                ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n                    const activeItem = this._activePane?.item;\n                    this._activePane = this._getPaneForItem(nextItem);\n                    // mark for check when transition finishes as outlet or parent containers might be OnPush\n                    // without this the panes that have \"faded out\" will stay in DOM\n                    this._cd.markForCheck();\n                    // fading in\n                    if (this._activePane) {\n                        // we have to add the '.active' class before running the transition,\n                        // because it should be in place before `ngbRunTransition` does `reflow()`\n                        this._activePane.nativeElement.classList.add('active');\n                        ngbRunTransition(this._ngZone, this._activePane.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n                            if (nextItem) {\n                                nextItem.shown.emit();\n                                this.nav.shown.emit(nextItem.id);\n                            }\n                        });\n                    }\n                    if (activeItem) {\n                        activeItem.hidden.emit();\n                        this.nav.hidden.emit(activeItem.id);\n                    }\n                });\n            }\n            else {\n                this._updateActivePane();\n            }\n        });\n    }\n    _updateActivePane() {\n        this._activePane = this._getActivePane();\n        this._activePane?.nativeElement.classList.add('show', 'active');\n    }\n    _getPaneForItem(item) {\n        return (this._panes && this._panes.find((pane) => pane.item === item)) || null;\n    }\n    _getActivePane() {\n        return (this._panes && this._panes.find((pane) => pane.item.active)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavOutlet, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbNavOutlet, isStandalone: true, selector: \"[ngbNavOutlet]\", inputs: { paneRole: \"paneRole\", nav: [\"ngbNavOutlet\", \"nav\"] }, host: { classAttribute: \"tab-content\" }, viewQueries: [{ propertyName: \"_panes\", predicate: NgbNavPane, descendants: true }], ngImport: i0, template: `\n\t\t@for (item of nav.items; track item) {\n\t\t\t@if (item.isPanelInDom() || isPanelTransitioning(item)) {\n\t\t\t\t<div ngbNavPane [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgbNavPane, selector: \"[ngbNavPane]\", inputs: [\"item\", \"nav\", \"role\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavOutlet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngbNavOutlet]',\n                    standalone: true,\n                    imports: [NgbNavPane, NgTemplateOutlet],\n                    host: {\n                        class: 'tab-content',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n\t\t@for (item of nav.items; track item) {\n\t\t\t@if (item.isPanelInDom() || isPanelTransitioning(item)) {\n\t\t\t\t<div ngbNavPane [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { _panes: [{\n                type: ViewChildren,\n                args: [NgbNavPane]\n            }], paneRole: [{\n                type: Input\n            }], nav: [{\n                type: Input,\n                args: ['ngbNavOutlet']\n            }] } });\n\nconst NGB_NAV_DIRECTIVES = [\n    NgbNavContent,\n    NgbNav,\n    NgbNavItem,\n    NgbNavItemRole,\n    NgbNavLink,\n    NgbNavLinkButton,\n    NgbNavLinkBase,\n    NgbNavOutlet,\n    NgbNavPane,\n];\nclass NgbNavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavModule, imports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane], exports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbNavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_NAV_DIRECTIVES,\n                    exports: NGB_NAV_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationEllipsis, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationEllipsis, isStandalone: true, selector: \"ng-template[ngbPaginationEllipsis]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationEllipsis, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationEllipsis]', standalone: true }]\n        }] });\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationFirst {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationFirst, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationFirst, isStandalone: true, selector: \"ng-template[ngbPaginationFirst]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationFirst, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationFirst]', standalone: true }]\n        }] });\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationLast {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationLast, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationLast, isStandalone: true, selector: \"ng-template[ngbPaginationLast]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationLast, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationLast]', standalone: true }]\n        }] });\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNext {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationNext, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationNext, isStandalone: true, selector: \"ng-template[ngbPaginationNext]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationNext, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNext]', standalone: true }]\n        }] });\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNumber {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationNumber, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationNumber, isStandalone: true, selector: \"ng-template[ngbPaginationNumber]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationNumber, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNumber]', standalone: true }]\n        }] });\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationPrevious {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationPrevious, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationPrevious, isStandalone: true, selector: \"ng-template[ngbPaginationPrevious]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationPrevious, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPrevious]', standalone: true }]\n        }] });\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\nclass NgbPaginationPages {\n    constructor() {\n        this.templateRef = inject((TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationPages, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPaginationPages, isStandalone: true, selector: \"ng-template[ngbPaginationPages]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationPages, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPages]', standalone: true }]\n        }] });\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    constructor() {\n        this._config = inject(NgbPaginationConfig);\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         * If `true`, pagination links will be disabled.\n         */\n        this.disabled = this._config.disabled;\n        /**\n         * If `true`, the \"First\" and \"Last\" page links are shown.\n         */\n        this.boundaryLinks = this._config.boundaryLinks;\n        /**\n         * If `true`, the \"Next\" and \"Previous\" page links are shown.\n         */\n        this.directionLinks = this._config.directionLinks;\n        /**\n         * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n         */\n        this.ellipses = this._config.ellipses;\n        /**\n         * Whether to rotate pages when `maxSize` > number of pages.\n         *\n         * The current page always stays in the middle if `true`.\n         */\n        this.rotate = this._config.rotate;\n        /**\n         *  The maximum number of pages to display.\n         */\n        this.maxSize = this._config.maxSize;\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  The number of items per page.\n         */\n        this.pageSize = this._config.pageSize;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        /**\n         * The pagination display size.\n         *\n         * Bootstrap currently supports small and large sizes.\n         *\n         * If the passed value is a string (ex. 'custom'), it will just add the `pagination-custom` css class\n         */\n        this.size = this._config.size;\n    }\n    hasPrevious() {\n        return this.page > 1;\n    }\n    hasNext() {\n        return this.page < this.pageCount;\n    }\n    nextDisabled() {\n        return !this.hasNext() || this.disabled;\n    }\n    previousDisabled() {\n        return !this.hasPrevious() || this.disabled;\n    }\n    selectPage(pageNumber) {\n        this._updatePages(pageNumber);\n    }\n    ngOnChanges(changes) {\n        this._updatePages(this.page);\n    }\n    isEllipsis(pageNumber) {\n        return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                // The first page will always be included. If the displayed range\n                // starts after the third page, then add ellipsis. But if the range\n                // starts on the third page, then add the second page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (start > 2) {\n                    this.pages.unshift(-1);\n                }\n                else if (start === 2) {\n                    this.pages.unshift(2);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                // The last page will always be included. If the displayed range\n                // ends before the third-last page, then add ellipsis. But if the range\n                // ends on third-last page, then add the second-last page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (end < this.pageCount - 2) {\n                    this.pages.push(-1);\n                }\n                else if (end === this.pageCount - 2) {\n                    this.pages.push(this.pageCount - 1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    _applyRotation() {\n        let start = 0;\n        let end = this.pageCount;\n        let leftOffset = Math.floor(this.maxSize / 2);\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    _applyPagination() {\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        let start = page * this.maxSize;\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    _setPageInRange(newPageNo) {\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            let start = 0;\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPagination, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbPagination, isStandalone: true, selector: \"ngb-pagination\", inputs: { disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", rotate: \"rotate\", collectionSize: \"collectionSize\", maxSize: \"maxSize\", page: \"page\", pageSize: \"pageSize\", size: \"size\" }, outputs: { pageChange: \"pageChange\" }, host: { attributes: { \"role\": \"navigation\" } }, queries: [{ propertyName: \"tplEllipsis\", first: true, predicate: NgbPaginationEllipsis, descendants: true }, { propertyName: \"tplFirst\", first: true, predicate: NgbPaginationFirst, descendants: true }, { propertyName: \"tplLast\", first: true, predicate: NgbPaginationLast, descendants: true }, { propertyName: \"tplNext\", first: true, predicate: NgbPaginationNext, descendants: true }, { propertyName: \"tplNumber\", first: true, predicate: NgbPaginationNumber, descendants: true }, { propertyName: \"tplPrevious\", first: true, predicate: NgbPaginationPrevious, descendants: true }, { propertyName: \"tplPages\", first: true, predicate: NgbPaginationPages, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t@for (pageNumber of pages; track $index) {\n\t\t\t\t<li\n\t\t\t\t\tclass=\"page-item\"\n\t\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t\t>\n\t\t\t\t\t@if (isEllipsis(pageNumber)) {\n\t\t\t\t\t\t<a class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t} @else {\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t/>\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ul>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPagination, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-pagination',\n                    standalone: true,\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        role: 'navigation',\n                    },\n                    template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t@for (pageNumber of pages; track $index) {\n\t\t\t\t<li\n\t\t\t\t\tclass=\"page-item\"\n\t\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t\t>\n\t\t\t\t\t@if (isEllipsis(pageNumber)) {\n\t\t\t\t\t\t<a class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t} @else {\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t/>\n\t\t\t@if (directionLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t@if (boundaryLinks) {\n\t\t\t\t<li class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t\t<a\n\t\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\t\thref\n\t\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t}\n\t\t</ul>\n\t`,\n                }]\n        }], propDecorators: { tplEllipsis: [{\n                type: ContentChild,\n                args: [NgbPaginationEllipsis, { static: false }]\n            }], tplFirst: [{\n                type: ContentChild,\n                args: [NgbPaginationFirst, { static: false }]\n            }], tplLast: [{\n                type: ContentChild,\n                args: [NgbPaginationLast, { static: false }]\n            }], tplNext: [{\n                type: ContentChild,\n                args: [NgbPaginationNext, { static: false }]\n            }], tplNumber: [{\n                type: ContentChild,\n                args: [NgbPaginationNumber, { static: false }]\n            }], tplPrevious: [{\n                type: ContentChild,\n                args: [NgbPaginationPrevious, { static: false }]\n            }], tplPages: [{\n                type: ContentChild,\n                args: [NgbPaginationPages, { static: false }]\n            }], disabled: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], ellipses: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], collectionSize: [{\n                type: Input,\n                args: [{ required: true }]\n            }], maxSize: [{\n                type: Input\n            }], page: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }], size: [{\n                type: Input\n            }] } });\n\nconst NGB_PAGINATION_DIRECTIVES = [\n    NgbPagination,\n    NgbPaginationEllipsis,\n    NgbPaginationFirst,\n    NgbPaginationLast,\n    NgbPaginationNext,\n    NgbPaginationNumber,\n    NgbPaginationPrevious,\n    NgbPaginationPages,\n];\nclass NgbPaginationModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationModule, imports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages], exports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_PAGINATION_DIRECTIVES,\n                    exports: NGB_PAGINATION_DIRECTIVES,\n                }]\n        }] });\n\nconst ALIASES = {\n    hover: ['mouseenter', 'mouseleave'],\n    focus: ['focusin', 'focusout'],\n};\nfunction parseTriggers(triggers) {\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    const parsedTriggers = trimmedTriggers\n        .split(/\\s+/)\n        .map((trigger) => trigger.split(':'))\n        .map((triggerPair) => (ALIASES[triggerPair[0]] || triggerPair));\n    const manualTriggers = parsedTriggers.filter((triggerPair) => triggerPair.includes('manual'));\n    if (manualTriggers.length > 1) {\n        throw `Triggers parse error: only one manual trigger is allowed`;\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw `Triggers parse error: manual trigger can't be mixed with other triggers`;\n    }\n    return manualTriggers.length ? [] : parsedTriggers;\n}\nfunction listenToTriggers(element, triggers, isOpenedFn, openFn, closeFn, openDelayMs = 0, closeDelayMs = 0) {\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 0) {\n        return () => { };\n    }\n    const activeOpenTriggers = new Set();\n    const cleanupFns = [];\n    let timeout;\n    function addEventListener(name, listener) {\n        element.addEventListener(name, listener);\n        cleanupFns.push(() => element.removeEventListener(name, listener));\n    }\n    function withDelay(fn, delayMs) {\n        clearTimeout(timeout);\n        if (delayMs > 0) {\n            timeout = setTimeout(fn, delayMs);\n        }\n        else {\n            fn();\n        }\n    }\n    for (const [openTrigger, closeTrigger] of parsedTriggers) {\n        if (!closeTrigger) {\n            addEventListener(openTrigger, () => isOpenedFn() ? withDelay(closeFn, closeDelayMs) : withDelay(openFn, openDelayMs));\n        }\n        else {\n            addEventListener(openTrigger, () => {\n                activeOpenTriggers.add(openTrigger);\n                withDelay(() => activeOpenTriggers.size > 0 && openFn(), openDelayMs);\n            });\n            addEventListener(closeTrigger, () => {\n                activeOpenTriggers.delete(openTrigger);\n                withDelay(() => activeOpenTriggers.size === 0 && closeFn(), closeDelayMs);\n            });\n        }\n    }\n    return () => cleanupFns.forEach((cleanupFn) => cleanupFn());\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nlet nextId$1 = 0;\nclass NgbPopoverWindow {\n    isTitleTemplate() {\n        return this.title instanceof TemplateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbPopoverWindow, isStandalone: true, selector: \"ngb-popover-window\", inputs: { animation: \"animation\", title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"popover\\\" + (popoverClass ? \\\" \\\" + popoverClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" }, styleAttribute: \"position: absolute;\" }, ngImport: i0, template: `\n\t\t<div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t@if (title) {\n\t\t\t<h3 class=\"popover-header\">\n\t\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t}\n\t\t<div class=\"popover-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-popover-window',\n                    standalone: true,\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                        style: 'position: absolute;',\n                    },\n                    template: `\n\t\t<div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t@if (title) {\n\t\t\t<h3 class=\"popover-header\">\n\t\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t}\n\t\t<div class=\"popover-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    constructor() {\n        this._config = inject(NgbPopoverConfig);\n        /**\n         * If `true`, popover opening and closing will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n         *\n         * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n         * * `false` - disables the autoClose feature (NB: triggers still apply)\n         * * `\"inside\"` - closes on inside clicks as well as Escape presses\n         * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n         * as well as `Escape` presses\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the popover, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"auto\"`.\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the popover.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * Specifies events that should trigger the tooltip.\n         *\n         * Supports a space separated list of event names.\n         * For more details see the [triggers demo](#/components/popover/examples#triggers).\n         */\n        this.triggers = this._config.triggers;\n        /**\n         * A selector specifying the element the popover should be appended to.\n         *\n         * Currently only supports `body`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, popover is disabled and won't be displayed.\n         *\n         * @since 1.1.0\n         */\n        this.disablePopover = this._config.disablePopover;\n        /**\n         * An optional class applied to the popover window element.\n         *\n         * @since 2.2.0\n         */\n        this.popoverClass = this._config.popoverClass;\n        /**\n         * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.openDelay = this._config.openDelay;\n        /**\n         * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.closeDelay = this._config.closeDelay;\n        /**\n         * An event emitted when the popover opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover closing animation has finished. Contains no payload.\n         *\n         * At this point popover is not in the DOM anymore.\n         */\n        this.hidden = new EventEmitter();\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngZone = inject(NgZone);\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n        this._popupService = new PopupService(NgbPopoverWindow);\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            // this type assertion is safe because otherwise _isDisabled would return true\n            const { windowRef, transition$ } = this._popupService.open(this.ngbPopover, context ?? this.popoverContext, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('title', this.popoverTitle);\n            this._windowRef.setInput('context', context ?? this.popoverContext);\n            this._windowRef.setInput('popoverClass', this.popoverClass);\n            this._windowRef.setInput('id', this._ngbPopoverWindowId);\n            this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    baseClass: 'bs-popover',\n                    updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 8])(options)),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                });\n                this._afterRenderRef = afterRender(() => {\n                    this._positioning.update();\n                }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [\n                this._windowRef.location.nativeElement,\n            ]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef) {\n            this._getPositionTargetElement().removeAttribute('aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._afterRenderRef?.destroy();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }) {\n        if (popoverClass && this.isOpen()) {\n            this._windowRef.setInput('popoverClass', popoverClass.currentValue);\n        }\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _isDisabled() {\n        return this.disablePopover ? true : !this.ngbPopover && !this.popoverTitle;\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopover, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbPopover, isStandalone: true, selector: \"[ngbPopover]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", popoverContext: \"popoverContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopover, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover', standalone: true }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], ngbPopover: [{\n                type: Input\n            }], popoverTitle: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disablePopover: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], popoverContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbPopoverModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverModule, imports: [NgbPopover], exports: [NgbPopover] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbPopover],\n                    exports: [NgbPopover],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.ariaLabel = 'progress bar';\n        this.striped = false;\n        this.showValue = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max) {\n        this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n    get max() {\n        return this._max;\n    }\n    constructor() {\n        this._config = inject(NgbProgressbarConfig);\n        this.stacked = inject(NgbProgressbarStacked, { optional: true });\n        /**\n         * If `true`, the stripes on the progress bar are animated.\n         *\n         * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n         */\n        this.animated = this._config.animated;\n        /**\n         * The accessible progress bar name.\n         *\n         * @since 13.1.0\n         */\n        this.ariaLabel = this._config.ariaLabel;\n        /**\n         * If `true`, the progress bars will be displayed as striped.\n         */\n        this.striped = this._config.striped;\n        /**\n         * If `true`, the current percentage will be shown in the `xx%` format.\n         */\n        this.showValue = this._config.showValue;\n        /**\n         * Optional text variant type of the progress bar.\n         *\n         * Supports types based on Bootstrap background color variants, like:\n         *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n         *\n         * @since 5.2.0\n         */\n        this.textType = this._config.textType;\n        /**\n         * The type of the progress bar.\n         *\n         * Supports types based on Bootstrap background color variants, like:\n         *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n         */\n        this.type = this._config.type;\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        /**\n         * The height of the progress bar.\n         *\n         * Accepts any valid CSS height values, ex. `\"2rem\"`\n         */\n        this.height = this._config.height;\n        this.max = this._config.max;\n    }\n    getValue() {\n        return getValueInRange(this.value, this.max);\n    }\n    getPercentValue() {\n        return (100 * this.getValue()) / this.max;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbProgressbar, isStandalone: true, selector: \"ngb-progressbar\", inputs: { max: \"max\", animated: \"animated\", ariaLabel: \"ariaLabel\", striped: \"striped\", showValue: \"showValue\", textType: \"textType\", type: \"type\", value: \"value\", height: \"height\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\" }, properties: { \"attr.aria-valuenow\": \"getValue()\", \"attr.aria-valuemax\": \"max\", \"attr.aria-label\": \"ariaLabel\", \"style.width.%\": \"stacked ? getPercentValue() : null\", \"style.height\": \"height\" }, classAttribute: \"progress\" }, ngImport: i0, template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"!stacked ? getPercentValue() : null\"\n\t\t>\n\t\t\t@if (showValue) {\n\t\t\t\t<span i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span>\n\t\t\t}\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"pipe\", type: PercentPipe, name: \"percent\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar',\n                    standalone: true,\n                    imports: [PercentPipe],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'progress',\n                        role: 'progressbar',\n                        '[attr.aria-valuenow]': 'getValue()',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '[style.width.%]': 'stacked ? getPercentValue() : null',\n                        '[style.height]': 'height',\n                    },\n                    template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"!stacked ? getPercentValue() : null\"\n\t\t>\n\t\t\t@if (showValue) {\n\t\t\t\t<span i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span>\n\t\t\t}\n\t\t\t<ng-content />\n\t\t</div>\n\t`,\n                }]\n        }], ctorParameters: () => [], propDecorators: { max: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], striped: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], textType: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ required: true }]\n            }], height: [{\n                type: Input\n            }] } });\n/**\n * A directive that allow to stack progress bars.\n *\n * @since 16.0.0\n */\nclass NgbProgressbarStacked {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarStacked, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbProgressbarStacked, isStandalone: true, selector: \"ngb-progressbar-stacked\", host: { classAttribute: \"progress-stacked\" }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarStacked, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar-stacked',\n                    standalone: true,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'progress-stacked',\n                    },\n                    template: `<ng-content></ng-content>`,\n                }]\n        }] });\n\nclass NgbProgressbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarModule, imports: [NgbProgressbar, NgbProgressbarStacked], exports: [NgbProgressbar, NgbProgressbarStacked] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbProgressbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbProgressbar, NgbProgressbarStacked],\n                    exports: [NgbProgressbar, NgbProgressbarStacked],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n        this.tabindex = 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    constructor() {\n        this.contexts = [];\n        this._config = inject(NgbRatingConfig);\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * If `true`, the rating can't be changed or focused.\n         */\n        this.disabled = false;\n        /**\n         * The maximal rating that can be given.\n         */\n        this.max = this._config.max;\n        /**\n         * If `true`, the rating can't be changed.\n         */\n        this.readonly = this._config.readonly;\n        /**\n         * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n         */\n        this.resettable = this._config.resettable;\n        /**\n         * Allows setting a custom rating tabindex.\n         * If the component is disabled, `tabindex` will still be set to `-1`.\n         *\n         * @since 13.1.0\n         */\n        this.tabindex = this._config.tabindex;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the rating is changed.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * Allows to provide a function to set a custom aria-valuetext\n     *\n     * @since 14.1.0\n     */\n    ariaValueText(current, max) {\n        return `${current} out of ${max}`;\n    }\n    isInteractive() {\n        return !this.readonly && !this.disabled;\n    }\n    enter(value) {\n        if (this.isInteractive()) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    handleClick(value) {\n        if (this.isInteractive()) {\n            this.update(this.resettable && this.rate === value ? 0 : value);\n        }\n    }\n    handleKeyDown(event) {\n        switch (event.key) {\n            case 'ArrowDown':\n            case 'ArrowLeft':\n                this.update(this.rate - 1);\n                break;\n            case 'ArrowUp':\n            case 'ArrowRight':\n                this.update(this.rate + 1);\n                break;\n            case 'Home':\n                this.update(0);\n                break;\n            case 'End':\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n        if (changes['max']) {\n            this._updateMax();\n        }\n    }\n    ngOnInit() {\n        this._setupContexts();\n        this._updateState(this.rate);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    update(value, internalChange = true) {\n        const newRate = getValueInRange(value, this.max, 0);\n        if (this.isInteractive() && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((context, index) => (context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100)));\n    }\n    _updateMax() {\n        if (this.max > 0) {\n            this._setupContexts();\n            this.update(this.rate);\n        }\n    }\n    _setupContexts() {\n        this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRating, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbRating, isStandalone: true, selector: \"ngb-rating\", inputs: { disabled: \"disabled\", max: \"max\", rate: \"rate\", readonly: \"readonly\", resettable: \"resettable\", starTemplate: \"starTemplate\", tabindex: \"tabindex\", ariaValueText: \"ariaValueText\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, host: { attributes: { \"role\": \"slider\", \"aria-valuemin\": \"0\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\", \"mouseleave\": \"reset()\" }, properties: { \"tabindex\": \"disabled ? -1 : tabindex\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"nextRate\", \"attr.aria-valuetext\": \"ariaValueText(nextRate, max)\", \"attr.aria-readonly\": \"readonly && !disabled ? true : null\", \"attr.aria-disabled\": \"disabled ? true : null\" }, classAttribute: \"d-inline-flex\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }], queries: [{ propertyName: \"starTemplateFromContent\", first: true, predicate: TemplateRef, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t@for (_ of contexts; track _; let index = $index) {\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRating, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-rating',\n                    standalone: true,\n                    imports: [NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'd-inline-flex',\n                        '[tabindex]': 'disabled ? -1 : tabindex',\n                        role: 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText(nextRate, max)',\n                        '[attr.aria-readonly]': 'readonly && !disabled ? true : null',\n                        '[attr.aria-disabled]': 'disabled ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()',\n                    },\n                    template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t@for (_ of contexts; track _; let index = $index) {\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t/>\n\t\t\t</span>\n\t\t}\n\t`,\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], rate: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], resettable: [{\n                type: Input\n            }], starTemplate: [{\n                type: Input\n            }], starTemplateFromContent: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }], tabindex: [{\n                type: Input\n            }], ariaValueText: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], leave: [{\n                type: Output\n            }], rateChange: [{\n                type: Output\n            }] } });\n\nclass NgbRatingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingModule, imports: [NgbRating], exports: [NgbRating] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbRatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbRating],\n                    exports: [NgbRating],\n                }]\n        }] });\n\nfunction toFragmentElement(container, id) {\n    if (!container || id == null) {\n        return null;\n    }\n    return isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\nfunction getOrderedFragments(container, fragments) {\n    const selector = [...fragments].map(({ id }) => `#${CSS.escape(id)}`).join(',');\n    return Array.from(container.querySelectorAll(selector));\n}\nconst defaultProcessChanges = (state, changeActive, ctx) => {\n    const { rootElement, fragments, scrollSpy, options, entries } = state;\n    const orderedFragments = getOrderedFragments(rootElement, fragments);\n    if (!ctx.initialized) {\n        ctx.initialized = true;\n        ctx.gapFragment = null;\n        ctx.visibleFragments = new Set();\n        // special case when one of the fragments was pre-selected\n        const preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n        if (preSelectedFragment) {\n            scrollSpy.scrollTo(preSelectedFragment);\n            return;\n        }\n    }\n    for (const entry of entries) {\n        const { isIntersecting, target: fragment } = entry;\n        // 1. an entry became visible\n        if (isIntersecting) {\n            // if we were in-between two elements, we have to clear it up\n            if (ctx.gapFragment) {\n                ctx.visibleFragments.delete(ctx.gapFragment);\n                ctx.gapFragment = null;\n            }\n            ctx.visibleFragments.add(fragment);\n        }\n        // 2. an entry became invisible\n        else {\n            ctx.visibleFragments.delete(fragment);\n            // nothing is visible anymore, but something just was actually\n            if (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n                // 2.1 scrolling down - keeping the same element\n                if (entry.boundingClientRect.top < entry.rootBounds.top) {\n                    ctx.gapFragment = fragment;\n                    ctx.visibleFragments.add(ctx.gapFragment);\n                }\n                // 2.2 scrolling up - getting the previous element\n                else {\n                    // scrolling up and no more fragments above\n                    if (fragment === orderedFragments[0]) {\n                        ctx.gapFragment = null;\n                        ctx.visibleFragments.clear();\n                        changeActive('');\n                        return;\n                    }\n                    // getting previous fragment\n                    else {\n                        const fragmentIndex = orderedFragments.indexOf(fragment);\n                        ctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n                        if (ctx.gapFragment) {\n                            ctx.visibleFragments.add(ctx.gapFragment);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // getting the first visible element in the DOM order of the fragments\n    for (const fragment of orderedFragments) {\n        if (ctx.visibleFragments.has(fragment)) {\n            changeActive(fragment.id);\n            break;\n        }\n    }\n};\n\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyConfig {\n    constructor() {\n        this.scrollBehavior = 'smooth';\n        this.processChanges = defaultProcessChanges;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst MATCH_THRESHOLD = 3;\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyService {\n    constructor() {\n        this._observer = null;\n        this._containerElement = null;\n        this._fragments = new Set();\n        this._preRegisteredFragments = new Set();\n        this._active$ = new Subject();\n        this._distinctActive$ = this._active$.pipe(distinctUntilChanged());\n        this._active = '';\n        this._config = inject(NgbScrollSpyConfig);\n        this._document = inject(DOCUMENT);\n        this._platformId = inject(PLATFORM_ID);\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._diChangeDetectorRef = inject(ChangeDetectorRef, { optional: true });\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._zone = inject(NgZone);\n        this._distinctActive$.pipe(takeUntilDestroyed()).subscribe((active) => {\n            this._active = active;\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    /**\n     * Getter for the currently active fragment id. Returns empty string if none.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * An observable emitting the currently active fragment. Emits empty string if none.\n     */\n    get active$() {\n        return this._distinctActive$;\n    }\n    /**\n     * Starts the scrollspy service and observes specified fragments.\n     *\n     * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n     * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n     */\n    start(options) {\n        if (isPlatformBrowser(this._platformId)) {\n            this._cleanup();\n            const { root, rootMargin, scrollBehavior, threshold, fragments, changeDetectorRef, processChanges } = {\n                ...options,\n            };\n            this._containerElement = root ?? this._document.documentElement;\n            this._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n            this._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n            const processChangesFn = processChanges ?? this._config.processChanges;\n            const context = {};\n            this._observer = new IntersectionObserver((entries) => processChangesFn({\n                entries,\n                rootElement: this._containerElement,\n                fragments: this._fragments,\n                scrollSpy: this,\n                options: { ...options },\n            }, (active) => this._active$.next(active), context), {\n                root: root ?? this._document,\n                ...(rootMargin && { rootMargin }),\n                ...(threshold && { threshold }),\n            });\n            // merging fragments added before starting and the ones passed as options\n            for (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n                this.observe(element);\n            }\n            this._preRegisteredFragments.clear();\n        }\n    }\n    /**\n     * Stops the service and unobserves all fragments.\n     */\n    stop() {\n        this._cleanup();\n        this._active$.next('');\n    }\n    /**\n     * Scrolls to a fragment, it must be known to the service and contained in the root element.\n     * An id or an element reference can be passed.\n     *\n     * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n     */\n    scrollTo(fragment, options) {\n        const { behavior } = { behavior: this._scrollBehavior, ...options };\n        if (this._containerElement) {\n            const fragmentElement = toFragmentElement(this._containerElement, fragment);\n            if (fragmentElement) {\n                const heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n                this._containerElement.scrollTo({ top: heightPx, behavior });\n                let lastOffset = this._containerElement.scrollTop;\n                let matchCounter = 0;\n                // we should update the active section only after scrolling is finished\n                // and there is no clean way to do it at the moment\n                const containerElement = this._containerElement;\n                this._zone.runOutsideAngular(() => {\n                    const updateActiveWhenScrollingIsFinished = () => {\n                        const sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n                        if (sameOffsetAsLastTime) {\n                            matchCounter++;\n                        }\n                        else {\n                            matchCounter = 0;\n                        }\n                        if (!sameOffsetAsLastTime || (sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD)) {\n                            lastOffset = containerElement.scrollTop;\n                            requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                        }\n                        else {\n                            this._zone.run(() => this._active$.next(fragmentElement.id));\n                        }\n                    };\n                    requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                });\n            }\n        }\n    }\n    /**\n     * Adds a fragment to observe. It must be contained in the root element.\n     * An id or an element reference can be passed.\n     */\n    observe(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.add(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement && !this._fragments.has(fragmentElement)) {\n            this._fragments.add(fragmentElement);\n            this._observer.observe(fragmentElement);\n        }\n    }\n    /**\n     * Unobserves a fragment.\n     * An id or an element reference can be passed.\n     */\n    unobserve(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.delete(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement) {\n            this._fragments.delete(fragmentElement);\n            // we're removing and re-adding all current fragments to recompute active one\n            this._observer.disconnect();\n            for (const fragment of this._fragments) {\n                this._observer.observe(fragment);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._cleanup();\n    }\n    _cleanup() {\n        this._fragments.clear();\n        this._observer?.disconnect();\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._observer = null;\n        this._containerElement = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyItem {\n    constructor() {\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._scrollSpyMenu = inject(NgbScrollSpyMenu, { optional: true });\n        this._scrollSpyAPI = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._isActive = false;\n    }\n    /**\n     * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n     *\n     * Can be used like:\n     *  - `ngbScrollSpyItem=\"fragmentId\"`\n     *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n     *\n     *  As well as together with `[fragment]` and `[parent]` inputs.\n     */\n    set data(data) {\n        if (Array.isArray(data)) {\n            this._scrollSpyAPI = data[0];\n            this.fragment = data[1];\n            this.parent ??= data[2];\n        }\n        else if (data instanceof NgbScrollSpy) {\n            this._scrollSpyAPI = data;\n        }\n        else if (isString(data)) {\n            this.fragment = data;\n        }\n    }\n    ngOnInit() {\n        // if it is not a part of a bigger menu, it should handle activation itself\n        if (!this._scrollSpyMenu) {\n            this._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((active) => {\n                if (active === this.fragment) {\n                    this._activate();\n                }\n                else {\n                    this._deactivate();\n                }\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * @internal\n     */\n    _activate() {\n        this._isActive = true;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _deactivate() {\n        this._isActive = false;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n        }\n    }\n    /**\n     * Returns `true`, if the associated fragment is active.\n     */\n    isActive() {\n        return this._isActive;\n    }\n    /**\n     * Scrolls to the associated fragment.\n     */\n    scrollTo(options) {\n        this._scrollSpyAPI.scrollTo(this.fragment, options);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbScrollSpyItem, isStandalone: true, selector: \"[ngbScrollSpyItem]\", inputs: { data: [\"ngbScrollSpyItem\", \"data\"], fragment: \"fragment\", parent: \"parent\" }, host: { listeners: { \"click\": \"scrollTo();\" }, properties: { \"class.active\": \"isActive()\" } }, exportAs: [\"ngbScrollSpyItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyItem]',\n                    standalone: true,\n                    exportAs: 'ngbScrollSpyItem',\n                    host: {\n                        '[class.active]': 'isActive()',\n                        '(click)': 'scrollTo();',\n                    },\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['ngbScrollSpyItem']\n            }], fragment: [{\n                type: Input\n            }], parent: [{\n                type: Input\n            }] } });\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyMenu {\n    constructor() {\n        this._scrollSpyRef = inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._map = new Map();\n        this._lastActiveItem = null;\n    }\n    set scrollSpy(scrollSpy) {\n        this._scrollSpyRef = scrollSpy;\n    }\n    get active() {\n        return this._scrollSpyRef.active;\n    }\n    get active$() {\n        return this._scrollSpyRef.active$;\n    }\n    scrollTo(fragment, options) {\n        this._scrollSpyRef.scrollTo(fragment, options);\n    }\n    getItem(id) {\n        return this._map.get(id);\n    }\n    ngAfterViewInit() {\n        this._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n        this._rebuildMap();\n        this._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((activeId) => {\n            this._lastActiveItem?._deactivate();\n            const item = this._map.get(activeId);\n            if (item) {\n                item._activate();\n                this._lastActiveItem = item;\n            }\n        });\n    }\n    _rebuildMap() {\n        this._map.clear();\n        for (let item of this._items) {\n            this._map.set(item.fragment, item);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbScrollSpyMenu, isStandalone: true, selector: \"[ngbScrollSpyMenu]\", inputs: { scrollSpy: [\"ngbScrollSpyMenu\", \"scrollSpy\"] }, queries: [{ propertyName: \"_items\", predicate: NgbScrollSpyItem, descendants: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyMenu]',\n                    standalone: true,\n                }]\n        }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbScrollSpyItem, { descendants: true }]\n            }], scrollSpy: [{\n                type: Input,\n                args: ['ngbScrollSpyMenu']\n            }] } });\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\nclass NgbScrollSpy {\n    constructor() {\n        this._initialFragment = null;\n        this._service = inject(NgbScrollSpyService);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        /**\n         * An event raised when the active section changes.\n         *\n         * Payload is the id of the new active section, empty string if none.\n         */\n        this.activeChange = this._service.active$;\n    }\n    set active(fragment) {\n        this._initialFragment = fragment;\n        this.scrollTo(fragment);\n    }\n    /**\n     * Getter/setter for the currently active fragment id.\n     */\n    get active() {\n        return this._service.active;\n    }\n    /**\n     * Returns an observable that emits currently active section id.\n     */\n    get active$() {\n        return this._service.active$;\n    }\n    ngAfterViewInit() {\n        this._service.start({\n            processChanges: this.processChanges,\n            root: this._nativeElement,\n            rootMargin: this.rootMargin,\n            threshold: this.threshold,\n            ...(this._initialFragment && { initialFragment: this._initialFragment }),\n        });\n    }\n    /**\n     * @internal\n     */\n    _registerFragment(fragment) {\n        this._service.observe(fragment.id);\n    }\n    /**\n     * @internal\n     */\n    _unregisterFragment(fragment) {\n        this._service.unobserve(fragment.id);\n    }\n    /**\n     * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n     * An id or an element reference can be passed.\n     */\n    scrollTo(fragment, options) {\n        this._service.scrollTo(fragment, {\n            ...(this.scrollBehavior && { behavior: this.scrollBehavior }),\n            ...options,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpy, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbScrollSpy, isStandalone: true, selector: \"[ngbScrollSpy]\", inputs: { processChanges: \"processChanges\", rootMargin: \"rootMargin\", scrollBehavior: \"scrollBehavior\", threshold: \"threshold\", active: \"active\" }, outputs: { activeChange: \"activeChange\" }, host: { attributes: { \"tabindex\": \"0\" }, styleAttribute: \"overflow-y: auto\" }, providers: [NgbScrollSpyService], exportAs: [\"ngbScrollSpy\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpy, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpy]',\n                    standalone: true,\n                    exportAs: 'ngbScrollSpy',\n                    host: {\n                        tabindex: '0',\n                        style: 'overflow-y: auto',\n                    },\n                    providers: [NgbScrollSpyService],\n                }]\n        }], propDecorators: { processChanges: [{\n                type: Input\n            }], rootMargin: [{\n                type: Input\n            }], scrollBehavior: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], activeChange: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyFragment {\n    constructor() {\n        this._destroyRef = inject(DestroyRef);\n        this._scrollSpy = inject(NgbScrollSpy);\n    }\n    ngAfterViewInit() {\n        this._scrollSpy._registerFragment(this);\n        this._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyFragment, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbScrollSpyFragment, isStandalone: true, selector: \"[ngbScrollSpyFragment]\", inputs: { id: [\"ngbScrollSpyFragment\", \"id\"] }, host: { properties: { \"id\": \"id\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyFragment, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyFragment]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input,\n                args: ['ngbScrollSpyFragment']\n            }] } });\n\nclass NgbScrollSpyModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyModule, imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu], exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbScrollSpyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                    exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                }]\n        }] });\n\nclass NgbTime {\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    changeHour(step = 1) {\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    changeMinute(step = 1) {\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + (minute % 60) : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    changeSecond(step = 1) {\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + (second % 60) : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    toString() {\n        return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n    }\n}\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nclass NgbTimeAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }]\n        }] });\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimeStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nclass NgbTimepickerI18n {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18n, providedIn: 'root', useFactory: () => new NgbTimepickerI18nDefault() }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => new NgbTimepickerI18nDefault(),\n                }]\n        }] });\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    constructor() {\n        super(...arguments);\n        this._locale = inject(LOCALE_ID);\n        this._periods = [\n            formatDate(new Date(3600000), 'a', this._locale, 'UTC'),\n            formatDate(new Date(3600000 * 13), 'a', this._locale, 'UTC'),\n        ];\n    }\n    getMorningPeriod() {\n        return this._periods[0];\n    }\n    getAfternoonPeriod() {\n        return this._periods[1];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18nDefault, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerI18nDefault, decorators: [{\n            type: Injectable\n        }] });\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    get hourStep() {\n        return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    get minuteStep() {\n        return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    get secondStep() {\n        return this._secondStep;\n    }\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    writeValue(value) {\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Increments the hours by the given step.\n     */\n    changeHour(step) {\n        this.model?.changeHour(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the minutes by the given step.\n     */\n    changeMinute(step) {\n        this.model?.changeMinute(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the seconds by the given step.\n     */\n    changeSecond(step) {\n        this.model?.changeSecond(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Update hours with the new value.\n     */\n    updateHour(newVal) {\n        const isPM = this.model ? this.model.hour >= 12 : false;\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && ((isPM && enteredHour < 12) || (!isPM && enteredHour === 12))) {\n            this.model?.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model?.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    /**\n     * Update minutes with the new value.\n     */\n    updateMinute(newVal) {\n        this.model?.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * Update seconds with the new value.\n     */\n    updateSecond(newVal) {\n        this.model?.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    toggleMeridian() {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    formatInput(input) {\n        input.value = input.value.replace(FILTER_REGEX, '');\n    }\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    formatMinSec(value) {\n        return padNumber(isNumber(value) ? value : NaN);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    get isSmallSize() {\n        return this.size === 'small';\n    }\n    get isLargeSize() {\n        return this.size === 'large';\n    }\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model?.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepicker, deps: [{ token: NgbTimepickerConfig }, { token: NgbTimeAdapter }, { token: i0.ChangeDetectorRef }, { token: NgbTimepickerI18n }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbTimepicker, isStandalone: true, selector: \"ngb-timepicker\", inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], exportAs: [\"ngbTimepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t@if (seconds) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t@if (meridian) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\"></div>\n\t\t\t\t\t<div class=\"ngb-tp-meridian\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (model && model.hour >= 12) {\n\t\t\t\t\t\t\t\t<ng-container i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n\t\t\t\t\t\t\t} @else {\n\t\t\t\t\t\t\t\t<ng-container>{{ i18n.getMorningPeriod() }}</ng-container>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t`, isInline: true, styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbTimepicker', selector: 'ngb-timepicker', standalone: true, encapsulation: ViewEncapsulation.None, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t@if (seconds) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t@if (spinners) {\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t@if (meridian) {\n\t\t\t\t\t<div class=\"ngb-tp-spacer\"></div>\n\t\t\t\t\t<div class=\"ngb-tp-meridian\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@if (model && model.hour >= 12) {\n\t\t\t\t\t\t\t\t<ng-container i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n\t\t\t\t\t\t\t} @else {\n\t\t\t\t\t\t\t\t<ng-container>{{ i18n.getMorningPeriod() }}</ng-container>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</fieldset>\n\t`, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"] }]\n        }], ctorParameters: () => [{ type: NgbTimepickerConfig }, { type: NgbTimeAdapter }, { type: i0.ChangeDetectorRef }, { type: NgbTimepickerI18n }], propDecorators: { meridian: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], seconds: [{\n                type: Input\n            }], hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondStep: [{\n                type: Input\n            }], readonlyInputs: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass NgbTimepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerModule, imports: [NgbTimepicker], exports: [NgbTimepicker] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTimepicker],\n                    exports: [NgbTimepicker],\n                }]\n        }] });\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nclass NgbToastConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autohide = true;\n        this.delay = 5000;\n        this.ariaLive = 'polite';\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ngbToastFadeInTransition = (element, animation) => {\n    const { classList } = element;\n    if (animation) {\n        classList.add('fade');\n    }\n    else {\n        classList.add('show');\n        return;\n    }\n    reflow(element);\n    classList.add('show', 'showing');\n    return () => {\n        classList.remove('showing');\n    };\n};\nconst ngbToastFadeOutTransition = ({ classList }) => {\n    classList.add('showing');\n    return () => {\n        classList.remove('show', 'showing');\n    };\n};\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nclass NgbToastHeader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbToastHeader, isStandalone: true, selector: \"[ngbToastHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbToastHeader]', standalone: true }]\n        }] });\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nclass NgbToast {\n    constructor(ariaLive) {\n        this.ariaLive = ariaLive;\n        this._config = inject(NgbToastConfig);\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._element = inject(ElementRef);\n        /**\n         * If `true`, toast opening and closing will be animated.\n         *\n         * Animation is triggered only when the `.hide()` or `.show()` functions are called\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Delay after which the toast will hide (ms).\n         * default: `500` (ms) (inherited from NgbToastConfig)\n         */\n        this.delay = this._config.delay;\n        /**\n         * Auto hide the toast after a delay in ms.\n         * default: `true` (inherited from NgbToastConfig)\n         */\n        this.autohide = this._config.autohide;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired after the animation triggered by calling `.show()` method has finished.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event fired after the animation triggered by calling `.hide()` method has finished.\n         *\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross\n         *\n         * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n         * to the user to take care of that.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.ariaLive ??= this._config.ariaLive;\n    }\n    ngAfterContentInit() {\n        afterNextRender(() => {\n            this._init();\n            this.show();\n        }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    }\n    /**\n     * Triggers toast closing programmatically.\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(hidden)` output\n     *\n     * @since 8.0.0\n     */\n    hide() {\n        this._clearTimeout();\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n        transition.subscribe(() => {\n            this.hidden.emit();\n        });\n        return transition;\n    }\n    /**\n     * Triggers toast opening programmatically.\n     *\n     * The returned observable will emit and be completed once the opening transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(shown)` output\n     *\n     * @since 8.0.0\n     */\n    show() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => {\n            this.shown.emit();\n        });\n        return transition;\n    }\n    _init() {\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout(() => this.hide(), this.delay);\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToast, deps: [{ token: 'aria-live', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbToast, isStandalone: true, selector: \"ngb-toast\", inputs: { animation: \"animation\", delay: \"delay\", autohide: \"autohide\", header: \"header\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"alert\", \"aria-atomic\": \"true\" }, properties: { \"attr.aria-live\": \"ariaLive\", \"class.fade\": \"animation\" }, classAttribute: \"toast\" }, queries: [{ propertyName: \"contentHeaderTpl\", first: true, predicate: NgbToastHeader, descendants: true, read: TemplateRef, static: true }], exportAs: [\"ngbToast\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t@if (contentHeaderTpl || header) {\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\" />\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t}\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToast, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-toast', exportAs: 'ngbToast', standalone: true, imports: [NgTemplateOutlet], encapsulation: ViewEncapsulation.None, host: {\n                        role: 'alert',\n                        '[attr.aria-live]': 'ariaLive',\n                        'aria-atomic': 'true',\n                        class: 'toast',\n                        '[class.fade]': 'animation',\n                    }, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t@if (contentHeaderTpl || header) {\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\" />\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t}\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }], propDecorators: { animation: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], autohide: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], contentHeaderTpl: [{\n                type: ContentChild,\n                args: [NgbToastHeader, { read: TemplateRef, static: true }]\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbToastModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastModule, imports: [NgbToast, NgbToastHeader], exports: [NgbToast, NgbToastHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbToastModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbToast, NgbToastHeader],\n                    exports: [NgbToast, NgbToastHeader],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nlet nextId = 0;\nclass NgbTooltipWindow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbTooltipWindow, isStandalone: true, selector: \"ngb-tooltip-window\", inputs: { animation: \"animation\", id: \"id\", tooltipClass: \"tooltipClass\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"tooltip\\\" + (tooltipClass ? \\\" \\\" + tooltipClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" } }, ngImport: i0, template: `\n\t\t<div class=\"tooltip-arrow\" data-popper-arrow></div>\n\t\t<div class=\"tooltip-inner\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-tooltip-window{pointer-events:none;position:absolute}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-top,ngb-tooltip-window.bs-tooltip-bottom{padding-left:0;padding-right:0}ngb-tooltip-window.bs-tooltip-start,ngb-tooltip-window.bs-tooltip-end{padding-top:0;padding-bottom:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-tooltip-window', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                    }, template: `\n\t\t<div class=\"tooltip-arrow\" data-popper-arrow></div>\n\t\t<div class=\"tooltip-inner\">\n\t\t\t<ng-content />\n\t\t</div>\n\t`, styles: [\"ngb-tooltip-window{pointer-events:none;position:absolute}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-top,ngb-tooltip-window.bs-tooltip-bottom{padding-left:0;padding-right:0}ngb-tooltip-window.bs-tooltip-start,ngb-tooltip-window.bs-tooltip-end{padding-top:0;padding-bottom:0}\\n\"] }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    constructor() {\n        this._config = inject(NgbTooltipConfig);\n        /**\n         * If `true`, tooltip opening and closing will be animated.\n         *\n         * @since 8.0.0\n         */\n        this.animation = this._config.animation;\n        /**\n         * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n         *\n         * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n         * * `false` - disables the autoClose feature (NB: triggers still apply)\n         * * `\"inside\"` - closes on inside clicks as well as Escape presses\n         * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n         * as well as `Escape` presses\n         *\n         * @since 3.0.0\n         */\n        this.autoClose = this._config.autoClose;\n        /**\n         * The preferred placement of the tooltip, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"auto\"`.\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the tooltip.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * Specifies events that should trigger the tooltip.\n         *\n         * Supports a space separated list of event names.\n         * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n         */\n        this.triggers = this._config.triggers;\n        /**\n         * A selector specifying the element the tooltip should be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, tooltip is disabled and won't be displayed.\n         *\n         * @since 1.1.0\n         */\n        this.disableTooltip = this._config.disableTooltip;\n        /**\n         * An optional class applied to the tooltip window element.\n         *\n         * @since 3.2.0\n         */\n        this.tooltipClass = this._config.tooltipClass;\n        /**\n         * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.openDelay = this._config.openDelay;\n        /**\n         * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n         *\n         * @since 4.1.0\n         */\n        this.closeDelay = this._config.closeDelay;\n        /**\n         * An event emitted when the tooltip opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the tooltip closing animation has finished. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._ngZone = inject(NgZone);\n        this._document = inject(DOCUMENT);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n        this._popupService = new PopupService(NgbTooltipWindow);\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    get ngbTooltip() {\n        return this._ngbTooltip;\n    }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            const { windowRef, transition$ } = this._popupService.open(this._ngbTooltip, context ?? this.tooltipContext, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('tooltipClass', this.tooltipClass);\n            this._windowRef.setInput('id', this._ngbTooltipWindowId);\n            this._getPositionTargetElement().setAttribute('aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    baseClass: 'bs-tooltip',\n                    updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 6])(options)),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                });\n                this._afterRenderRef = afterRender(() => {\n                    this._positioning.update();\n                }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement], [this._nativeElement]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef != null) {\n            this._getPositionTargetElement().removeAttribute('aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._afterRenderRef?.destroy();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ tooltipClass }) {\n        if (tooltipClass && this.isOpen()) {\n            this._windowRef.setInput('tooltipClass', tooltipClass.currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is necessary because it's possible that ngOnDestroy could be invoked before ngOnInit.\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbTooltip, isStandalone: true, selector: \"[ngbTooltip]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", tooltipContext: \"tooltipContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltip, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbTooltip]', standalone: true, exportAs: 'ngbTooltip' }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disableTooltip: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], ngbTooltip: [{\n                type: Input\n            }] } });\n\nclass NgbTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipModule, imports: [NgbTooltip], exports: [NgbTooltip] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTooltip],\n                    exports: [NgbTooltip],\n                }]\n        }] });\n\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n        /**\n         * Boolean option to determine if the highlighting should be sensitive to accents or not.\n         *\n         * This feature is only available for browsers that implement the `String.normalize` function\n         * (typically not Internet Explorer).\n         * If you want to use this feature in a browser that does not implement `String.normalize`,\n         * you will have to include a polyfill in your application (`unorm` for example).\n         *\n         * @since 9.1.0\n         */\n        this.accentSensitive = true;\n    }\n    ngOnChanges(changes) {\n        if (!this.accentSensitive && !String.prototype.normalize) {\n            console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\n                'that does not implement the `String.normalize` function. ' +\n                'You will have to include a polyfill in your application to use this feature in the current browser.');\n            this.accentSensitive = true;\n        }\n        const result = toString(this.result);\n        const terms = Array.isArray(this.term) ? this.term : [this.term];\n        const prepareTerm = (term) => (this.accentSensitive ? term : removeAccents(term));\n        const escapedTerms = terms.map((term) => regExpEscape(prepareTerm(toString(term)))).filter((term) => term);\n        const toSplit = this.accentSensitive ? result : removeAccents(result);\n        const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n        if (this.accentSensitive) {\n            this.parts = parts;\n        }\n        else {\n            let offset = 0;\n            this.parts = parts.map((part) => result.substring(offset, (offset += part.length)));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbHighlight, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbHighlight, isStandalone: true, selector: \"ngb-highlight\", inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\", accentSensitive: \"accentSensitive\" }, usesOnChanges: true, ngImport: i0, template: `\n\t\t@for (part of parts; track $index) {\n\t\t\t@if ($odd) {\n\t\t\t\t<span class=\"{{ highlightClass }}\">{{ part }}</span>\n\t\t\t} @else {\n\t\t\t\t<ng-container>{{ part }}</ng-container>\n\t\t\t}\n\t\t}\n\t`, isInline: true, styles: [\".ngb-highlight{font-weight:700}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbHighlight, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-highlight', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t@for (part of parts; track $index) {\n\t\t\t@if ($odd) {\n\t\t\t\t<span class=\"{{ highlightClass }}\">{{ part }}</span>\n\t\t\t} @else {\n\t\t\t\t<ng-container>{{ part }}</ng-container>\n\t\t\t}\n\t\t}\n\t`, styles: [\".ngb-highlight{font-weight:700}\\n\"] }]\n        }], propDecorators: { highlightClass: [{\n                type: Input\n            }], result: [{\n                type: Input,\n                args: [{ required: true }]\n            }], term: [{\n                type: Input,\n                args: [{ required: true }]\n            }], accentSensitive: [{\n                type: Input\n            }] } });\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n    providedIn: 'root',\n    factory: () => 100,\n});\nfunction getLiveElement(document, lazyCreate = false) {\n    let element = document.body.querySelector('#ngb-live');\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('visually-hidden');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._delay = inject(ARIA_LIVE_DELAY);\n    }\n    ngOnDestroy() {\n        const element = getLiveElement(this._document);\n        if (element) {\n            // if exists, it will always be attached to the <body>\n            element.parentElement.removeChild(element);\n        }\n    }\n    say(message) {\n        const element = getLiveElement(this._document, true);\n        const delay = this._delay;\n        if (element != null) {\n            element.textContent = '';\n            const setText = () => (element.textContent = message);\n            if (delay === null) {\n                setText();\n            }\n            else {\n                setTimeout(setText, delay);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: Live, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: Live, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: Live, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.selectOnExact = false;\n        this.showHint = false;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    hasActive() {\n        return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n    getActive() {\n        return this.results[this.activeIdx];\n    }\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    select(item) {\n        this.selectEvent.emit(item);\n    }\n    ngOnInit() {\n        this.resetActive();\n    }\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.0.2\", type: NgbTypeaheadWindow, isStandalone: true, selector: \"ngb-typeahead-window\", inputs: { id: \"id\", focusFirst: \"focusFirst\", results: \"results\", term: \"term\", formatter: \"formatter\", resultTemplate: \"resultTemplate\", popupClass: \"popupClass\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"mousedown\": \"$event.preventDefault()\" }, properties: { \"class\": \"\\\"dropdown-menu show\\\" + (popupClass ? \\\" \\\" + popupClass : \\\"\\\")\", \"id\": \"id\" } }, exportAs: [\"ngbTypeaheadWindow\"], ngImport: i0, template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\" />\n\t\t</ng-template>\n\t\t@for (result of results; track $index) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + $index\"\n\t\t\t\t[class.active]=\"$index === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive($index)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t}\n\t`, isInline: true, dependencies: [{ kind: \"component\", type: NgbHighlight, selector: \"ngb-highlight\", inputs: [\"highlightClass\", \"result\", \"term\", \"accentSensitive\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    standalone: true,\n                    imports: [NgbHighlight, NgTemplateOutlet],\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '(mousedown)': '$event.preventDefault()',\n                        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n                        role: 'listbox',\n                        '[id]': 'id',\n                    },\n                    template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\" />\n\t\t</ng-template>\n\t\t@for (result of results; track $index) {\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + $index\"\n\t\t\t\t[class.active]=\"$index === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive($index)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t}\n\t`,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], term: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectEvent: [{\n                type: Output,\n                args: ['select']\n            }], activeChangeEvent: [{\n                type: Output,\n                args: ['activeChange']\n            }] } });\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._config = inject(NgbTypeaheadConfig);\n        this._live = inject(Live);\n        this._document = inject(DOCUMENT);\n        this._ngZone = inject(NgZone);\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._popupService = new PopupService(NgbTypeaheadWindow);\n        this._positioning = ngbPositioning();\n        this._subscription = null;\n        this._closed$ = new Subject();\n        this._inputValueBackup = null;\n        this._inputValueForSelectOnExact = null;\n        this._valueChanges$ = fromEvent(this._nativeElement, 'input').pipe(map(($event) => $event.target.value));\n        this._resubscribeTypeahead$ = new BehaviorSubject(null);\n        this._windowRef = null;\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * @since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * A selector specifying the element the typeahead popup will be appended to.\n         *\n         * Currently only supports `\"body\"`.\n         */\n        this.container = this._config.container;\n        /**\n         * If `true`, model values will not be restricted only to items selected from the popup.\n         */\n        this.editable = this._config.editable;\n        /**\n         * If `true`, the first item in the result list will always stay focused while typing.\n         */\n        this.focusFirst = this._config.focusFirst;\n        /**\n         * If `true`, automatically selects the item when it is the only one that exactly matches the user input\n         *\n         * @since 14.2.0\n         */\n        this.selectOnExact = this._config.selectOnExact;\n        /**\n         * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n         */\n        this.showHint = this._config.showHint;\n        /**\n         * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = this._config.placement;\n        /**\n         * Allows to change default Popper options when positioning the typeahead.\n         * Receives current popper options and returns modified ones.\n         *\n         * @since 13.1.0\n         */\n        this.popperOptions = this._config.popperOptions;\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.activeDescendant = null;\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = () => { };\n        this._onChange = (_) => { };\n    }\n    ngOnInit() {\n        this._subscribeToUserInput();\n    }\n    ngOnChanges({ ngbTypeahead }) {\n        if (ngbTypeahead && !ngbTypeahead.firstChange) {\n            this._unsubscribeFromUserInput();\n            this._subscribeToUserInput();\n        }\n    }\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    setDisabledState(isDisabled) {\n        this._nativeElement.disabled = isDisabled;\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead$.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    isPopupOpen() {\n        return this._windowRef != null;\n    }\n    handleBlur() {\n        this._resubscribeTypeahead$.next(null);\n        this._onTouched();\n    }\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        switch (event.key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case 'Enter':\n            case 'Tab': {\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n            }\n        }\n    }\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._nativeElement.value;\n            const { windowRef } = this._popupService.open();\n            this._windowRef = windowRef;\n            this._windowRef.setInput('id', this.popupId);\n            this._windowRef.setInput('popupClass', this.popupClass);\n            this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n            this._windowRef.instance.activeChangeEvent.subscribe((activeId) => (this.activeDescendant = activeId));\n            if (this.container === 'body') {\n                this._windowRef.location.nativeElement.style.zIndex = '1055';\n                this._document.body.appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._windowRef) {\n                    this._positioning.createPopper({\n                        hostElement: this._nativeElement,\n                        targetElement: this._windowRef.location.nativeElement,\n                        placement: this.placement,\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._afterRenderRef = afterRender(() => {\n                        this._positioning.update();\n                    }, { phase: AfterRenderPhase.MixedReadWrite, injector: this._injector });\n                }\n            });\n            ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [\n                this._nativeElement,\n                this._windowRef.location.nativeElement,\n            ]);\n        }\n    }\n    _closePopup() {\n        this._popupService.close().subscribe(() => {\n            this._positioning.destroy();\n            this._afterRenderRef?.destroy();\n            this._closed$.next();\n            this._windowRef = null;\n            this.activeDescendant = null;\n        });\n    }\n    _selectResult(result) {\n        let defaultPrevented = false;\n        this.selectItem.emit({\n            item: result,\n            preventDefault: () => {\n                defaultPrevented = true;\n            },\n        });\n        this._resubscribeTypeahead$.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    _showHint() {\n        if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n                this._nativeElement['setSelectionRange'].apply(this._nativeElement, [\n                    this._inputValueBackup.length,\n                    formattedVal.length,\n                ]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    _writeInputValue(value) {\n        this._nativeElement.value = toString(value);\n    }\n    _subscribeToUserInput() {\n        const results$ = this._valueChanges$.pipe(tap((value) => {\n            this._inputValueBackup = this.showHint ? value : null;\n            this._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n            this._onChange(this.editable ? value : undefined);\n        }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n        this._subscription = this._resubscribeTypeahead$.pipe(switchMap(() => results$)).subscribe((results) => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                // when there is only one result and this matches the input value\n                if (this.selectOnExact &&\n                    results.length === 1 &&\n                    this._formatItemForInput(results[0]) === this._inputValueForSelectOnExact) {\n                    this._selectResult(results[0]);\n                    this._closePopup();\n                }\n                else {\n                    this._openPopup();\n                    this._windowRef.setInput('focusFirst', this.focusFirst);\n                    this._windowRef.setInput('results', results);\n                    this._windowRef.setInput('term', this._nativeElement.value);\n                    if (this.resultFormatter) {\n                        this._windowRef.setInput('formatter', this.resultFormatter);\n                    }\n                    if (this.resultTemplate) {\n                        this._windowRef.setInput('resultTemplate', this.resultTemplate);\n                    }\n                    this._windowRef.instance.resetActive();\n                    // The observable stream we are subscribing to might have async steps\n                    // and if a component containing typeahead is using the OnPush strategy\n                    // the change detection turn wouldn't be invoked automatically.\n                    this._windowRef.changeDetectorRef.detectChanges();\n                    this._showHint();\n                }\n            }\n            // live announcer\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        });\n    }\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeahead, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbTypeahead, isStandalone: true, selector: \"input[ngbTypeahead]\", inputs: { autocomplete: \"autocomplete\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\", selectOnExact: \"selectOnExact\", showHint: \"showHint\", placement: \"placement\", popperOptions: \"popperOptions\", popupClass: \"popupClass\" }, outputs: { selectItem: \"selectItem\" }, host: { attributes: { \"autocapitalize\": \"off\", \"autocorrect\": \"off\", \"role\": \"combobox\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\" }, properties: { \"class.open\": \"isPopupOpen()\", \"autocomplete\": \"autocomplete\", \"attr.aria-autocomplete\": \"showHint ? \\\"both\\\" : \\\"list\\\"\", \"attr.aria-activedescendant\": \"activeDescendant\", \"attr.aria-owns\": \"isPopupOpen() ? popupId : null\", \"attr.aria-expanded\": \"isPopupOpen()\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }], exportAs: [\"ngbTypeahead\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeahead, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    standalone: true,\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '[autocomplete]': 'autocomplete',\n                        autocapitalize: 'off',\n                        autocorrect: 'off',\n                        role: 'combobox',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()',\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }],\n                }]\n        }], propDecorators: { autocomplete: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], inputFormatter: [{\n                type: Input\n            }], ngbTypeahead: [{\n                type: Input\n            }], resultFormatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], selectOnExact: [{\n                type: Input\n            }], showHint: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectItem: [{\n                type: Output\n            }] } });\n\nclass NgbTypeaheadModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadModule, imports: [NgbHighlight, NgbTypeahead], exports: [NgbHighlight, NgbTypeahead] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbTypeaheadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbHighlight, NgbTypeahead],\n                    exports: [NgbHighlight, NgbTypeahead],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasConfig {\n    constructor() {\n        this._ngbConfig = inject(NgbConfig);\n        this.backdrop = true;\n        this.keyboard = true;\n        this.position = 'start';\n        this.scroll = false;\n    }\n    get animation() {\n        return this._animation ?? this._ngbConfig.animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nclass NgbActiveOffcanvas {\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasRef {\n    /**\n     * The instance of a component used for the offcanvas content.\n     *\n     * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the offcanvas is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n     * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when offcanvas is fully visible and animation was finished.\n     * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if offcanvas is closed before open animation is finished.\n     */\n    get shown() {\n        return this._panelCmptRef.instance.shown.asObservable();\n    }\n    constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._panelCmptRef = _panelCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _panelCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        if (_backdropCmptRef) {\n            _backdropCmptRef.instance.dismissEvent.subscribe((reason) => {\n                this.dismiss(reason);\n            });\n        }\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._panelCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeOffcanvasElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeOffcanvasElements();\n    }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._panelCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeOffcanvasElements() {\n        const panelTransition$ = this._panelCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding panel\n        panelTransition$.subscribe(() => {\n            const { nativeElement } = this._panelCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._panelCmptRef.destroy();\n            this._contentRef?.viewRef?.destroy();\n            this._panelCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(panelTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar OffcanvasDismissReasons;\n(function (OffcanvasDismissReasons) {\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n    constructor() {\n        this._nativeElement = inject(ElementRef).nativeElement;\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this.dismissEvent = new EventEmitter();\n    }\n    ngOnInit() {\n        afterNextRender(() => ngbRunTransition(this._zone, this._nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, { animation: this.animation, runningTransition: 'continue' }), { injector: this._injector, phase: AfterRenderPhase.MixedReadWrite });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    dismiss() {\n        if (!this.static) {\n            this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasBackdrop, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbOffcanvasBackdrop, isStandalone: true, selector: \"ngb-offcanvas-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\", static: \"static\" }, outputs: { dismissEvent: \"dismiss\" }, host: { listeners: { \"mousedown\": \"dismiss()\" }, properties: { \"class\": \"\\\"offcanvas-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" } }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-backdrop',\n                    standalone: true,\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        '(mousedown)': 'dismiss()',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }], static: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasPanel {\n    constructor() {\n        this._document = inject(DOCUMENT);\n        this._elRef = inject((ElementRef));\n        this._zone = inject(NgZone);\n        this._injector = inject(Injector);\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to offcanvas opening\n        this.keyboard = true;\n        this.position = 'start';\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        afterNextRender(() => this._show(), { injector: this._injector, phase: AfterRenderPhase.MixedReadWrite });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element) => {\n            element.classList.remove('showing');\n            element.classList.add('hiding');\n            return () => element.classList.remove('show', 'hiding');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return offcanvasTransition$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show', 'showing');\n            return () => element.classList.remove('showing');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), filter((e) => e.key === 'Escape'))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasPanel, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.2\", type: NgbOffcanvasPanel, isStandalone: true, selector: \"ngb-offcanvas-panel\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", keyboard: \"keyboard\", panelClass: \"panelClass\", position: \"position\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"offcanvas offcanvas-\\\" + position  + (panelClass ? \\\" \\\" + panelClass : \\\"\\\")\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, ngImport: i0, template: '<ng-content />', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-panel',\n                    standalone: true,\n                    template: '<ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    },\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasStack {\n    constructor() {\n        this._applicationRef = inject(ApplicationRef);\n        this._injector = inject(Injector);\n        this._document = inject(DOCUMENT);\n        this._scrollBar = inject(ScrollBar);\n        this._activePanelCmptHasChanged = new Subject();\n        this._scrollBarRestoreFn = null;\n        this._backdropAttributes = ['animation', 'backdropClass'];\n        this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n        this._activeInstance = new EventEmitter();\n        const ngZone = inject(NgZone);\n        // Trap focus on active PanelCmpt\n        this._activePanelCmptHasChanged.subscribe(() => {\n            if (this._panelCmpt) {\n                ngbFocusTrap(ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        if (!options.scroll) {\n            this._hideScrollBar();\n        }\n        const activeOffcanvas = new NgbActiveOffcanvas();\n        const contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let panelCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerOffcanvasRef(ngbOffcanvasRef);\n        this._registerPanelCmpt(panelCmptRef);\n        ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n        activeOffcanvas.close = (result) => {\n            ngbOffcanvasRef.close(result);\n        };\n        activeOffcanvas.dismiss = (reason) => {\n            ngbOffcanvasRef.dismiss(reason);\n        };\n        this._applyPanelOptions(panelCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        panelCmptRef.changeDetectorRef.detectChanges();\n        return ngbOffcanvasRef;\n    }\n    get activeInstance() {\n        return this._activeInstance;\n    }\n    dismiss(reason) {\n        this._offcanvasRef?.dismiss(reason);\n    }\n    hasOpenOffcanvas() {\n        return !!this._offcanvasRef;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let panelCmptRef = createComponent(NgbOffcanvasPanel, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(panelCmptRef.hostView);\n        containerEl.appendChild(panelCmptRef.location.nativeElement);\n        return panelCmptRef;\n    }\n    _applyPanelOptions(windowInstance, options) {\n        this._panelAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n        backdropInstance.static = options.backdrop === 'static';\n    }\n    _getContentRef(contentInjector, content, activeOffcanvas) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeOffcanvas);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, content, activeOffcanvas);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeOffcanvas) {\n        const context = {\n            $implicit: activeOffcanvas,\n            close(result) {\n                activeOffcanvas.close(result);\n            },\n            dismiss(reason) {\n                activeOffcanvas.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, componentType, context) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveOffcanvas, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _registerOffcanvasRef(ngbOffcanvasRef) {\n        const unregisterOffcanvasRef = () => {\n            this._offcanvasRef = undefined;\n            this._activeInstance.emit(this._offcanvasRef);\n        };\n        this._offcanvasRef = ngbOffcanvasRef;\n        this._activeInstance.emit(this._offcanvasRef);\n        ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n    }\n    _registerPanelCmpt(ngbPanelCmpt) {\n        this._panelCmpt = ngbPanelCmpt;\n        this._activePanelCmptHasChanged.next();\n        ngbPanelCmpt.onDestroy(() => {\n            this._panelCmpt = undefined;\n            this._activePanelCmptHasChanged.next();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasStack, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvas {\n    constructor() {\n        this._injector = inject(Injector);\n        this._offcanvasStack = inject(NgbOffcanvasStack);\n        this._config = inject(NgbOffcanvasConfig);\n    }\n    /**\n     * Opens a new offcanvas panel with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n     * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n     *\n     * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n     * options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._offcanvasStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active offcanvas instance.\n     */\n    get activeInstance() {\n        return this._offcanvasStack.activeInstance;\n    }\n    /**\n     * Dismisses the currently displayed offcanvas with the supplied reason.\n     */\n    dismiss(reason) {\n        this._offcanvasStack.dismiss(reason);\n    }\n    /**\n     * Indicates if there is currently an open offcanvas in the application.\n     */\n    hasOpenOffcanvas() {\n        return this._offcanvasStack.hasOpenOffcanvas();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvas, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvas, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvas, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbOffcanvasModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbOffcanvasModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nconst NGB_MODULES = [\n    NgbAccordionModule,\n    NgbAlertModule,\n    NgbCarouselModule,\n    NgbCollapseModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbNavModule,\n    NgbOffcanvasModule,\n    NgbPaginationModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbRatingModule,\n    NgbScrollSpyModule,\n    NgbTimepickerModule,\n    NgbToastModule,\n    NgbTooltipModule,\n    NgbTypeaheadModule,\n];\nclass NgbModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModule, imports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule], exports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModule, imports: [NGB_MODULES, NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.2\", ngImport: i0, type: NgbModule, decorators: [{\n            type: NgModule,\n            args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordionBody, NgbAccordionButton, NgbAccordionCollapse, NgbAccordionConfig, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem, NgbAccordionModule, NgbAccordionToggle, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarEthiopian, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDateStructAdapter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nAmharic, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownButtonItem, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkBase, NgbNavLinkButton, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbProgressbarStacked, NgbRating, NgbRatingConfig, NgbRatingModule, NgbScrollSpy, NgbScrollSpyConfig, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu, NgbScrollSpyModule, NgbScrollSpyService, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };\n"],"x_google_ignoreList":[0]}
{"version":3,"file":"node_modules_carbon-components-angular_fesm2020_carbon-components-angular-placeholder_mjs.js","mappings":"sXAIA,MAAAA,EAAA,gBAIA,MAAMC,EACFC,cAIIC,KAAKC,iBAAmB,KAIxBD,KAAKE,iBAAmB,IAAIC,GAChC,CAIAC,yBAAyBC,EAAOC,GACxBA,EACAN,KAAKE,iBAAiBK,IAAID,EAAID,GAG9BL,KAAKC,iBAAmBI,CAEhC,CAIAG,gBAAgBC,EAAWC,EAAUJ,GACjC,OAAIA,EACKN,KAAKE,iBAAiBS,IAAIL,GAIxBN,KAAKE,iBAAiBU,IAAIN,GAAIE,gBAAgBC,EAAW,CAAEI,MAAOb,KAAKE,iBAAiBY,KAAMJ,kBAHjGK,QAAQC,MAAM,6BAA6BV,WAK9CN,KAAKC,iBAIHD,KAAKC,iBAAiBO,gBAAgBC,EAAW,CAAEI,MAAOb,KAAKC,iBAAiBgB,OAAQP,kBAH3FK,QAAQC,MAAM,uEAItB,CACAE,iBAAiBT,GACbA,EAAUU,SACd,CACAC,gBAAgBX,EAAWH,GACvB,OAAIA,IACSN,KAAKE,iBAAiBU,IAAIN,GAAIe,QAAQZ,EAAUa,UAAY,KAEhEtB,KAAKC,iBAAiBoB,QAAQZ,EAAUa,UAAY,EACjE,CACAC,kBAAkBjB,GACd,OAAIA,EACON,KAAKE,iBAAiBS,IAAIL,KAE5BN,KAAKC,gBAClB,CACAuB,cAAcC,EAASnB,GACnB,OAAIA,EACON,KAAKE,iBAAiBU,IAAIN,GAAImB,QAAQC,cAAcC,YAAYF,GAEpEzB,KAAKC,iBAAiBwB,QAAQC,cAAcC,YAAYF,EACnE,CACAG,cAAcH,EAASnB,GACnB,OAAIA,EACON,KAAKE,iBAAiBU,IAAIN,GAAImB,QAAQC,cAAcG,YAAYJ,GAEpEzB,KAAKC,iBAAiBwB,QAAQC,cAAcG,YAAYJ,EACnE,CACAK,WAAWL,EAASnB,GAChB,OAAIA,EACON,KAAKE,iBAAiBU,IAAIN,GAAImB,QAAQC,cAAcK,SAASN,GAEjEzB,KAAKC,iBAAiBwB,QAAQC,cAAcK,SAASN,EAChE,EAEJ3B,EAAmBkC,UAAI,SAAAC,GAAA,WAAAA,GAAwFnC,EAAkB,EACjIA,EAAmBoC,WADkFC,+BAAE,CAAAC,MACYtC,EAAkBuC,QAAlBvC,EAAkBkC,YAerI,MAAMM,EAIFvC,YAAYwC,GACRvC,KAAKuC,mBAAqBA,CAC9B,CAIAC,WAEIxC,KAAKuC,mBAAmBnC,yBAAyBJ,KAAKC,iBAC1D,EAmBJ,SAASwC,EAAqCC,GAC1C,OAAOA,GAAiB,IAAI5C,CAChC,CAnBAwC,EAAYN,UAAI,SAAAC,GAAA,WAAAA,GAAwFK,GA/BHH,8BA+BgCrC,GAAkB,EACvJwC,EAAYK,UAhCyFR,8BAAE,CAAAS,KAgCXN,EAAWO,UAAA,0CAAAC,UAAA,SAAAC,EAAAC,GAA0M,GAA1M,EAAAD,GAhCFZ,wBAAEtC,EAAA,EAgC0LoD,oBAAgB,EAAAF,EAAA,KAAAG,EAhC5Mf,2BAAEe,EAAFf,6BAAEa,EAAA/C,iBAAAiD,EAAAC,MAAA,GAAAC,OAAA,CAAA9C,GAAA,MAAA+C,MAAA,EAAAC,KAAA,EAAAC,OAAA,qBAAAC,SAAA,SAAAT,EAAAC,GAAA,EAAAD,GAAFZ,sBAAE,eAgC8Q,EAAAsB,cAAA,IAoBrX,MAAMC,EAA+B,CACjCC,QAAS7D,EACT8D,KAAM,CAAC,CAAC,IAAIC,WAAY,IAAIC,WAAYhE,IACxCiE,WAAYtB,GAEhB,MAAMuB,GAENA,EAAkBhC,UAAI,SAAAC,GAAA,WAAAA,GAAwF+B,EAAiB,EAC/HA,EAAkBC,UA5DmF9B,6BAAE,CAAAS,KA4DQoB,IAC/GA,EAAkBE,UA7DmF/B,6BAAE,CAAAgC,UA6DsC,CAACT,GAA6BU,QAAA,CAAYC","names":["_c0","PlaceholderService","constructor","this","viewContainerRef","viewContainerMap","Map","registerViewContainerRef","vcRef","id","set","createComponent","component","injector","has","get","index","size","console","error","length","destroyComponent","destroy","hasComponentRef","indexOf","hostView","hasPlaceholderRef","appendElement","element","nativeElement","appendChild","removeElement","removeChild","hasElement","contains","ɵfac","__ngFactoryType__","ɵprov","i0","token","factory","Placeholder","placeholderService","ngOnInit","PLACEHOLDER_SERVICE_PROVIDER_FACTORY","parentService","ɵcmp","type","selectors","viewQuery","rf","ctx","ViewContainerRef","_t","first","inputs","decls","vars","consts","template","encapsulation","PLACEHOLDER_SERVICE_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","PlaceholderModule","ɵmod","ɵinj","providers","imports","CommonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-placeholder.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, ViewContainerRef, Component, Input, ViewChild, Optional, SkipSelf, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Singleton service used to register the container for out-of-flow components to insert into.\n * Also used to insert/remove components from that view.\n */\nclass PlaceholderService {\n    constructor() {\n        /**\n         * Main `ViewContainerRef` to insert components into\n         */\n        this.viewContainerRef = null;\n        /**\n         * Map of id's to secondary `ViewContainerRef`s\n         */\n        this.viewContainerMap = new Map();\n    }\n    /**\n     * Used by `Placeholder` to register view-container reference.\n     */\n    registerViewContainerRef(vcRef, id) {\n        if (id) {\n            this.viewContainerMap.set(id, vcRef);\n        }\n        else {\n            this.viewContainerRef = vcRef;\n        }\n    }\n    /**\n     * Creates and returns component in the view.\n     */\n    createComponent(component, injector, id) {\n        if (id) {\n            if (!this.viewContainerMap.has(id)) {\n                console.error(`No view container with id ${id} found`);\n                return;\n            }\n            return this.viewContainerMap.get(id).createComponent(component, { index: this.viewContainerMap.size, injector });\n        }\n        if (!this.viewContainerRef) {\n            console.error(\"No view container defined! Likely due to a missing `cds-placeholder`\");\n            return;\n        }\n        return this.viewContainerRef.createComponent(component, { index: this.viewContainerRef.length, injector });\n    }\n    destroyComponent(component) {\n        component.destroy();\n    }\n    hasComponentRef(component, id) {\n        if (id) {\n            return !(this.viewContainerMap.get(id).indexOf(component.hostView) < 0);\n        }\n        return !(this.viewContainerRef.indexOf(component.hostView) < 0);\n    }\n    hasPlaceholderRef(id) {\n        if (id) {\n            return this.viewContainerMap.has(id);\n        }\n        return !!this.viewContainerRef;\n    }\n    appendElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.appendChild(element);\n        }\n        return this.viewContainerRef.element.nativeElement.appendChild(element);\n    }\n    removeElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.removeChild(element);\n        }\n        return this.viewContainerRef.element.nativeElement.removeChild(element);\n    }\n    hasElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.contains(element);\n        }\n        return this.viewContainerRef.element.nativeElement.contains(element);\n    }\n}\nPlaceholderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPlaceholderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow\n * in your application *requires* this component (`cds-placeholder`).\n * It would generally be placed near the end of your root app component template\n * (app.component.ts or app.component.html) as:\n *\n * ```\n * <cds-placeholder></cds-placeholder>\n * ```\n */\nclass Placeholder {\n    /**\n     * Creates an instance of `Placeholder`.\n     */\n    constructor(placeholderService) {\n        this.placeholderService = placeholderService;\n    }\n    /**\n     * Registers the components view with `PlaceholderService`\n     */\n    ngOnInit() {\n        // TODO use `id` to register with the placeholderService\n        this.placeholderService.registerViewContainerRef(this.viewContainerRef);\n    }\n}\nPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Placeholder, deps: [{ token: PlaceholderService }], target: i0.ɵɵFactoryTarget.Component });\nPlaceholder.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: Placeholder, selector: \"cds-placeholder, ibm-placeholder\", inputs: { id: \"id\" }, viewQueries: [{ propertyName: \"viewContainerRef\", first: true, predicate: [\"placeholder\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `<div #placeholder></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Placeholder, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-placeholder, ibm-placeholder\",\n                    template: `<div #placeholder></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: PlaceholderService }]; }, propDecorators: { id: [{\n                type: Input\n            }], viewContainerRef: [{\n                type: ViewChild,\n                args: [\"placeholder\", { read: ViewContainerRef, static: true }]\n            }] } });\n\n// modules\n// either provides a new instance of PlaceholderService, or returns the parent\nfunction PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService) {\n    return parentService || new PlaceholderService();\n}\n// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally\nconst PLACEHOLDER_SERVICE_PROVIDER = {\n    provide: PlaceholderService,\n    deps: [[new Optional(), new SkipSelf(), PlaceholderService]],\n    useFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY\n};\nclass PlaceholderModule {\n}\nPlaceholderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlaceholderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderModule, declarations: [Placeholder], imports: [CommonModule], exports: [Placeholder] });\nPlaceholderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderModule, providers: [PLACEHOLDER_SERVICE_PROVIDER], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PlaceholderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [Placeholder],\n                    exports: [Placeholder],\n                    providers: [PLACEHOLDER_SERVICE_PROVIDER],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PLACEHOLDER_SERVICE_PROVIDER, PLACEHOLDER_SERVICE_PROVIDER_FACTORY, Placeholder, PlaceholderModule, PlaceholderService };\n"],"x_google_ignoreList":[0]}
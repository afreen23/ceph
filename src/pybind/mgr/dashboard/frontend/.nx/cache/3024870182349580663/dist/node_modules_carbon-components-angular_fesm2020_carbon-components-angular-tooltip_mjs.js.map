{"version":3,"file":"node_modules_carbon-components-angular_fesm2020_carbon-components-angular-tooltip_mjs.js","mappings":"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","names":["_c0","_c1","_c2","a0","$implicit","Tooltip_span_3_ng_container_1_ng_container_2_Template","rf","ctx","i0","ctx_r0","description","Tooltip_span_3_ng_container_1_3_ng_template_0_Template","Tooltip_span_3_ng_container_1_3_Template","templateContext","Tooltip_span_3_ng_container_1_span_4_Template","Tooltip_span_3_ng_container_1_span_5_Template","Tooltip_span_3_ng_container_1_Template","isTemplate","autoAlign","Tooltip_span_3_Template","id","isOpen","disabled","TooltipDefinition_span_2_ng_container_2_Template","TooltipDefinition_span_2_3_ng_template_0_Template","TooltipDefinition_span_2_3_Template","TooltipDefinition_span_2_span_4_Template","TooltipDefinition_span_2_span_5_Template","TooltipDefinition_span_2_Template","DEFAULT_TOOLTIP_CONFIG","align","caret","dropShadow","highContrast","enterDelayMs","leaveDelayMs","Tooltip","PopoverContainer","constructor","elementRef","ngZone","renderer","changeDetectorRef","super","this","tooltipClass","tooltipCount","mouseenter","event","clearTimeout","timeoutId","setTimeout","handleChange","mouseleave","hostkeys","open","key","stopPropagation","handleFocus","handleFocusOut","value","TemplateRef","ngOnChanges","changes","originalState","firstChange","currentValue","detectChanges","popoverContentRef","nativeElement","querySelector","setAttribute","caretRef","ngAfterContentChecked","wrapper","buttonElement","getAttribute","ɵfac","__ngFactoryType__","ɵcmp","type","selectors","viewQuery","_t","first","hostVars","hostBindings","$event","inputs","features","ngContentSelectors","decls","vars","consts","template","dependencies","i1","encapsulation","changeDetection","TooltipDefinition","onBlur","onClick","TooltipModule","ɵmod","ɵinj","imports","CommonModule","PopoverModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-tooltip.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, HostBinding, Input, ViewChild, HostListener, NgModule } from '@angular/core';\nimport { PopoverContainer, PopoverModule } from 'carbon-components-angular/popover';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Default tooltip configuration for components to populate missing interface attributes\n */\nconst DEFAULT_TOOLTIP_CONFIG = {\n    align: \"bottom\",\n    caret: true,\n    dropShadow: true,\n    highContrast: true,\n    isOpen: false,\n    enterDelayMs: 100,\n    leaveDelayMs: 300\n};\n\n/**\n * Get started with importing the module:\n *\n * ```typescript\n * import { TooltipModule } from 'carbon-components-angular';\n * ```\n *\n * [See demo](../../?path=/story/components-tooltip--basic)\n */\nclass Tooltip extends PopoverContainer {\n    constructor(elementRef, ngZone, renderer, changeDetectorRef) {\n        super(elementRef, ngZone, renderer, changeDetectorRef);\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.changeDetectorRef = changeDetectorRef;\n        this.tooltipClass = true;\n        this.id = `tooltip-${Tooltip.tooltipCount++}`;\n        /**\n         * Set delay before tooltip is shown\n         */\n        this.enterDelayMs = 100;\n        /**\n         * Set delay when tooltip disappears\n         */\n        this.leaveDelayMs = 300;\n        /**\n         * Prevent tooltip from showing, used by icon button\n         */\n        this.disabled = false;\n        this.highContrast = true;\n        this.dropShadow = false;\n    }\n    mouseenter(event) {\n        // If a mouseleave is triggered before the tooltip is displayed (before setTimeout of mouseenter completes)\n        // we trigger the mouseleave only avoiding having to unecessary show the tooltip\n        clearTimeout(this.timeoutId);\n        this.timeoutId = setTimeout(() => {\n            this.handleChange(true, event);\n        }, this.enterDelayMs);\n    }\n    mouseleave(event) {\n        // If a mouseleave is triggered before the tooltip is displayed (before setTimeout of mouseenter completes)\n        // we trigger the mouseleave only avoiding having to unecessary show the tooltip\n        clearTimeout(this.timeoutId);\n        this.timeoutId = setTimeout(() => {\n            this.handleChange(false, event);\n        }, this.leaveDelayMs);\n    }\n    hostkeys(event) {\n        if (open && event.key === \"Escape\") {\n            event.stopPropagation();\n            this.handleChange(false, event);\n        }\n    }\n    // We are not focusing on entire popover, only the trigger\n    handleFocus(event) {\n        this.handleChange(true, event);\n    }\n    handleFocusOut(event) {\n        this.handleChange(false, event);\n    }\n    isTemplate(value) {\n        return value instanceof TemplateRef;\n    }\n    /**\n     * Close the popover and reopen it with updated values without emitting an event\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        // Close and reopen the popover, handle alignment/programmatic open/close\n        const originalState = this.isOpen;\n        this.handleChange(false);\n        // Ignore first change since content is not initialized\n        if ((changes.autoAlign && !changes.autoAlign.firstChange)\n            || (changes.disabled && !changes.disabled.firstChange && !changes.disabled.currentValue)) {\n            /**\n             * When `disabled` is `true`, popover content node is removed. So when re-enabling `disabled`,\n             * we manually update view so querySelector can detect the popover content node.\n             * Otherwise, the position of the popover will be incorrect when autoAlign is enabled.\n             */\n            this.changeDetectorRef.detectChanges();\n            // Reset the inline styles\n            this.popoverContentRef = this.elementRef.nativeElement.querySelector(\".cds--popover-content\");\n            this.popoverContentRef.setAttribute(\"style\", \"\");\n            this.caretRef = this.elementRef.nativeElement.querySelector(\"span.cds--popover-caret\");\n        }\n        this.handleChange(originalState);\n    }\n    /**\n     * Check for any changes in the projected content & apply accessibility attribute if needed\n     */\n    ngAfterContentChecked() {\n        if (this.wrapper) {\n            const buttonElement = this.wrapper.nativeElement.querySelector(\"button\");\n            if (buttonElement && !buttonElement.getAttribute(\"aria-labelledby\")) {\n                buttonElement.setAttribute(\"aria-labelledby\", this.id);\n            }\n        }\n    }\n}\nTooltip.tooltipCount = 0;\nTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Tooltip, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTooltip.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: Tooltip, selector: \"cds-tooltip, ibm-tooltip\", inputs: { id: \"id\", enterDelayMs: \"enterDelayMs\", leaveDelayMs: \"leaveDelayMs\", disabled: \"disabled\", description: \"description\", templateContext: \"templateContext\" }, host: { listeners: { \"mouseenter\": \"mouseenter($event)\", \"mouseleave\": \"mouseleave($event)\", \"keyup\": \"hostkeys($event)\", \"focusin\": \"handleFocus($event)\", \"focusout\": \"handleFocusOut($event)\" }, properties: { \"class.cds--tooltip\": \"this.tooltipClass\" } }, viewQueries: [{ propertyName: \"wrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n\t\t<span #contentWrapper>\n\t\t\t<ng-content></ng-content>\n\t\t</span>\n\t\t<span\n\t\t\t*ngIf=\"description\"\n\t\t\tclass=\"cds--popover\"\n\t\t\t[id]=\"id\"\n\t\t\t[attr.aria-hidden]=\"!isOpen\"\n\t\t\trole=\"tooltip\">\n\t\t\t<ng-container *ngIf=\"!disabled\">\n\t\t\t\t<span class=\"cds--popover-content cds--tooltip-content\">\n\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(description)\">{{description}}</ng-container>\n\t\t\t\t\t<ng-template *ngIf=\"isTemplate(description)\" [ngTemplateOutlet]=\"description\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\"></ng-template>\n\t\t\t\t\t<span *ngIf=\"autoAlign\" class=\"cds--popover-caret cds--popover--auto-align\"></span>\n\t\t\t\t</span>\n\t\t\t\t<span *ngIf=\"!autoAlign\" class=\"cds--popover-caret\"></span>\n\t\t\t</ng-container>\n\t\t</span>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Tooltip, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-tooltip, ibm-tooltip\",\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n\t\t<span #contentWrapper>\n\t\t\t<ng-content></ng-content>\n\t\t</span>\n\t\t<span\n\t\t\t*ngIf=\"description\"\n\t\t\tclass=\"cds--popover\"\n\t\t\t[id]=\"id\"\n\t\t\t[attr.aria-hidden]=\"!isOpen\"\n\t\t\trole=\"tooltip\">\n\t\t\t<ng-container *ngIf=\"!disabled\">\n\t\t\t\t<span class=\"cds--popover-content cds--tooltip-content\">\n\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(description)\">{{description}}</ng-container>\n\t\t\t\t\t<ng-template *ngIf=\"isTemplate(description)\" [ngTemplateOutlet]=\"description\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\"></ng-template>\n\t\t\t\t\t<span *ngIf=\"autoAlign\" class=\"cds--popover-caret cds--popover--auto-align\"></span>\n\t\t\t\t</span>\n\t\t\t\t<span *ngIf=\"!autoAlign\" class=\"cds--popover-caret\"></span>\n\t\t\t</ng-container>\n\t\t</span>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { tooltipClass: [{\n                type: HostBinding,\n                args: [\"class.cds--tooltip\"]\n            }], id: [{\n                type: Input\n            }], enterDelayMs: [{\n                type: Input\n            }], leaveDelayMs: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], description: [{\n                type: Input\n            }], templateContext: [{\n                type: Input\n            }], wrapper: [{\n                type: ViewChild,\n                args: [\"contentWrapper\"]\n            }], mouseenter: [{\n                type: HostListener,\n                args: [\"mouseenter\", [\"$event\"]]\n            }], mouseleave: [{\n                type: HostListener,\n                args: [\"mouseleave\", [\"$event\"]]\n            }], hostkeys: [{\n                type: HostListener,\n                args: [\"keyup\", [\"$event\"]]\n            }], handleFocus: [{\n                type: HostListener,\n                args: [\"focusin\", [\"$event\"]]\n            }], handleFocusOut: [{\n                type: HostListener,\n                args: [\"focusout\", [\"$event\"]]\n            }] } });\n\n/**\n * Get started with importing the module:\n *\n * ```typescript\n * import { TooltipModule } from 'carbon-components-angular';\n * ```\n *\n * [See demo](../../?path=/story/components-tooltip-definition--basic)\n */\nclass TooltipDefinition extends PopoverContainer {\n    constructor(elementRef, ngZone, renderer, changeDetectorRef) {\n        super(elementRef, ngZone, renderer, changeDetectorRef);\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.changeDetectorRef = changeDetectorRef;\n        this.id = `tooltip-definition-${TooltipDefinition.tooltipCount++}`;\n        this.highContrast = true;\n        this.dropShadow = false;\n    }\n    onBlur(event) {\n        this.handleChange(false, event);\n    }\n    onClick(event) {\n        this.handleChange(!this.isOpen, event);\n    }\n    hostkeys(event) {\n        if (this.isOpen && event.key === \"Escape\") {\n            event.stopPropagation();\n            this.handleChange(false, event);\n        }\n    }\n    mouseleave(event) {\n        this.handleChange(false, event);\n    }\n    isTemplate(value) {\n        return value instanceof TemplateRef;\n    }\n}\nTooltipDefinition.tooltipCount = 0;\nTooltipDefinition.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipDefinition, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTooltipDefinition.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: TooltipDefinition, selector: \"cds-tooltip-definition, ibm-tooltip-definition\", inputs: { id: \"id\", description: \"description\", templateContext: \"templateContext\" }, host: { listeners: { \"keyup\": \"hostkeys($event)\", \"mouseleave\": \"mouseleave($event)\" } }, usesInheritance: true, ngImport: i0, template: `\n\t\t<button\n\t\t\tclass=\"cds--definition-term\"\n\t\t\t[attr.aria-controls]=\"id\"\n\t\t\t[attr.aria-expanded]=\"isOpen\"\n\t\t\t(blur)=\"onBlur($event)\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\ttype=\"button\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t\t<span\n\t\t\t*ngIf=\"description\"\n\t\t\tclass=\"cds--popover\"\n\t\t\t[id]=\"id\"\n\t\t\t[attr.aria-hidden]=\"isOpen\"\n\t\t\trole=\"tooltip\">\n\t\t\t<span class=\"cds--popover-content cds--definition-tooltip\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(description)\">{{description}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(description)\" [ngTemplateOutlet]=\"description\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\"></ng-template>\n\t\t\t\t<span *ngIf=\"autoAlign\" class=\"cds--popover-caret cds--popover--auto-align\"></span>\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!autoAlign\" class=\"cds--popover-caret\"></span>\n\t\t</span>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipDefinition, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-tooltip-definition, ibm-tooltip-definition\",\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n\t\t<button\n\t\t\tclass=\"cds--definition-term\"\n\t\t\t[attr.aria-controls]=\"id\"\n\t\t\t[attr.aria-expanded]=\"isOpen\"\n\t\t\t(blur)=\"onBlur($event)\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\ttype=\"button\">\n\t\t\t<ng-content></ng-content>\n\t\t</button>\n\t\t<span\n\t\t\t*ngIf=\"description\"\n\t\t\tclass=\"cds--popover\"\n\t\t\t[id]=\"id\"\n\t\t\t[attr.aria-hidden]=\"isOpen\"\n\t\t\trole=\"tooltip\">\n\t\t\t<span class=\"cds--popover-content cds--definition-tooltip\">\n\t\t\t\t<ng-container *ngIf=\"!isTemplate(description)\">{{description}}</ng-container>\n\t\t\t\t<ng-template *ngIf=\"isTemplate(description)\" [ngTemplateOutlet]=\"description\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\"></ng-template>\n\t\t\t\t<span *ngIf=\"autoAlign\" class=\"cds--popover-caret cds--popover--auto-align\"></span>\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!autoAlign\" class=\"cds--popover-caret\"></span>\n\t\t</span>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { id: [{\n                type: Input\n            }], description: [{\n                type: Input\n            }], templateContext: [{\n                type: Input\n            }], hostkeys: [{\n                type: HostListener,\n                args: [\"keyup\", [\"$event\"]]\n            }], mouseleave: [{\n                type: HostListener,\n                args: [\"mouseleave\", [\"$event\"]]\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipModule, declarations: [Tooltip,\n        TooltipDefinition], imports: [CommonModule, PopoverModule], exports: [Tooltip,\n        TooltipDefinition] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipModule, imports: [CommonModule, PopoverModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        Tooltip,\n                        TooltipDefinition\n                    ],\n                    exports: [\n                        Tooltip,\n                        TooltipDefinition\n                    ],\n                    imports: [CommonModule, PopoverModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLTIP_CONFIG, Tooltip, TooltipDefinition, TooltipModule };\n"],"x_google_ignoreList":[0]}
{"version":3,"file":"node_modules_carbon-components-angular_fesm2020_carbon-components-angular-timepicker-select_mjs.js","mappings":"+TASA,SAAAA,EAAAC,EAAAC,GAsC6G,GAtC7G,EAAAD,IA8BmGE,2BAAE,aAAFA,mBAAE,GAAFA,4BAQU,EAAAF,EAAA,OAAAG,EARVD,oDAAE,MAAAC,EAAAC,IAAFF,sDAAEC,EAAAE,MAQA,WAAAC,EAAAN,EAAAC,GAAA,EAAAD,IARFE,mDAAE,WAmBR,CAxC7F,MAAMK,UAAyBC,SAC3BC,cACIC,SAASC,WACTC,KAAKC,YAAa,EAClBD,KAAKE,kBAAmB,EACxBF,KAAKR,GAAK,qBAAqBG,EAAiBQ,cAIhDH,KAAKI,UAAW,EAKhBJ,KAAKK,MAAQ,OACbL,KAAKM,yBAA2BN,KAAKI,QACzC,CACA,yBAAIG,GACA,MAAsB,UAAfP,KAAKK,KAChB,EAEJV,EAAiBa,UAAI,UAAAC,EAAA,gBAAAC,GAAA,OAAAD,MAA8EnB,kCAAUK,KAAgBe,GAAhBf,EAAgB,GAAxG,GACrBA,EAAiBgB,UADkFrB,8BAAE,CAAAsB,KACJjB,EAAgBkB,UAAA,sDAAAC,SAAA,EAAAC,aAAA,SAAA3B,EAAAC,GAAA,EAAAD,GADdE,wBAAE,cAAAD,EAAAY,WAAFX,CACc,2BAAAD,EAAAa,iBADdZ,CACc,gBAAAD,EAAAiB,yBADdhB,CACc,qBAAAD,EAAAkB,sBAAA,EAAAS,OAAA,CAAAxB,GAAA,KAAAyB,UAAA,YAAAb,SAAA,WAAAC,MAAA,QAAAZ,MAAA,SAAAyB,SAAA,CADd5B,+BACwa,CACngB,CACI6B,QAASC,oBACTC,YAAa1B,EACb2B,OAAO,KALgFhC,wCAAEiC,mBA9BrG,MA8BqGC,MAAA,EAAAC,KAAA,EAAAC,OAAA,yUAAAC,SAAA,SAAAvC,EAAAC,GAAA,KAAAD,EAAA,OAAAwC,EAAFtC,oFAAE,EAAAH,EAAA,eAAFG,2BAAE,UAAFA,CASzD,gBATyDA,uBAAE,kBAAAuC,GAAFvC,iCAAEsC,GAAFtC,wBAerFD,EAAAyC,SAAAD,GAAgB,GAfqEvC,yBAAE,GAAFA,kDAAE,EAAAI,EAAA,aAAFJ,0BAoB3F,GAAAF,IApB2FE,uBAAE,QAAAD,EAAAe,UAAAf,EAAAI,OAAFH,sBAAE,GAAFA,uBAAE,WAAAD,EAAA0C,UAAFzC,wBAAE,KAAAD,EAAAG,GAAFF,CAAE,aAAAD,EAAA4B,WAAF3B,sBAAE,GAAFA,uBAAE,QAAAD,EAAAe,UAmB3C,EAAA4B,aAAA,CAEIC,OAAoGC,iBAAgBC,cAAA,IAoDlL,MAAMC,GAENA,EAAuB5B,UAAI,SAAAE,GAAA,WAAAA,GAAwF0B,EAAsB,EACzIA,EAAuBC,UA5E4E/C,6BAAE,CAAAsB,KA4EewB,IAGpHA,EAAuBE,UA/E4EhD,6BAAE,CAAAiD,QAAA,CA+EiDC,eAC9IC,eACAC","names":["TimePickerSelect_label_0_Template","rf","ctx","i0","ctx_r1","id","label","TimePickerSelect__svg_svg_5_Template","TimePickerSelect","Select","constructor","super","arguments","this","timeSelect","timePickerSelect","selectCount","skeleton","theme","timePickerSelectSkeleton","timePickerSelectLight","ɵfac","ɵTimePickerSelect_BaseFactory","__ngFactoryType__","ɵcmp","type","selectors","hostVars","hostBindings","inputs","ariaLabel","features","provide","NG_VALUE_ACCESSOR","useExisting","multi","ngContentSelectors","decls","vars","consts","template","_r1","$event","onChange","disabled","dependencies","i1","i2","encapsulation","TimePickerSelectModule","ɵmod","ɵinj","imports","SelectModule","CommonModule","IconModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-timepicker-select.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, HostBinding, Input, NgModule } from '@angular/core';\nimport { Select, SelectModule } from 'carbon-components-angular/select';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'carbon-components-angular/icon';\nimport { IconModule } from 'carbon-components-angular/icon';\n\n/**\n * Get started with importing the module:\n *\n * ```typescript\n * import { TimePickerSelectModule } from 'carbon-components-angular';\n * ```\n *\n * [See demo](../../?path=/story/components-time-picker-select--simple)\n */\nclass TimePickerSelect extends Select {\n    constructor() {\n        super(...arguments);\n        this.timeSelect = true;\n        this.timePickerSelect = true;\n        this.id = `timepicker-select-${TimePickerSelect.selectCount++}`;\n        /**\n         * Set to true for a loading select.\n         */\n        this.skeleton = false;\n        /**\n         * @deprecated since v5 - Use `cdsLayer` directive instead\n         * `light` or `dark` select theme\n         */\n        this.theme = \"dark\";\n        this.timePickerSelectSkeleton = this.skeleton;\n    }\n    get timePickerSelectLight() {\n        return this.theme === \"light\";\n    }\n}\nTimePickerSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTimePickerSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: TimePickerSelect, selector: \"cds-timepicker-select, ibm-timepicker-select\", inputs: { id: \"id\", ariaLabel: \"ariaLabel\", skeleton: \"skeleton\", theme: \"theme\", label: \"label\" }, host: { properties: { \"class.cds--select\": \"this.timeSelect\", \"class.cds--time-picker__select\": \"this.timePickerSelect\", \"class.cds--skeleton\": \"this.timePickerSelectSkeleton\", \"class.cds--select--light\": \"this.timePickerSelectLight\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: TimePickerSelect,\n            multi: true\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n\t\t<label *ngIf=\"!skeleton && label\" [attr.for]=\"id\" class=\"cds--label cds--visually-hidden\">{{label}}</label>\n\t\t<div class=\"cds--select-input__wrapper\">\n\t\t\t<select\n\t\t\t\t#select\n\t\t\t\t[attr.id]=\"id\"\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t(change)=\"onChange($event)\"\n\t\t\t\tclass=\"cds--select-input\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</select>\n\t\t\t<svg cdsIcon=\"chevron--down\" size=\"16\" *ngIf=\"!skeleton\" class=\"cds--select__arrow\"></svg>\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelect, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-timepicker-select, ibm-timepicker-select\",\n                    template: `\n\t\t<label *ngIf=\"!skeleton && label\" [attr.for]=\"id\" class=\"cds--label cds--visually-hidden\">{{label}}</label>\n\t\t<div class=\"cds--select-input__wrapper\">\n\t\t\t<select\n\t\t\t\t#select\n\t\t\t\t[attr.id]=\"id\"\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t(change)=\"onChange($event)\"\n\t\t\t\tclass=\"cds--select-input\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</select>\n\t\t\t<svg cdsIcon=\"chevron--down\" size=\"16\" *ngIf=\"!skeleton\" class=\"cds--select__arrow\"></svg>\n\t\t</div>\n\t`,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: TimePickerSelect,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], propDecorators: { timeSelect: [{\n                type: HostBinding,\n                args: [\"class.cds--select\"]\n            }], timePickerSelect: [{\n                type: HostBinding,\n                args: [\"class.cds--time-picker__select\"]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], skeleton: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], timePickerSelectSkeleton: [{\n                type: HostBinding,\n                args: [\"class.cds--skeleton\"]\n            }], timePickerSelectLight: [{\n                type: HostBinding,\n                args: [\"class.cds--select--light\"]\n            }] } });\n\nclass TimePickerSelectModule {\n}\nTimePickerSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTimePickerSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelectModule, declarations: [TimePickerSelect], imports: [SelectModule,\n        CommonModule,\n        IconModule], exports: [TimePickerSelect] });\nTimePickerSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelectModule, imports: [SelectModule,\n        CommonModule,\n        IconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TimePickerSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TimePickerSelect\n                    ],\n                    exports: [\n                        TimePickerSelect\n                    ],\n                    imports: [\n                        SelectModule,\n                        CommonModule,\n                        IconModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimePickerSelect, TimePickerSelectModule };\n"],"x_google_ignoreList":[0]}
{"version":3,"file":"node_modules_chart_js_dist_chart_js.js","mappings":"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","names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","range","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpack","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","hexParse","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","_getKeyResolver","_splitKey","parts","split","part","push","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","getNumberFormat","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","applyAnimationsDefaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","setRenderOpts","translation","textAlign","textBaseline","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","proxy","prefix","readKey","needsSubResolver","createSubResolver","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","isScriptable","_resolveScriptable","getValue","Error","join","add","delete","_resolveArray","isIndexable","arr","filter","resolver","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","monotoneAdjust","alphaK","betaK","tauK","squaredMagnitude","monotoneCompute","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","getCanvasPosition","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","getContainerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getStyle","el","getPropertyValue","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","$shared","$animations","_createAnimations","awaitAll","anim","all","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","getStackKey","indexScale","valueScale","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isExtensible","listenArrayEvents","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","toClip","disabled","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","createDataContext","dataIndex","raw","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","borderProps","horizontal","enableBorderRadius","parseEdge","swap","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","computeFlexCategoryTraits","percent","chunk","computeFitCategoryTraits","thickness","stackIndex","rects","BubbleController","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","getRatioAndOffset","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","minDistance","evaluationFunc","getCenterPoint","getNearestItems","getNearestRadialItems","getProps","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","buildStacks","wrap","stackWeight","placed","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","buildLayoutBoxes","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","handleMaxPadding","updatePos","change","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","native","addListener","DomPlatform","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","_tickSize","maxScale","maxChart","_maxLength","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","ceil","calculateSpacing","evenMajorSpacing","getEvenSpacing","factors","_factorize","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","minmax","keepZero","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","_int16Range","getDecimalForPixel","getBaseValue","createTickContext","createScaleContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","localIds","createDescriptors","getOpts","pluginOpts","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","retrieveAxisFromDatasets","boundDs","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","hasFunction","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","timeout","clearTimeout","setTimeout","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","toRadiusCorners","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","clipArc","angleMargin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","getLineMethod","stepped","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","strokePathWithCache","path","_path","strokePathDirect","segmentMethod","LineElement","_points","_segments","_pointsUpdated","_computeSegments","findStartAndEnd","solidSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","hasRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","containsColorsDefinition","containsDefaultColorsDefenitions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","lttbDecimation","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","_pointsFromSegments","linePoints","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","fillOption","decodeTargetIndex","firstCh","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","_buildStackLine","sourcePoints","getLinesBelow","below","computeBoundary","computeCircularBoundary","_getTargetValue","computeLinearBoundary","_getTargetPixel","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","calculateItemWidth","legendItemText","calculateItemHeight","fontLineHeight","calculateLegendItemHeight","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","onLeave","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","createTitle","titleBlock","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","doesNotFitWithAlign","caret","caretSize","caretPadding","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","createTooltipContext","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","MIN_SPACING","almostWhole","rounded","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","drawRadiusLine","gridLineOpts","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@kurkle/color/dist/color.esm.js","./node_modules/chart.js/dist/chunks/helpers.segment.js","./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n"],"x_google_ignoreList":[0,1,2]}
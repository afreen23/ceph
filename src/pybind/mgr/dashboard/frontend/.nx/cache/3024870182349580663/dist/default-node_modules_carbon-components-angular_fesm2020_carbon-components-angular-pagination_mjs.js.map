{"version":3,"file":"default-node_modules_carbon-components-angular_fesm2020_carbon-components-angular-pagination_mjs.js","mappings":"4bAeyD,MAAAA,EAAAC,KAAA,gBAAAA,IAAAC,EAAAD,KAAA,cAAAA,IAAAE,GAAAF,EAAAG,EAAAC,MAAAC,MAAAL,EAAAM,IAAAH,EAAAI,MAAAH,IAAAI,GAAAR,EAAAG,MAAAE,MAAAL,EAAAM,IAAAH,IAAAM,EAAAT,KAAA,oCAAAA,IAAAU,EAAAV,KAAAW,KAAAX,IAAA,SAAAY,EAAAC,EAAAC,GAAA,EAAAD,IA4LoCE,2BAAE,WAAFA,sBAAE,QAAFA,CASnC,QATmCA,CAUnC,SAVmCA,2BAYrF,UAAAC,EAAAH,EAAAC,GAoBO,GApBP,EAAAD,IAZqFE,2BAAE,eAAFA,mBAAE,GAAFA,4BAgC9E,EAAAF,EAAA,OAAAI,EAAAH,EAAAI,UAhC8EH,uBAAE,QAAAE,GAAFF,uDAAE,IAAAE,EAAA,IAgCzF,WAAAE,EAAAN,EAAAC,GAAA,KAAAD,EAAA,OAAAO,EAhCuFL,mEAAE,GAAFA,2BAAE,aAAFA,mBAAE,GAAFA,mBAAE,WAAFA,sDAAE,WAAFA,CAqBtC,eArBsCA,6BAAE,yBAAAM,GAAFN,0BAAEK,GAAA,MAAAE,EAAFP,0BAAE,GAAFA,sCAAEO,EAAAC,aAAAF,KAAAC,EAAAC,aAAAF,GAAFN,wBAAEM,EAAA,GAAFN,uBAAE,EAAAC,EAAA,iBAAFD,8EAAE,YAAFA,mBAAE,WAAFA,8DAAE,MAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,+CAAE,MAAAO,EAAAE,sBAAFT,uDAAE,IAAFA,wBAAE,IAAAO,EAAAG,iBAAAC,SAAA,KAAFX,sBAAE,GAAFA,wBAAE,wBAAAO,EAAAK,mBAAFZ,+CAAE,KAAAO,EAAAE,sBAAFT,6BAAE,UAAAO,EAAAC,cAAFR,uBAAE,WAAAO,EAAAK,mBAAFZ,+CAAE,UAAAO,EAAAM,qBAAFb,gDAAE,YAAFA,wBAAE,KAAAO,EAAAO,gBAAAH,SAAA,WAAAI,EAAAjB,EAAAC,GA8CrF,GA9CqF,EAAAD,IAAFE,2BAAE,aAAFA,mBAAE,GAAFA,mBAAE,iBAAFA,mBAAE,WAAFA,4BA8CnF,EAAAF,EAAA,OAAAS,EA9CmFP,0BAAE,GAAFA,uBAAE,UAAFA,4BAAE,EAAAd,EAAAqB,EAAAS,cAAA,SAAFhB,uDAAE,IAAFA,wBAAE,IAAFA,wBAAE,IAAAO,EAAAU,cAAAN,QAAFX,4BAAE,EAAAb,EAAAoB,EAAAW,eAAAX,EAAAY,aAAAZ,EAAAa,mBAAA,IA8C5F,WAAAC,EAAAvB,EAAAC,GAGO,GAHP,EAAAD,IA9C0FE,2BAAE,aAAFA,mBAAE,GAAFA,mBAAE,iBAAFA,mBAAE,WAAFA,4BAiDnF,EAAAF,EAAA,OAAAS,EAjDmFP,0BAAE,GAAFA,uBAAE,UAAFA,4BAAE,EAAAd,EAAAqB,EAAAS,cAAA,SAAFhB,uDAAE,IAAFA,wBAAE,IAAFA,wBAAE,IAAAO,EAAAe,eAAAX,QAAFX,4BAAE,EAAAb,EAAAoB,EAAAW,eAAAX,EAAAY,aAAAZ,EAAAa,mBAAA,IAiD5F,WAAAG,EAAAzB,EAAAC,GAGO,GAHP,EAAAD,IAjD0FE,2BAAE,aAAFA,mBAAE,GAAFA,mBAAE,iBAAFA,mBAAE,WAAFA,4BAoDnF,EAAAF,EAAA,OAAAS,EApDmFP,0BAAE,GAAFA,uBAAE,UAAFA,4BAAE,EAAAd,EAAAqB,EAAAS,cAAA,SAAFhB,uDAAE,IAAFA,wBAAE,IAAFA,wBAAE,IAAAO,EAAAiB,sBAAAb,QAAFX,4BAAE,EAAAP,EAAAc,EAAAW,eAAAX,EAAAY,gBAAA,IAoD5F,WAAAM,EAAA3B,EAAAC,GACK,GADL,EAAAD,IApD0FE,2BAAE,WAAFA,uBAAE,EAAAI,EAAA,sBAAFJ,CAetD,EAAAe,EAAA,cAfsDf,CA4C2E,EAAAqB,EAAA,cA5C3ErB,CA+C0E,EAAAuB,EAAA,eA/C1EvB,4BAqDrF,EAAAF,EAAA,OAAAS,EArDqFP,2EAAE,OAAAO,EAAAS,eAAFhB,+CAAE,QAAAO,EAAAmB,cAAAnB,EAAAa,iBAAA,GAAFpB,+CAAE,QAAAO,EAAAmB,cAAAnB,EAAAa,gBAAA,GAAFpB,+CAAE,OAAAO,EAAAmB,aAkDnE,WAAAC,EAAA7B,EAAAC,GAAA,EAAAD,IAlDiEE,2BAAE,YAAFA,sBAAE,SAAFA,2BA0DrF,UAAA4B,EAAA9B,EAAAC,GA1DuF,GA0DvF,EAAAD,IA1DqFE,oCAAE,GAAFA,mBAAE,GAAFA,qCAAE,EAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,sDAAEO,EAAAsB,YA8DvC,WAAAC,EAAAhC,EAAAC,GAE9C,GAF8C,EAAAD,IA9DqCE,2BAAE,aAAFA,uBAAE,EAAA4B,EAAA,sBAAF5B,mBAAE,GAAFA,mBAAE,WAAFA,4BAgEnF,EAAAF,EAAA,OAAAS,EAhEmFP,0BAAE,GAAFA,+CAAE,QAAAO,EAAAS,eAAFhB,uDAAE,IAAFA,wBAAE,IAAAO,EAAAwB,SAAApB,SAAA,IAgE5F,WAAAqB,EAAAlC,EAAAC,GAAA,KAAAD,EAAA,OAAAmC,EAhE0FjC,0DAAE,cAAFA,6BAAE,yBAAAM,GAAFN,0BAAEiC,GAAA,MAAA1B,EAAFP,0BAAE,GAAFA,sCAAEO,EAAAsB,YAAAvB,KAAAC,EAAAsB,YAAAvB,GAAFN,wBAAEM,EAAA,GAAFN,0BA8E7D,MAAAF,EAAA,OAAAS,EA9E6DP,0BAAE,GAAFA,uBAAE,KAAAO,EAAA2B,oBAAFlC,CAyE7D,MAAAO,EAAA4B,YAAAC,QAzE6DpC,6BAAE,UAAAO,EAAAsB,YA8EhE,WAAAQ,EAAAvC,EAAAC,GAO6F,GAP7F,EAAAD,IA9E8DE,2BAAE,eAAFA,mBAAE,GAAFA,4BAqF+B,EAAAF,EAAA,OAAAwC,EAAAvC,EAAAwC,MArF/BvC,uBAAE,QAAAsC,EAAA,GAAFtC,sDAAEsC,EAAA,EAqFoB,WAAAE,EAAA1C,EAAAC,GAAA,KAAAD,EAAA,OAAA2C,EArFtBzC,0DAAE,eAAFA,6BAAE,yBAAAM,GAAFN,0BAAEyC,GAAA,MAAAlC,EAAFP,0BAAE,GAAFA,sCAAEO,EAAAsB,YAAAvB,KAAAC,EAAAsB,YAAAvB,GAAFN,wBAAEM,EAAA,GAAFN,uBAAE,EAAAqC,EAAA,iBAAFrC,0BAsF/E,MAAAF,EAAA,OAAAS,EAtF+EP,0BAAE,GAAFA,uBAAE,KAAAO,EAAA2B,oBAAFlC,CAiF7D,WAAAO,EAAAK,mBAjF6DZ,6BAAE,UAAAO,EAAAsB,aAAF7B,+CAAE,UAAAO,EAAA4B,YAqFhD,WAAAO,EAAA5C,EAAAC,GArFgD,GAqFhD,EAAAD,IArF8CE,mDAAE,YAAFA,mBAAE,cAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,wBAAE,YAAFA,wBAAE,IAAAO,EAAAO,gBAAAH,SAAA,WAAAgC,EAAA7C,EAAAC,GAAA,KAAAD,IAAFE,oCAAE,GAAFA,2BAAE,WAAFA,CAoEtC,cApEsCA,mBAAE,GAAFA,mBAAE,WAAFA,kDAAE,EAAAgC,EAAA,eAAFhC,CA8E7D,EAAAwC,EAAA,gBA9E6DxC,CAoF7D,EAAA0C,EAAA,cApF6D1C,gEAAE,EAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,gDAAE,wBAAAO,EAAAK,mBAAFZ,+CAAE,MAAAO,EAAA2B,qBAAFlC,8EAAE,IAAAO,EAAAwB,SAAApB,UAAFX,sBAAE,GAAFA,uBAAE,OAAAO,EAAA4B,YAAAC,OAAA7B,EAAAqC,qBAAF5C,+CAAE,OAAAO,EAAA4B,YAAAC,QAAA7B,EAAAqC,qBAAF5C,+CAAE,OAAAO,EAAA4B,YAAAC,QAAA,IAwFxD,WAAAS,EAAA/C,EAAAC,GAxFwD,GAwFxD,EAAAD,IAxFsDE,oCAAE,GAAFA,mBAAE,GAAFA,qCAAE,EAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,sDAAEO,EAAAsB,YAmGvC,WAAAiB,EAAAhD,EAAAC,GAE9C,GAF8C,EAAAD,IAnGqCE,2BAAE,aAAFA,uBAAE,EAAA6C,EAAA,sBAAF7C,mBAAE,GAAFA,mBAAE,iBAAFA,mBAAE,WAAFA,4BAqGnF,EAAAF,EAAA,OAAAS,EArGmFP,0BAAE,GAAFA,+CAAE,QAAAO,EAAAS,eAAFhB,uDAAE,IAAFA,wBAAE,IAAFA,wBAAE,IAAAO,EAAAwC,eAAApC,QAAFX,4BAAE,EAAAL,EAAAY,EAAAyC,YAAA,IAqG5F,WAAAC,EAAAnD,EAAAC,GArG4F,GAqG5F,EAAAD,IArG0FE,oCAAE,GAAFA,mBAAE,GAAFA,qCAAE,EAAAF,EAAA,OAAAS,EAAFP,0BAAE,GAAFA,sDAAEO,EAAAsB,YAuGvC,WAAAqB,EAAApD,EAAAC,GAE9C,GAF8C,EAAAD,IAvGqCE,2BAAE,aAAFA,uBAAE,EAAAiD,EAAA,sBAAFjD,mBAAE,GAAFA,mBAAE,iBAAFA,mBAAE,WAAFA,4BAyGnF,EAAAF,EAAA,OAAAS,EAzGmFP,0BAAE,GAAFA,+CAAE,QAAAO,EAAAS,eAAFhB,uDAAE,IAAFA,wBAAE,IAAFA,wBAAE,IAAAO,EAAA4C,gBAAAxC,QAAFX,4BAAE,EAAAL,EAAAY,EAAAyC,YAAA,IAyG5F,WAAAI,EAAAtD,EAAAC,GAAA,KAAAD,EAAA,OAAAuD,EAzG0FrD,0DAAE,YAAFA,uBAAE,EAAA8B,EAAA,cAAF9B,CA6DN,EAAA2C,EAAA,qBA7DM3C,CAiEtD,EAAA8C,EAAA,cAjEsD9C,CAkGf,EAAAkD,EAAA,eAlGelD,2BAAE,WAAFA,CA0G5C,eA1G4CA,mBAAE,WAAFA,uBAAE,mBAAFA,0BAAEqD,GAAA,MAAA9C,EAAFP,4BAAE,OAAFA,wBAoH/EO,EAAA+C,WAAAC,KAAAhD,EAAAiD,cAA6B,GApHkDxD,mDAAE,YAAFA,oFAAE,eAAFA,mBAAE,YAAFA,uBAAE,mBAAFA,0BAAEqD,GAAA,MAAA9C,EAAFP,4BAAE,OAAFA,wBAoI/EO,EAAA+C,WAAAC,KAAAhD,EAAAkD,UAAyB,GApIsDzD,mDAAE,aAAFA,8BAyIrF,MAAAF,EAAA,OAAAS,EAzIqFP,2EAAE,OAAAO,EAAAmB,cAAF1B,+CAAE,OAAAO,EAAAS,eAAFhB,+CAAE,QAAAO,EAAAmB,cAAAnB,EAAAyC,UAAA,GAAFhD,+CAAE,QAAAO,EAAAmB,cAAAnB,EAAAyC,SAAA,GAAFhD,sBAAE,GAAFA,uBAAE,UAAFA,4BAAE,GAAAN,EAAAa,EAAAsB,aAAA,GAAAtB,EAAAmD,UAAF1D,CAiHtF,cAAAO,EAAAsB,aAAA,GAAAtB,EAAAmD,WAAA,MAjHsF1D,wBAAE,aAAFA,wBAAE,KAAAO,EAAAoD,aAAAhD,UAAFX,sBAAE,GAAFA,uBAAE,UAAFA,4BAAE,GAAAN,EAAAa,EAAAsB,aAAAtB,EAAAyC,UAAAzC,EAAAmD,UAAF1D,CAiItF,cAAAO,EAAAsB,aAAAtB,EAAAyC,UAAAzC,EAAAmD,WAAA,MAjIsF1D,wBAAE,aAAFA,wBAAE,MAAAO,EAAAqD,YAAAjD,SAAA,QAAAkD,EAAA5E,KAAA,oCAAAA,IAAA,SAAA6E,EAAAhE,EAAAC,GAwZlF,GAxZkF,EAAAD,IAAFE,2BAAE,YAAFA,mBAAE,GAAFA,4BAwZhF,EAAAF,EAAA,OAAAiE,EAAAhE,EAAAwC,MAAAhC,EAxZgFP,0BAAE,GAAFA,uDAAE,IAAAO,EAAAyD,UAAAD,EAAA,MAwZ3F,WAAAE,EAAAnE,EAAAC,GAAA,KAAAD,EAAA,OAAAO,EAxZyFL,0DAAE,SAAFA,CA8Y9B,UA9Y8BA,CA+YjD,cA/YiDA,uBAAE,kBAAAM,GAAFN,0BAAEK,GAAA,MAAAE,EAAFP,4BAAE,OAAFA,wBAmZ/EO,EAAA2D,aAAA5D,GAAoB,GAnZ2DN,sBAAE,cAAFA,uBAAE,EAAA8D,EAAA,gBAAF9D,sDAAE,WAAFA,mDAAE,WAAFA,8BAmatF,MAAAF,EAAA,OAAAS,EAnasFP,kDAAE,GAAFA,wBAAE,aAAAO,EAAA4D,WAAFnE,sBAAE,GAAFA,uBAAE,UAAAO,EAAA6D,aAsZzD,WAAAC,EAAAvE,EAAAC,GAc0D,GAd1D,EAAAD,GAtZuDE,sBAAE,+BAoaC,EAAAF,EAAA,OAAAS,EApaHP,mDAAE,OAAAO,EAAAyD,UAAA,EAoa1B,WAAAM,GAAAxE,EAAAC,GAAA,KAAAD,EAAA,OAAAO,EApawBL,0DAAE,gCAAFA,uBAAE,mBAAFA,0BAAEK,GAAA,MAAAE,EAAFP,4BAAE,OAAFA,wBAAEO,EAAAsB,YA+nBnE,EAAC,GA/nBgE7B,0BAioB/D,MAAAF,EAAA,OAAAS,EAjoB+DP,mDAAE,cAAAO,EAAAsB,YAgoB7D,WAAA0C,GAAAzE,EAAAC,GAAA,KAAAD,EAAA,OAAA0E,EAhoB2DxE,0DAAE,gCAAFA,uBAAE,kBAAAM,GAAFN,0BAAEwE,GAAA,MAAAjE,EAAFP,4BAAE,OAAFA,wBAsoB9EO,EAAAkE,wBAAAnE,GAA+B,GAtoB+CN,0BAuoB/D,MAAAF,EAAA,OAAAS,EAvoB+DP,mDAAE,QAAAO,EAAAmE,UAAF1E,CAooBrE,YAAAO,EAAAoE,YACM,WAAAC,GAAA9E,EAAAC,GAAA,KAAAD,EAAA,OAAAuD,EAroB+DrD,0DAAE,gCAAFA,uBAAE,yBAAA6E,EAAF7E,0BAAEqD,GAAAlD,UAAAI,EAAFP,4BAAE,OAAFA,wBAAEO,EAAAsB,YAAAgD,EAAA,GAAF7E,0BA6oB/D,MAAAF,EAAA,OAAA+E,EAAA9E,EAAAI,UAAAI,EA7oB+DP,mDAAE,OAAA6E,EAAF7E,CA0oB3E,WAAAO,EAAAsB,aAAAgD,EAEmB,WAAAC,GAAAhF,EAAAC,GAAA,KAAAD,EAAA,OAAA2C,EA5oBwDzC,0DAAE,gCAAFA,uBAAE,kBAAAM,GAAFN,0BAAEyC,GAAA,MAAAlC,EAAFP,4BAAE,OAAFA,wBAkpB9EO,EAAAkE,wBAAAnE,GAA+B,GAlpB+CN,0BAmpB/D,MAAAF,EAAA,OAAAS,EAnpB+DP,mDAAE,QAAAO,EAAAwE,SAAF/E,CAgpBtE,YAAAO,EAAAyE,kBAAA5C,OAAA7B,EAAAwE,SAAA,EACmC,WAAAE,GAAAnF,EAAAC,GAAA,KAAAD,EAAA,OAAAoF,EAjpBmClF,0DAAE,gCAAFA,uBAAE,mBAAFA,0BAAEkF,GAAA,MAAA3E,EAAFP,4BAAE,OAAFA,wBAAEO,EAAAsB,YAAAtB,EAAAyE,kBAAA5C,OAAA,GAAFpC,0BAypB/D,MAAAF,EAAA,OAAAS,EAzpB+DP,mDAAE,OAAAO,EAAAyE,kBAAA5C,OAAFpC,CAspBvD,WAAAO,EAAAsB,aAAAtB,EAAAyE,kBAAA5C,OAEmB,EAl1BzD,MAAM+C,GACFC,cAIIC,KAAKxD,YAAc,EAKnBwD,KAAKC,WAAa,GAIlBD,KAAKjE,gBAAkB,CAC3B,EA6BJ,MAAMmE,EACFH,YAAYI,EAAMC,GACdJ,KAAKG,KAAOA,EACZH,KAAKI,aAAeA,EAIpBJ,KAAKK,UAAW,EAIhBL,KAAK3B,UAAW,EAIhB2B,KAAKzE,mBAAoB,EAIzByE,KAAKrE,eAAgB,EAIrBqE,KAAK3D,cAAe,EACpB2D,KAAKzC,oBAAsB,IAM3ByC,KAAKxE,oBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,IAO5CwE,KAAK/B,WAAa,IAAIqC,eACtBN,KAAK5E,qBAAuB,oCAAoC8E,EAAWK,oBAC3EP,KAAKnD,oBAAsB,kCAAkCqD,EAAWK,oBACxEP,KAAK3E,iBAAmB2E,KAAKG,KAAKK,eAAe,6BACjDR,KAAKvE,gBAAkBuE,KAAKG,KAAKK,eAAe,mCAChDR,KAAK1B,aAAe0B,KAAKG,KAAKK,eAAe,uBAC7CR,KAAKzB,YAAcyB,KAAKG,KAAKK,eAAe,sBAC5CR,KAAK/D,eAAiB+D,KAAKG,KAAKK,eAAe,0BAC/CR,KAAKpE,cAAgBoE,KAAKG,KAAKK,eAAe,yBAC9CR,KAAK7D,sBAAwB6D,KAAKG,KAAKK,eAAe,kCACtDR,KAAKtD,SAAWsD,KAAKG,KAAKK,eAAe,mBACzCR,KAAKlC,gBAAkBkC,KAAKG,KAAKK,eAAe,4BAChDR,KAAKtC,eAAiBsC,KAAKG,KAAKK,eAAe,2BAC/CR,KAAKS,aAAe,GACpBP,EAAWK,mBACf,CAiBA,gBAAIG,CAAaC,GACb,MAAMC,KAAoBC,SAAMb,KAAKG,KAAKW,YAAY,cAAeH,GACrEX,KAAK3E,iBAAiB0F,SAASH,EAAkBI,gBACjDhB,KAAKvE,gBAAgBsF,SAASH,EAAkBK,sBAChDjB,KAAK1B,aAAayC,SAASH,EAAkBM,UAC7ClB,KAAKzB,YAAYwC,SAASH,EAAkBO,SAC5CnB,KAAK/D,eAAe8E,SAASH,EAAkBQ,aAC/CpB,KAAKpE,cAAcmF,SAASH,EAAkBS,YAC9CrB,KAAK7D,sBAAsB4E,SAASH,EAAkBU,qBACtDtB,KAAKtD,SAASqE,SAASH,EAAkBW,MACzCvB,KAAKlC,gBAAgBiD,SAASH,EAAkBY,eAChDxB,KAAKtC,eAAeqD,SAASH,EAAkBa,aACnD,CACA,gBAAItG,GACA,OAAO6E,KAAK0B,MAAMzB,UACtB,CACA,gBAAI9E,CAAawF,GACbX,KAAK0B,MAAMzB,WAAa0B,OAAOhB,GAC/BX,KAAKxD,YAAc,CACvB,CACA,eAAIA,GACA,OAAOwD,KAAK0B,MAAMlF,WACtB,CACA,eAAIA,CAAYmE,GACZA,EAAQgB,OAAOhB,GAGfX,KAAK/B,WAAWC,KAAKyC,EACzB,CACA,mBAAI5E,GACA,OAAOiE,KAAK0B,MAAM3F,eACtB,CAIA,YAAI4B,GACA,MAAMpD,EAAOqH,KAAKC,KAAK7B,KAAKjE,gBAAkBiE,KAAK7E,cACnD,OAAOZ,EAAO,EAAIA,EAAO,CAC7B,CACA,kBAAIsB,GACA,OAAOmE,KAAKlE,aAAe,GAAKkE,KAAKxD,YAAc,GAAKwD,KAAK7E,aAAe,EAAI,CACpF,CACA,gBAAIW,GACA,MAAMgG,EAAwB9B,KAAKxD,YAAcwD,KAAK7E,aACtD,OAAO2G,EAAwB9B,KAAKjE,gBAAkB+F,EAAwB9B,KAAKjE,eACvF,CAIA,gBAAIoC,GACA,OAAO6B,KAAKxD,aAAe,EAAI,EAAIwD,KAAKxD,YAAc,CAC1D,CAIA,YAAI4B,GACA,MAAMT,EAAWqC,KAAKrC,SACtB,OAAOqC,KAAKxD,aAAemB,EAAWA,EAAWqC,KAAKxD,YAAc,CACxE,CACA,eAAIM,GAMA,MAAMiF,EAAgBH,KAAKI,IAAIJ,KAAKC,KAAK7B,KAAKjE,gBAAkBiE,KAAK7E,cAAe,GACpF,OAAI6E,KAAKS,aAAa1D,SAAWgF,IAC7B/B,KAAKS,aAAewB,MAAMF,IAEvB/B,KAAKS,YAChB,EAEJP,EAAWK,kBAAoB,EAC/BL,EAAWgC,UAAI,SAAAC,GAAA,WAAAA,GAAwFjC,GAAVvF,8BAAsCyH,QAAtCzH,8BAA0D0H,uBAAsB,EAC7KnC,EAAWoC,UADkF3H,8BAAE,CAAA4H,KACJrC,EAAUsC,UAAA,wCAAAC,OAAA,CAAApC,SAAA,WAAAqB,MAAA,QAAArD,SAAA,WAAA9C,kBAAA,oBAAAI,cAAA,gBAAAU,aAAA,eAAAkB,oBAAA,sBAAAmD,aAAA,eAAAlF,oBAAA,uBAAAkH,QAAA,CAAAzE,WAAA,cAAA0E,MAAA,EAAAC,KAAA,EAAAC,OAAA,usEAAAC,SAAA,SAAArI,EAAAC,GAAA,EAAAD,IADRE,2BAAE,WAAFA,uBAAE,EAAAH,EAAA,YAAFG,CAQvC,EAAAyB,EAAA,YARuCzB,CActC,EAAA2B,EAAA,YAdsC3B,CAwDtC,EAAAoD,EAAA,eAxDsCpD,4BA0ItF,EAAAF,IA1IsFE,uBAAE,UAAFA,4BAAE,EAAAhB,EAAAe,EAAA2F,WAAF1F,+CAAE,OAAAD,EAAA2F,UAAF1F,+CAAE,QAAAD,EAAA2F,UAAF1F,+CAAE,OAAAD,EAAA2F,UAAF1F,+CAAE,QAAAD,EAAA2F,UA4DxE,EAAA0C,aAAA,CA+EuCC,UAA8FA,UAA6HA,OAAoGA,UAAqFC,iBAAkGA,+BAA2GA,uBAAgRA,sBAAkKA,6BAA8MA,kBAAwGA,eAA2LA,eAA2LA,UAAwNC,gBAAgMC,SAA6JH,YAAqDZ,eAAcgB,cAAA,IA8Kr3E,MAAMC,EACFtD,cAIIC,KAAKsD,KAAO,EAIZtD,KAAKuD,UAAW,EAIhBvD,KAAKwD,MAAQ,IAAIlD,cACrB,EAEJ+C,EAAkBnB,UAAI,SAAAC,GAAA,WAAAA,GAAwFkB,EAAiB,EAC/HA,EAAkBf,UA1U2E3H,8BAAE,CAAA4H,KA0UGc,EAAiBb,UAAA,0DAAAC,OAAA,CAAAa,KAAA,OAAAC,SAAA,YAAAb,QAAA,CAAAc,MAAA,SAAAb,MAAA,EAAAC,KAAA,EAAAC,OAAA,0JAAAC,SAAA,SAAArI,EAAAC,GAAA,EAAAD,IA1UtBE,2BAAE,SAAFA,CA2UhD,cA3UgDA,uBAAE,0BAgVlFD,EAAA8I,MAAAtF,KAAAxD,EAAA4I,KAAgB,GAhVgE3I,2BAAE,YAAFA,mBAAE,GAAFA,8CAAE,GAAFA,8BAsVtF,EAAAF,IAtVsFE,+CAAE,UAAFA,4BAAE,EAAA6D,EAAA9D,EAAA6I,WAAF5I,sBAAE,GAAFA,+BAAE,IAAAD,EAAA4I,KAAA,KAAF3I,uDAAE,IAAAD,EAAA4I,KAAA,KAqV5F,EAAAP,aAAA,CAE2DC,WAAUI,cAAA,IAoCxE,MAAMK,EACF1D,YAAYI,GACRH,KAAKG,KAAOA,EACZH,KAAKlB,UAAYkB,KAAKG,KAAKuD,MAAMC,WAAWC,YAI5C5D,KAAK6D,OAAS,IAAIvD,cACtB,CACA,gBAAIvB,GACA,MAAO,IAAIkD,MAAMjC,KAAK8D,OAC1B,CACAjF,aAAakF,GACT/D,KAAK6D,OAAO3F,MAAM6F,EAAMC,OAAOrD,OAC/BoD,EAAMC,OAAOrD,MAAQ,EACzB,EAEJ8C,EAAmBvB,UAAI,SAAAC,GAAA,WAAAA,GAAwFsB,GA5YlB9I,8BA4YsDyH,QAAO,EAC1JqB,EAAmBnB,UA7Y0E3H,8BAAE,CAAA4H,KA6YIkB,EAAkBjB,UAAA,0DAAAC,OAAA,CAAA9D,UAAA,YAAAmF,MAAA,QAAAhF,UAAA,aAAA4D,QAAA,CAAAmB,OAAA,UAAAlB,MAAA,EAAAC,KAAA,EAAAC,OAAA,wbAAAC,SAAA,SAAArI,EAAAC,GAAA,EAAAD,GA7YxBE,uBAAE,EAAAiE,EAAA,WAAFjE,CA8Y9B,EAAAqE,EAAA,iCAsBO,EAAAvE,IApauBE,uBAAE,OAAAD,EAAAoJ,MAAA,GAAFnJ,+CAAE,WAAAD,EAAAoJ,OAoalD,EAAAf,aAAA,CACiBC,UAA6HA,OAAoGC,iBAAkGA,+BAA2GC,gBAAgMG,GAAiBD,cAAA,IAmE7rB,MAAMa,EACFlE,YAAYI,EAAMC,GACdJ,KAAKG,KAAOA,EACZH,KAAKI,aAAeA,EAIpBJ,KAAK3B,UAAW,EAIhB2B,KAAKkE,iBAAmB,EAIxBlE,KAAKmE,KAAO,KAOZnE,KAAK/B,WAAa,IAAIqC,eACtBN,KAAKoE,aAAepE,KAAKG,KAAKK,eAAe,mBAC7CR,KAAKqE,iBAAmBrE,KAAKG,KAAKK,eAAe,uBACjDyD,EAAc1D,mBAClB,CAUA,gBAAIG,CAAaC,GACb,MAAMC,KAAoBC,SAAMb,KAAKG,KAAKW,YAAY,cAAeH,GACrEX,KAAKoE,aAAarD,SAASH,EAAkB0D,MAC7CtE,KAAKqE,iBAAiBtD,SAASH,EAAkB2D,SACrD,CAEA,mBAAIC,GACA,MAAqB,OAAdxE,KAAKmE,IAChB,CACA,oBAAIM,GACA,MAAqB,OAAdzE,KAAKmE,IAChB,CACA,mBAAIO,GACA,MAAqB,OAAd1E,KAAKmE,IAChB,CACA,qBAAIxE,GACA,SAAOgF,SAAM3E,KAAKjE,gBAAkB,EAAG,EAC3C,CACA,eAAIS,GACA,OAAOwD,KAAK0B,MAAMlF,WACtB,CACA,eAAIA,CAAYmE,GACZA,EAAQgB,OAAOhB,GAGfX,KAAK/B,WAAWC,KAAKyC,EACzB,CACA,mBAAI5E,GACA,OAAOiE,KAAK0B,MAAM3F,eACtB,CACA,eAAIuD,GACA,OAAOU,KAAKkE,kBAAoB,GAAKlE,KAAKxD,YAAc,EAAI,EAAI,CACpE,CACA,aAAI6C,GAEA,OADaW,KAAK4E,UACNC,KAChB,CACA,YAAInF,GAEA,OADaM,KAAK4E,UACNE,IAChB,CACA,qBAAIC,GACA,OAAO/E,KAAK3B,UAAiC,IAArB2B,KAAKxD,WACjC,CACA,sBAAIwI,GACA,OAAOhF,KAAK3B,UAAY2B,KAAKxD,cAAgBwD,KAAKjE,eACtD,CACAqD,wBAAwBkE,GACA,iBAATA,IACPtD,KAAKxD,YAAc8G,EAE3B,CACA2B,aACIjF,KAAKxD,YAAcwD,KAAKxD,YAAcwD,KAAKjE,gBAAkBiE,KAAKxD,YAAc,EAAIwD,KAAKjE,eAC7F,CACAmJ,iBACIlF,KAAKxD,YAAcwD,KAAKxD,YAAc,EAAIwD,KAAKxD,YAAc,EAAI,CACrE,CACA2I,WACI,GAAInF,KAAKjE,iBAAmB,EACxB,OAAO,KAEX,MAAMqJ,EAAOpF,KAAK4E,UAClB,OAAO5E,KAAKL,kBAAkB0F,MAAMrF,KAAKV,YAAc8F,EAAKP,OAAyB,GAAjB,EAAIO,EAAKN,MACjF,CACAF,QAAQU,EAAa,MACjB,MAAMhC,EAAOtD,KAAKxD,YAAc,EAC1B+I,EAAavF,KAAKjE,gBAClByJ,EAAexF,KAAKkE,iBAC1B,GAAIsB,GAAgBD,EAChB,MAAO,CACHV,MAAO,EACPC,KAAM,GAGd,MAAMW,EAAQH,GAAc1D,KAAKC,KAAK2D,EAAe,GAAK,EAC1D,IAAIE,EAAcpC,EAAO,EAAImC,EACzBE,EAAaJ,EAAajC,GAAQkC,EAAeC,GAAS,EAC9D,OAAIC,GAAe,IACfC,GAAcD,GAAe,EAAI9D,KAAKgE,IAAIF,GAAe,EAAI,EAC7DA,EAAc,GAEdC,GAAc,IACdD,GAAeC,GAAc,EAAI/D,KAAKgE,IAAID,GAAc,EAAI,EAC5DA,EAAa,GAEV,CACHd,MAAOa,EACPZ,KAAMa,EAEd,EAEJ1B,EAAc1D,kBAAoB,EAClC0D,EAAc/B,UAAI,SAAAC,GAAA,WAAAA,GAAwF8B,GAzmBbtJ,8BAymB4CyH,QAzmB5CzH,8BAymBgE0H,uBAAsB,EACnL4B,EAAc3B,UA1mB+E3H,8BAAE,CAAA4H,KA0mBD0B,EAAazB,UAAA,iDAAAqD,SAAA,EAAAC,aAAA,SAAArL,EAAAC,GAAA,EAAAD,GA1mBdE,wBAAE,uBAAAD,EAAA8J,gBAAF7J,CA0mBc,uBAAAD,EAAA+J,iBA1mBd9J,CA0mBc,uBAAAD,EAAAgK,gBAAA,EAAAjC,OAAA,CAAAf,MAAA,QAAArD,SAAA,WAAA6F,iBAAA,mBAAAxD,aAAA,eAAAyD,KAAA,QAAAzB,QAAA,CAAAzE,WAAA,cAAA0E,MAAA,GAAAC,KAAA,GAAAC,OAAA,8hBAAAC,SAAA,SAAArI,EAAAC,GAAA,EAAAD,IA1mBdE,2BAAE,QAAFA,CA2mBvF,UA3mBuFA,CA4mB1D,SA5mB0DA,CA6mBpD,SA7mBoDA,CA8mB9C,uBA9mB8CA,mBAAE,WAAFA,uBAAE,0BAknBhFD,EAAAwK,gBAAgB,GAlnB8DvK,mDAAE,WAAFA,oDAAE,EAAAsE,GAAA,gCAAFtE,CAgoB1D,EAAAuE,GAAA,gCAhoB0DvE,CAsoB7C,EAAA4E,GAAA,gCAtoB6C5E,CA4oBvD,GAAA8E,GAAA,gCA5oBuD9E,CAkpB7C,GAAAiF,GAAA,iCAlpB6CjF,yDAAE,UAAFA,CA0pB9C,wBA1pB8CA,mBAAE,YAAFA,uBAAE,0BA8pBhFD,EAAAuK,YAAY,GA9pBkEtK,mDAAE,YAAFA,oCA0qBtF,EAAAF,IA1qBsFE,sBAAE,GAAFA,uBAAE,OAAAD,EAAAyJ,KAAFxJ,CAinB1E,WAAAD,EAAAqK,kBAjnB0EpK,CAmnBzD,cAnnByDA,wBAAE,KAAAD,EAAA2J,iBAAA/I,UAAFX,sBAAE,GAAFA,uBAAE,OAAAD,EAAAwJ,kBAAA,GAAAxJ,EAAAwJ,kBAAA,GAAAxJ,EAAA8B,aAAA,GAAF7B,+CAAE,OAAAD,EAAA2E,WAAF1E,+CAAE,UAAAD,EAAAyK,YAAFxK,+CAAE,OAAAD,EAAAgF,UAAF/E,+CAAE,OAAAD,EAAAqB,gBAAA,GAAFpB,sBAAE,GAAFA,uBAAE,OAAAD,EAAAyJ,KAAFxJ,CA6pB1E,WAAAD,EAAAsK,mBA7pB0ErK,CA+pBxD,cA/pBwDA,wBAAE,MAAAD,EAAA0J,aAAA9I,UAgqB7C,EAAAyH,aAAA,CAWYC,UAA6HA,OAAoGE,gBAAgMC,aAAwSE,EAAgKI,EAA4KT,aAAYI,cAAA,IA+F/lC,MAAM2C,GAENA,EAAiB7D,UAAI,SAAAC,GAAA,WAAAA,GAAwF4D,EAAgB,EAC7HA,EAAiBC,UA7wB4ErL,6BAAE,CAAA4H,KA6wBewD,IAY9GA,EAAiBE,UAzxB4EtL,6BAAE,CAAAuL,QAAA,CAyxB2CC,eAClIC,cACAC,aACAC,qBACAC,aACAC","names":["_c0","a0","_c1","_c2","a1","a2","start","end","total","_c3","_c4","_c5","last","Pagination_div_1_Template","rf","ctx","i0","Pagination_div_2_ng_container_1_option_6_Template","option_r3","$implicit","Pagination_div_2_ng_container_1_Template","_r1","$event","ctx_r1","itemsPerPage","itemsPerPageSelectId","itemsPerPageText","subject","pageInputDisabled","itemsPerPageOptions","optionsListText","Pagination_div_2_span_2_Template","showPageInput","totalItemText","startItemIndex","endItemIndex","totalDataLength","Pagination_div_2_span_3_Template","totalItemsText","Pagination_div_2_span_4_Template","totalItemsUnknownText","Pagination_div_2_Template","pagesUnknown","Pagination_div_3_Template","Pagination_div_4_span_1_ng_container_1_Template","currentPage","Pagination_div_4_span_1_Template","pageText","Pagination_div_4_ng_container_2_input_5_Template","_r5","currentPageSelectId","pageOptions","length","Pagination_div_4_ng_container_2_select_6_option_1_Template","i_r7","index","Pagination_div_4_ng_container_2_select_6_Template","_r6","Pagination_div_4_ng_container_2__svg_svg_7_Template","Pagination_div_4_ng_container_2_Template","pageSelectThreshold","Pagination_div_4_span_3_ng_container_1_Template","Pagination_div_4_span_3_Template","ofLastPageText","lastPage","Pagination_div_4_span_4_ng_container_1_Template","Pagination_div_4_span_4_Template","ofLastPagesText","Pagination_div_4_Template","_r4","selectPage","emit","previousPage","nextPage","disabled","backwardText","forwardText","_c6","PaginationOverflow_li_0_option_4_Template","i_r3","fromIndex","PaginationOverflow_li_0_Template","handleChange","ariaLabel","countAsArray","PaginationOverflow_cds_pagination_nav_item_1_Template","PaginationNav_cds_pagination_nav_item_7_Template","PaginationNav_cds_pagination_overflow_8_Template","_r3","handleOverflowSelection","frontCuts","startOffset","PaginationNav_cds_pagination_nav_item_9_Template","page_r5","PaginationNav_cds_pagination_overflow_10_Template","backCuts","totalNumbersArray","PaginationNav_cds_pagination_nav_item_11_Template","_r7","PaginationModel","constructor","this","pageLength","Pagination","i18n","experimental","skeleton","EventEmitter","paginationCounter","getOverridable","_pageOptions","translations","value","valueWithDefaults","merge","getMultiple","override","ITEMS_PER_PAGE","OPEN_LIST_OF_OPTIONS","BACKWARD","FORWARD","TOTAL_ITEMS","TOTAL_ITEM","TOTAL_ITEMS_UNKNOWN","PAGE","OF_LAST_PAGES","OF_LAST_PAGE","model","Number","Math","ceil","projectedEndItemIndex","numberOfPages","max","Array","ɵfac","__ngFactoryType__","i1","i2","ɵcmp","type","selectors","inputs","outputs","decls","vars","consts","template","dependencies","i3","i4","i4$1","i6","encapsulation","PaginationNavItem","page","isActive","click","PaginationOverflow","get","PAGINATION","SELECT_ARIA","change","count","event","target","PaginationNav","numOfItemsToShow","size","nextItemText","previousItemText","NEXT","PREVIOUS","smallLayoutSize","mediumLayoutSize","largeLayoutSize","range","getCuts","front","back","leftArrowDisabled","rightArrowDisabled","jumpToNext","jumpToPrevious","getPages","cuts","slice","splitPoint","totalItems","itemsThatFit","split","frontHidden","backHidden","abs","hostVars","hostBindings","PaginationModule","ɵmod","ɵinj","imports","CommonModule","FormsModule","I18nModule","ExperimentalModule","IconModule","ButtonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-pagination.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { merge } from 'carbon-components-angular/utils';\nimport * as i1 from 'carbon-components-angular/i18n';\nimport { I18nModule } from 'carbon-components-angular/i18n';\nimport * as i2 from 'carbon-components-angular/experimental';\nimport { ExperimentalModule } from 'carbon-components-angular/experimental';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4$1 from 'carbon-components-angular/icon';\nimport { IconModule } from 'carbon-components-angular/icon';\nimport * as i6 from 'carbon-components-angular/forms';\nimport { ButtonModule } from 'carbon-components-angular/forms';\nimport { range } from 'carbon-components-angular/common';\n\nclass PaginationModel {\n    constructor() {\n        /**\n         * Tracks the current page.\n         */\n        this.currentPage = 1;\n        /**\n         * Length of page.\n         */\n        /* tslint:disable-next-line*/\n        this.pageLength = 10;\n        /**\n         * Absolute total number of items needed to paginate.\n         */\n        this.totalDataLength = 0;\n    }\n}\n\n/**\n * Use pagination when you have multiple pages of data to handle. Get started with importing the module:\n *\n * ```typescript\n * import { PaginationModule } from 'carbon-components-angular';\n * ```\n *\n * ```html\n *\t<cds-pagination [model]=\"model\" (selectPage)=\"selectPage($event)\"></cds-pagination>\n * ```\n *\n * In your `selectPage()` method set the `model.currentPage` to selected page, _after_\n * you load the page.\n *\n * ```typescript\n * selectPage(page) {\n * \t// ... your code to load the page goes here\n *\n * \tthis.model.currentPage = page;\n *\n * \t// ... anything you want to do after page selection changes goes here\n * }\n * ```\n *\n * [See demo](../../?path=/story/components-pagination--basic)\n */\nclass Pagination {\n    constructor(i18n, experimental) {\n        this.i18n = i18n;\n        this.experimental = experimental;\n        /**\n         * Set to `true` for a loading pagination component.\n         */\n        this.skeleton = false;\n        /**\n         * Set to `true` to disable the backward/forward buttons.\n         */\n        this.disabled = false;\n        /**\n         * Set to `true` to disable the select box that changes the page.\n         */\n        this.pageInputDisabled = false;\n        /**\n         * Controls wether or not to show the page selects\n         */\n        this.showPageInput = true;\n        /**\n         * Set to `true` if the total number of items is unknown.\n         */\n        this.pagesUnknown = false;\n        this.pageSelectThreshold = 1000;\n        /**\n         * Options for items per page select\n         *\n         * A default array of options will be defined: [10, 20, 30, 40, 50]\n         */\n        this.itemsPerPageOptions = [10, 20, 30, 40, 50];\n        /**\n         * Emits the new page number.\n         *\n         * You should tie into this and update `model.currentPage` once the fresh\n         * data is finally loaded.\n         */\n        this.selectPage = new EventEmitter();\n        this.itemsPerPageSelectId = `pagination-select-items-per-page-${Pagination.paginationCounter}`;\n        this.currentPageSelectId = `pagination-select-current-page-${Pagination.paginationCounter}`;\n        this.itemsPerPageText = this.i18n.getOverridable(\"PAGINATION.ITEMS_PER_PAGE\");\n        this.optionsListText = this.i18n.getOverridable(\"PAGINATION.OPEN_LIST_OF_OPTIONS\");\n        this.backwardText = this.i18n.getOverridable(\"PAGINATION.BACKWARD\");\n        this.forwardText = this.i18n.getOverridable(\"PAGINATION.FORWARD\");\n        this.totalItemsText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEMS\");\n        this.totalItemText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEM\");\n        this.totalItemsUnknownText = this.i18n.getOverridable(\"PAGINATION.TOTAL_ITEMS_UNKNOWN\");\n        this.pageText = this.i18n.getOverridable(\"PAGINATION.PAGE\");\n        this.ofLastPagesText = this.i18n.getOverridable(\"PAGINATION.OF_LAST_PAGES\");\n        this.ofLastPageText = this.i18n.getOverridable(\"PAGINATION.OF_LAST_PAGE\");\n        this._pageOptions = [];\n        Pagination.paginationCounter++;\n    }\n    /**\n     * Expects an object that contains some or all of:\n     * ```\n     * {\n     *\t\t\"ITEMS_PER_PAGE\": \"Items per page:\",\n     *\t\t\"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n     *\t\t\"BACKWARD\": \"Backward\",\n     *\t\t\"FORWARD\": \"Forward\",\n     *\t\t\"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n     *\t\t\"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n     *\t\t\"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n     *\t\t\"OF_LAST_PAGES\": \"of {{last}} pages\",\n     *\t\t\"OF_LAST_PAGE\": \"of {{last}} page\"\n     * }\n     * ```\n     */\n    set translations(value) {\n        const valueWithDefaults = merge(this.i18n.getMultiple(\"PAGINATION\"), value);\n        this.itemsPerPageText.override(valueWithDefaults.ITEMS_PER_PAGE);\n        this.optionsListText.override(valueWithDefaults.OPEN_LIST_OF_OPTIONS);\n        this.backwardText.override(valueWithDefaults.BACKWARD);\n        this.forwardText.override(valueWithDefaults.FORWARD);\n        this.totalItemsText.override(valueWithDefaults.TOTAL_ITEMS);\n        this.totalItemText.override(valueWithDefaults.TOTAL_ITEM);\n        this.totalItemsUnknownText.override(valueWithDefaults.TOTAL_ITEMS_UNKNOWN);\n        this.pageText.override(valueWithDefaults.PAGE);\n        this.ofLastPagesText.override(valueWithDefaults.OF_LAST_PAGES);\n        this.ofLastPageText.override(valueWithDefaults.OF_LAST_PAGE);\n    }\n    get itemsPerPage() {\n        return this.model.pageLength;\n    }\n    set itemsPerPage(value) {\n        this.model.pageLength = Number(value);\n        this.currentPage = 1; // reset page\n    }\n    get currentPage() {\n        return this.model.currentPage;\n    }\n    set currentPage(value) {\n        value = Number(value);\n        // emits the value to allow the user to update current page\n        // in the model once the page is loaded\n        this.selectPage.emit(value);\n    }\n    get totalDataLength() {\n        return this.model.totalDataLength;\n    }\n    /**\n     * The last page number to display in the pagination view.\n     */\n    get lastPage() {\n        const last = Math.ceil(this.totalDataLength / this.itemsPerPage);\n        return last > 0 ? last : 1;\n    }\n    get startItemIndex() {\n        return this.endItemIndex > 0 ? (this.currentPage - 1) * this.itemsPerPage + 1 : 0;\n    }\n    get endItemIndex() {\n        const projectedEndItemIndex = this.currentPage * this.itemsPerPage;\n        return projectedEndItemIndex < this.totalDataLength ? projectedEndItemIndex : this.totalDataLength;\n    }\n    /**\n     * The previous page number to navigate to, from the current page.\n     */\n    get previousPage() {\n        return this.currentPage <= 1 ? 1 : this.currentPage - 1;\n    }\n    /**\n     * The next page number to navigate to, from the current page.\n     */\n    get nextPage() {\n        const lastPage = this.lastPage;\n        return this.currentPage >= lastPage ? lastPage : this.currentPage + 1;\n    }\n    get pageOptions() {\n        /**\n         * Calculate number of pages based on totalDataLength and itemsPerPage.\n         * Even if totalDataLength is 0, numberOfPages should be always at least 1.\n         * New array will be constructed only if number of pages changes.\n         */\n        const numberOfPages = Math.max(Math.ceil(this.totalDataLength / this.itemsPerPage), 1);\n        if (this._pageOptions.length !== numberOfPages) {\n            this._pageOptions = Array(numberOfPages);\n        }\n        return this._pageOptions;\n    }\n}\nPagination.paginationCounter = 0;\nPagination.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Pagination, deps: [{ token: i1.I18n }, { token: i2.ExperimentalService }], target: i0.ɵɵFactoryTarget.Component });\nPagination.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: Pagination, selector: \"cds-pagination, ibm-pagination\", inputs: { skeleton: \"skeleton\", model: \"model\", disabled: \"disabled\", pageInputDisabled: \"pageInputDisabled\", showPageInput: \"showPageInput\", pagesUnknown: \"pagesUnknown\", pageSelectThreshold: \"pageSelectThreshold\", translations: \"translations\", itemsPerPageOptions: \"itemsPerPageOptions\" }, outputs: { selectPage: \"selectPage\" }, ngImport: i0, template: `\n\t<div\n\t\tclass=\"cds--pagination\"\n\t\t[ngClass]=\"{\n\t\t\t'cds--skeleton': skeleton\n\t\t}\">\n\t\t<!-- left skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"cds--pagination__left\">\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 70px\"></p>\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 35px\"></p>\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 105px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"cds--pagination__left\">\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<label class=\"cds--pagination__text\" [for]=\"itemsPerPageSelectId\">\n\t\t\t\t\t{{itemsPerPageText.subject | async}}\n\t\t\t\t</label>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"cds--select cds--select--inline cds--select__item-count\"\n\t\t\t\t\t[class.cds--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t[id]=\"itemsPerPageSelectId\"\n\t\t\t\t\t\t[(ngModel)]=\"itemsPerPage\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\tclass=\"cds--select-input\">\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tclass=\"cds--select-option\"\n\t\t\t\t\t\t\t*ngFor=\"let option of itemsPerPageOptions\"\n\t\t\t\t\t\t\t[value]=\"option\">\n\t\t\t\t\t\t\t\t{{ option }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\tcdsIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\t\tclass=\"cds--select__arrow\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength <= 1\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength > 1\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsUnknownText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex } | async}}\n\t\t\t</span>\n\t\t</div>\n\n\t\t<!-- right skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"cds--pagination__right\">\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 70px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"cds--pagination__right\">\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"cds--pagination__text cds--pagination__page-text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{pageText.subject | async}}\n\t\t\t</span>\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"cds--select cds--select--inline cds--select__page-number\"\n\t\t\t\t\t[class.cds--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<label [for]=\"currentPageSelectId\" class=\"cds--label cds--visually-hidden\">{{pageText.subject | async}}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\t*ngIf=\"pageOptions.length > pageSelectThreshold\"\n\t\t\t\t\t\tstyle=\"padding-right: 1rem; margin-right: 1rem;\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t[max]=\"pageOptions.length\"\n\t\t\t\t\t\tclass=\"cds--select-input\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= pageSelectThreshold\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\tclass=\"cds--select-input\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t\t<option *ngFor=\"let page of pageOptions; let i = index;\" class=\"cds--select-option\" [value]=\"i + 1\">{{i + 1}}</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= 1000\"\n\t\t\t\t\t\tcdsIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit;\"\n\t\t\t\t\t\tclass=\"cds--select__arrow\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage <= 1\" class=\"cds--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPageText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage > 1\" class=\"cds--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPagesText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<div class=\"cds--pagination__control-buttons\">\n\t\t\t\t<button\n\t\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"cds--pagination__button cds--pagination__button--backward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'cds--pagination__button--no-index': currentPage <= 1 || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"backwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(previousPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage <= 1 || disabled ? true : null)\">\n\t\t\t\t\t<svg cdsIcon=\"caret--left\" size=\"16\" class=\"cds--btn__icon\"></svg>\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"\n\t\t\t\t\t\tcds--pagination__button\n\t\t\t\t\t\tcds--pagination__button--forward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'cds--pagination__button--no-index': currentPage >= lastPage || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"forwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(nextPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage >= lastPage || disabled ? true : null)\">\n\t\t\t\t\t<svg cdsIcon=\"caret--right\" size=\"16\" class=\"cds--btn__icon\"></svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i4.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i4.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i4.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i4.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4$1.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }, { kind: \"directive\", type: i6.Button, selector: \"[cdsButton], [ibmButton]\", inputs: [\"ibmButton\", \"cdsButton\", \"size\", \"skeleton\", \"iconOnly\", \"isExpressive\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.ReplacePipe, name: \"i18nReplace\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Pagination, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-pagination, ibm-pagination\",\n                    template: `\n\t<div\n\t\tclass=\"cds--pagination\"\n\t\t[ngClass]=\"{\n\t\t\t'cds--skeleton': skeleton\n\t\t}\">\n\t\t<!-- left skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"cds--pagination__left\">\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 70px\"></p>\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 35px\"></p>\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 105px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"cds--pagination__left\">\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<label class=\"cds--pagination__text\" [for]=\"itemsPerPageSelectId\">\n\t\t\t\t\t{{itemsPerPageText.subject | async}}\n\t\t\t\t</label>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"cds--select cds--select--inline cds--select__item-count\"\n\t\t\t\t\t[class.cds--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t[id]=\"itemsPerPageSelectId\"\n\t\t\t\t\t\t[(ngModel)]=\"itemsPerPage\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\tclass=\"cds--select-input\">\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tclass=\"cds--select-option\"\n\t\t\t\t\t\t\t*ngFor=\"let option of itemsPerPageOptions\"\n\t\t\t\t\t\t\t[value]=\"option\">\n\t\t\t\t\t\t\t\t{{ option }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\tcdsIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\t\tclass=\"cds--select__arrow\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength <= 1\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && totalDataLength > 1\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex, total: totalDataLength } | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"cds--pagination__text cds--pagination__items-count\" [ngStyle]=\"{'margin-left': showPageInput ? null : 0}\">\n\t\t\t\t{{totalItemsUnknownText.subject | i18nReplace:{start: startItemIndex, end: endItemIndex } | async}}\n\t\t\t</span>\n\t\t</div>\n\n\t\t<!-- right skeleton div -->\n\t\t<div *ngIf=\"skeleton\" class=\"cds--pagination__right\">\n\t\t\t<p class=\"cds--skeleton__text\" style=\"width: 70px\"></p>\n\t\t</div>\n\n\t\t<div *ngIf=\"!skeleton\" class=\"cds--pagination__right\">\n\t\t\t<span *ngIf=\"pagesUnknown\" class=\"cds--pagination__text cds--pagination__page-text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{pageText.subject | async}}\n\t\t\t</span>\n\t\t\t<ng-container *ngIf=\"showPageInput\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"cds--select cds--select--inline cds--select__page-number\"\n\t\t\t\t\t[class.cds--select--disabled]=\"pageInputDisabled\">\n\t\t\t\t\t<label [for]=\"currentPageSelectId\" class=\"cds--label cds--visually-hidden\">{{pageText.subject | async}}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\t*ngIf=\"pageOptions.length > pageSelectThreshold\"\n\t\t\t\t\t\tstyle=\"padding-right: 1rem; margin-right: 1rem;\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t[max]=\"pageOptions.length\"\n\t\t\t\t\t\tclass=\"cds--select-input\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t<select\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= pageSelectThreshold\"\n\t\t\t\t\t\t[id]=\"currentPageSelectId\"\n\t\t\t\t\t\tclass=\"cds--select-input\"\n\t\t\t\t\t\t[disabled]=\"pageInputDisabled\"\n\t\t\t\t\t\t[(ngModel)]=\"currentPage\">\n\t\t\t\t\t\t<option *ngFor=\"let page of pageOptions; let i = index;\" class=\"cds--select-option\" [value]=\"i + 1\">{{i + 1}}</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<svg\n\t\t\t\t\t\t*ngIf=\"pageOptions.length <= 1000\"\n\t\t\t\t\t\tcdsIcon=\"chevron--down\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tstyle=\"display: inherit;\"\n\t\t\t\t\t\tclass=\"cds--select__arrow\"\n\t\t\t\t\t\t[attr.ariaLabel]=\"optionsListText.subject | async\">\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</ng-container>\n\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage <= 1\" class=\"cds--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPageText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<span *ngIf=\"!pagesUnknown && lastPage > 1\" class=\"cds--pagination__text\">\n\t\t\t\t<ng-container *ngIf=\"!showPageInput\">{{currentPage}}</ng-container>\n\t\t\t\t{{ofLastPagesText.subject | i18nReplace: {last: lastPage} | async}}\n\t\t\t</span>\n\t\t\t<div class=\"cds--pagination__control-buttons\">\n\t\t\t\t<button\n\t\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"cds--pagination__button cds--pagination__button--backward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'cds--pagination__button--no-index': currentPage <= 1 || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"backwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(previousPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage <= 1 || disabled ? true : null)\">\n\t\t\t\t\t<svg cdsIcon=\"caret--left\" size=\"16\" class=\"cds--btn__icon\"></svg>\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\tcdsButton=\"ghost\"\n\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\tclass=\"\n\t\t\t\t\t\tcds--pagination__button\n\t\t\t\t\t\tcds--pagination__button--forward\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'cds--pagination__button--no-index': currentPage >= lastPage || disabled\n\t\t\t\t\t}\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t[attr.aria-label]=\"forwardText.subject | async\"\n\t\t\t\t\t(click)=\"selectPage.emit(nextPage)\"\n\t\t\t\t\t[disabled]=\"(currentPage >= lastPage || disabled ? true : null)\">\n\t\t\t\t\t<svg cdsIcon=\"caret--right\" size=\"16\" class=\"cds--btn__icon\"></svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.I18n }, { type: i2.ExperimentalService }]; }, propDecorators: { skeleton: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], pageInputDisabled: [{\n                type: Input\n            }], showPageInput: [{\n                type: Input\n            }], pagesUnknown: [{\n                type: Input\n            }], pageSelectThreshold: [{\n                type: Input\n            }], translations: [{\n                type: Input\n            }], itemsPerPageOptions: [{\n                type: Input\n            }], selectPage: [{\n                type: Output\n            }] } });\n\n/**\n * Used to present a single navigation item in a pagination list\n *\n *  * ```html\n * <cds-pagination-nav-item [page]=\"5\" [isActive]=\"false\" (click)=\"handleClick(value)\"></cds-pagination-nav-item>\n * ```\n */\nclass PaginationNavItem {\n    constructor() {\n        /**\n         * The page for this component to dipslay\n         */\n        this.page = 0;\n        /**\n         * The state for this component to dipslay\n         */\n        this.isActive = false;\n        /**\n         * Emits click event\n         */\n        this.click = new EventEmitter();\n    }\n}\nPaginationNavItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationNavItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPaginationNavItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: PaginationNavItem, selector: \"cds-pagination-nav-item, ibm-pagination-nav-item\", inputs: { page: \"page\", isActive: \"isActive\" }, outputs: { click: \"click\" }, ngImport: i0, template: `\n\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"cds--pagination-nav__page\"\n\t\t\t\t[ngClass]=\"{ 'cds--pagination-nav__page--active': isActive }\"\n\t\t\t\t(click)=\"click.emit(page)\">\n\t\t\t\t<span class=\"cds--pagination-nav__accessibility-label\">\n\t\t\t\t\t{{page}}\n\t\t\t\t</span>\n\t\t\t\t{{page}}\n\t\t\t</button>\n\t\t</li>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationNavItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-pagination-nav-item, ibm-pagination-nav-item\",\n                    template: `\n\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"cds--pagination-nav__page\"\n\t\t\t\t[ngClass]=\"{ 'cds--pagination-nav__page--active': isActive }\"\n\t\t\t\t(click)=\"click.emit(page)\">\n\t\t\t\t<span class=\"cds--pagination-nav__accessibility-label\">\n\t\t\t\t\t{{page}}\n\t\t\t\t</span>\n\t\t\t\t{{page}}\n\t\t\t</button>\n\t\t</li>\n\t`\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { page: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], click: [{\n                type: Output\n            }] } });\n\n/**\n * Used to present a selection of pages when there is an overflow\n * in the pagination list\n *\n * * ```html\n * <cds-pagination-overflow [fromIndex]=\"5\" [count]=\"30\" (change)=\"handleChange(value)\"></cds-pagination-overflow>\n * ```\n */\nclass PaginationOverflow {\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.ariaLabel = this.i18n.get().PAGINATION.SELECT_ARIA;\n        /**\n         * Emits click event\n         */\n        this.change = new EventEmitter();\n    }\n    get countAsArray() {\n        return [...Array(this.count)];\n    }\n    handleChange(event) {\n        this.change.emit(+event.target.value);\n        event.target.value = \"\";\n    }\n}\nPaginationOverflow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationOverflow, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });\nPaginationOverflow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: PaginationOverflow, selector: \"cds-pagination-overflow, ibm-pagination-overflow\", inputs: { fromIndex: \"fromIndex\", count: \"count\", ariaLabel: \"ariaLabel\" }, outputs: { change: \"change\" }, ngImport: i0, template: `\n\t\t<li class=\"cds--pagination-nav__list-item\" *ngIf=\"count > 1\">\n\t\t\t<div class=\"cds--pagination-nav__select\">\n\t\t\t<select\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\tclass=\"cds--pagination-nav__page cds--pagination-nav__page--select\"\n\t\t\t\t(change)=\"handleChange($event)\">\n\t\t\t\t<option value=\"\" hidden></option>\n\t\t\t\t<option\n\t\t\t\t*ngFor=\"let item of countAsArray; let i = index\">\n\t\t\t\t\t{{fromIndex + i + 1}}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t\t<div class=\"cds--pagination-nav__select-icon-wrapper\">\n\t\t\t\t<svg\n\t\t\t\t\tcdsIcon=\"overflow-menu--horizontal\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\tclass=\"cds--pagination-nav__select-icon\">\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t\t<cds-pagination-nav-item *ngIf=\"count === 1\" [page]=\"fromIndex + 1\"></cds-pagination-nav-item>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i4.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i4$1.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }, { kind: \"component\", type: PaginationNavItem, selector: \"cds-pagination-nav-item, ibm-pagination-nav-item\", inputs: [\"page\", \"isActive\"], outputs: [\"click\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationOverflow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-pagination-overflow, ibm-pagination-overflow\",\n                    template: `\n\t\t<li class=\"cds--pagination-nav__list-item\" *ngIf=\"count > 1\">\n\t\t\t<div class=\"cds--pagination-nav__select\">\n\t\t\t<select\n\t\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t\tclass=\"cds--pagination-nav__page cds--pagination-nav__page--select\"\n\t\t\t\t(change)=\"handleChange($event)\">\n\t\t\t\t<option value=\"\" hidden></option>\n\t\t\t\t<option\n\t\t\t\t*ngFor=\"let item of countAsArray; let i = index\">\n\t\t\t\t\t{{fromIndex + i + 1}}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t\t<div class=\"cds--pagination-nav__select-icon-wrapper\">\n\t\t\t\t<svg\n\t\t\t\t\tcdsIcon=\"overflow-menu--horizontal\"\n\t\t\t\t\tsize=\"16\"\n\t\t\t\t\tstyle=\"display: inherit\"\n\t\t\t\t\tclass=\"cds--pagination-nav__select-icon\">\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t\t<cds-pagination-nav-item *ngIf=\"count === 1\" [page]=\"fromIndex + 1\"></cds-pagination-nav-item>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { fromIndex: [{\n                type: Input\n            }], count: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\n/**\n * Use pagination when you have multiple pages of data to handle. Get started with importing the module:\n *\n * ```typescript\n * import { PaginationModule } from 'carbon-components-angular';\n * ```\n *\n * ```html\n * <cds-pagination-nav [model]=\"model\" (selectPage)=\"selectPage($event)\"></cds-pagination-nav>\n * ```\n *\n * In your `selectPage()` method set the `model.currentPage` to selected page, _after_\n * you load the page.\n *\n * ```typescript\n * selectPage(page) {\n * \t// ... your code to load the page goes here\n *\n * \tthis.model.currentPage = page;\n *\n * \t// ... anything you want to do after page selection changes goes here\n * }\n * ```\n *\n * [See demo](../../?path=/story/components-pagination-nav--basic)\n */\nclass PaginationNav {\n    constructor(i18n, experimental) {\n        this.i18n = i18n;\n        this.experimental = experimental;\n        /**\n           * Set to `true` to disable the backward/forward buttons.\n         */\n        this.disabled = false;\n        /**\n         * Number of items to show in pagination. Minimum is 4.\n         */\n        this.numOfItemsToShow = 4;\n        /**\n         * Sets the pagination nav size\n         */\n        this.size = \"lg\";\n        /**\n         * Emits the new page number.\n         *\n         * You should tie into this and update `model.currentPage` once the fresh\n         * data is finally loaded.\n         */\n        this.selectPage = new EventEmitter();\n        this.nextItemText = this.i18n.getOverridable(\"PAGINATION.NEXT\");\n        this.previousItemText = this.i18n.getOverridable(\"PAGINATION.PREVIOUS\");\n        PaginationNav.paginationCounter++;\n    }\n    /**\n     * Expects an object that contains some or all of:\n     * ```\n     * {\n     *\t\t\"NEXT\": \"Next\",\n     *\t\t\"PREVIOUS\": \"Previous\",\n     * }\n     * ```\n     */\n    set translations(value) {\n        const valueWithDefaults = merge(this.i18n.getMultiple(\"PAGINATION\"), value);\n        this.nextItemText.override(valueWithDefaults.NEXT);\n        this.previousItemText.override(valueWithDefaults.PREVIOUS);\n    }\n    // Size\n    get smallLayoutSize() {\n        return this.size === \"sm\";\n    }\n    get mediumLayoutSize() {\n        return this.size === \"md\";\n    }\n    get largeLayoutSize() {\n        return this.size === \"lg\";\n    }\n    get totalNumbersArray() {\n        return range(this.totalDataLength + 1, 1);\n    }\n    get currentPage() {\n        return this.model.currentPage;\n    }\n    set currentPage(value) {\n        value = Number(value);\n        // emits the value to allow the user to update current page\n        // in the model once the page is loaded\n        this.selectPage.emit(value);\n    }\n    get totalDataLength() {\n        return this.model.totalDataLength;\n    }\n    get startOffset() {\n        return this.numOfItemsToShow <= 4 && this.currentPage > 1 ? 0 : 1;\n    }\n    get frontCuts() {\n        const cuts = this.getCuts();\n        return cuts.front;\n    }\n    get backCuts() {\n        const cuts = this.getCuts();\n        return cuts.back;\n    }\n    get leftArrowDisabled() {\n        return this.disabled || this.currentPage === 1;\n    }\n    get rightArrowDisabled() {\n        return this.disabled || this.currentPage === this.totalDataLength;\n    }\n    handleOverflowSelection(page) {\n        if (typeof page === \"number\") {\n            this.currentPage = page;\n        }\n    }\n    jumpToNext() {\n        this.currentPage = this.currentPage < this.totalDataLength ? this.currentPage + 1 : this.totalDataLength;\n    }\n    jumpToPrevious() {\n        this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n    }\n    getPages() {\n        if (this.totalDataLength <= 1) {\n            return null;\n        }\n        const cuts = this.getCuts();\n        return this.totalNumbersArray.slice(this.startOffset + cuts.front, (1 + cuts.back) * -1);\n    }\n    getCuts(splitPoint = null) {\n        const page = this.currentPage - 1;\n        const totalItems = this.totalDataLength;\n        const itemsThatFit = this.numOfItemsToShow;\n        if (itemsThatFit >= totalItems) {\n            return {\n                front: 0,\n                back: 0\n            };\n        }\n        const split = splitPoint || Math.ceil(itemsThatFit / 2) - 1;\n        let frontHidden = page + 1 - split;\n        let backHidden = totalItems - page - (itemsThatFit - split) + 1;\n        if (frontHidden <= 1) {\n            backHidden -= frontHidden <= 0 ? Math.abs(frontHidden) + 1 : 0;\n            frontHidden = 0;\n        }\n        if (backHidden <= 1) {\n            frontHidden -= backHidden <= 0 ? Math.abs(backHidden) + 1 : 0;\n            backHidden = 0;\n        }\n        return {\n            front: frontHidden,\n            back: backHidden\n        };\n    }\n}\nPaginationNav.paginationCounter = 0;\nPaginationNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationNav, deps: [{ token: i1.I18n }, { token: i2.ExperimentalService }], target: i0.ɵɵFactoryTarget.Component });\nPaginationNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: PaginationNav, selector: \"cds-pagination-nav, ibm-pagination-navm\", inputs: { model: \"model\", disabled: \"disabled\", numOfItemsToShow: \"numOfItemsToShow\", translations: \"translations\", size: \"size\" }, outputs: { selectPage: \"selectPage\" }, host: { properties: { \"class.cds--layout--size-sm\": \"this.smallLayoutSize\", \"class.cds--layout--size-md\": \"this.mediumLayoutSize\", \"class.cds--layout--size-lg\": \"this.largeLayoutSize\" } }, ngImport: i0, template: `\n\t<div>\n\t\t<div class=\"cds--pagination-nav\">\n\t\t\t<ul class=\"cds--pagination-nav__list\">\n\t\t\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t\t\t<cds-icon-button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t(click)=\"jumpToPrevious()\"\n\t\t\t\t\t\t[disabled]=\"leftArrowDisabled\"\n\t\t\t\t\t\t[description]=\"previousItemText.subject | async\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tcdsIcon=\"caret--left\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tclass=\"cds--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</cds-icon-button>\n\t\t\t\t</li>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngIf=\"this.numOfItemsToShow >= 5 || (this.numOfItemsToShow <= 4 && currentPage <= 1)\"\n\t\t\t\t\tpage=\"1\"\n\t\t\t\t\t(click)=\"currentPage = 1\"\n\t\t\t\t\t[isActive]=\"currentPage == 1\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<cds-pagination-overflow\n\t\t\t\t\t*ngIf=\"frontCuts\"\n\t\t\t\t\t[count]=\"frontCuts\"\n\t\t\t\t\t[fromIndex]=\"startOffset\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</cds-pagination-overflow>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngFor=\"let page of getPages();\"\n\t\t\t\t\t[page]=\"page\"\n\t\t\t\t\t(click)=\"currentPage = page\"\n\t\t\t\t\t[isActive]=\"currentPage == page\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<cds-pagination-overflow\n\t\t\t\t\t*ngIf=\"backCuts\"\n\t\t\t\t\t[count]=\"backCuts\"\n\t\t\t\t\t[fromIndex]=\"totalNumbersArray.length - backCuts - 1\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</cds-pagination-overflow>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngIf=\"totalDataLength > 1\"\n\t\t\t\t\t[page]=\"totalNumbersArray.length\"\n\t\t\t\t\t(click)=\"currentPage = totalNumbersArray.length\"\n\t\t\t\t\t[isActive]=\"currentPage == totalNumbersArray.length\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t\t\t<cds-icon-button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t(click)=\"jumpToNext()\"\n\t\t\t\t\t\t[disabled]=\"rightArrowDisabled\"\n\t\t\t\t\t\t[description]=\"nextItemText.subject | async\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tcdsIcon=\"caret--right\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tclass=\"cds--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</cds-icon-button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4$1.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }, { kind: \"component\", type: i6.IconButton, selector: \"cds-icon-button, ibm-icon-button\", inputs: [\"buttonNgClass\", \"buttonAttributes\", \"buttonId\", \"kind\", \"size\", \"type\", \"isExpressive\", \"disabled\", \"description\", \"showTooltipWhenDisabled\"], outputs: [\"click\", \"focus\", \"blur\", \"tooltipClick\"] }, { kind: \"component\", type: PaginationNavItem, selector: \"cds-pagination-nav-item, ibm-pagination-nav-item\", inputs: [\"page\", \"isActive\"], outputs: [\"click\"] }, { kind: \"component\", type: PaginationOverflow, selector: \"cds-pagination-overflow, ibm-pagination-overflow\", inputs: [\"fromIndex\", \"count\", \"ariaLabel\"], outputs: [\"change\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationNav, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-pagination-nav, ibm-pagination-navm\",\n                    template: `\n\t<div>\n\t\t<div class=\"cds--pagination-nav\">\n\t\t\t<ul class=\"cds--pagination-nav__list\">\n\t\t\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t\t\t<cds-icon-button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t(click)=\"jumpToPrevious()\"\n\t\t\t\t\t\t[disabled]=\"leftArrowDisabled\"\n\t\t\t\t\t\t[description]=\"previousItemText.subject | async\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tcdsIcon=\"caret--left\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tclass=\"cds--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</cds-icon-button>\n\t\t\t\t</li>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngIf=\"this.numOfItemsToShow >= 5 || (this.numOfItemsToShow <= 4 && currentPage <= 1)\"\n\t\t\t\t\tpage=\"1\"\n\t\t\t\t\t(click)=\"currentPage = 1\"\n\t\t\t\t\t[isActive]=\"currentPage == 1\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<cds-pagination-overflow\n\t\t\t\t\t*ngIf=\"frontCuts\"\n\t\t\t\t\t[count]=\"frontCuts\"\n\t\t\t\t\t[fromIndex]=\"startOffset\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</cds-pagination-overflow>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngFor=\"let page of getPages();\"\n\t\t\t\t\t[page]=\"page\"\n\t\t\t\t\t(click)=\"currentPage = page\"\n\t\t\t\t\t[isActive]=\"currentPage == page\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<cds-pagination-overflow\n\t\t\t\t\t*ngIf=\"backCuts\"\n\t\t\t\t\t[count]=\"backCuts\"\n\t\t\t\t\t[fromIndex]=\"totalNumbersArray.length - backCuts - 1\"\n\t\t\t\t\t(change)=\"handleOverflowSelection($event)\">\n\t\t\t\t</cds-pagination-overflow>\n\t\t\t\t<cds-pagination-nav-item\n\t\t\t\t\t*ngIf=\"totalDataLength > 1\"\n\t\t\t\t\t[page]=\"totalNumbersArray.length\"\n\t\t\t\t\t(click)=\"currentPage = totalNumbersArray.length\"\n\t\t\t\t\t[isActive]=\"currentPage == totalNumbersArray.length\">\n\t\t\t\t</cds-pagination-nav-item>\n\t\t\t\t<li class=\"cds--pagination-nav__list-item\">\n\t\t\t\t\t<cds-icon-button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t\t(click)=\"jumpToNext()\"\n\t\t\t\t\t\t[disabled]=\"rightArrowDisabled\"\n\t\t\t\t\t\t[description]=\"nextItemText.subject | async\">\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tcdsIcon=\"caret--right\"\n\t\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\t\tclass=\"cds--btn__icon\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</cds-icon-button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.I18n }, { type: i2.ExperimentalService }]; }, propDecorators: { model: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], numOfItemsToShow: [{\n                type: Input\n            }], translations: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], smallLayoutSize: [{\n                type: HostBinding,\n                args: [\"class.cds--layout--size-sm\"]\n            }], mediumLayoutSize: [{\n                type: HostBinding,\n                args: [\"class.cds--layout--size-md\"]\n            }], largeLayoutSize: [{\n                type: HostBinding,\n                args: [\"class.cds--layout--size-lg\"]\n            }], selectPage: [{\n                type: Output\n            }] } });\n\nclass PaginationModule {\n}\nPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationModule, declarations: [Pagination,\n        PaginationNav,\n        PaginationNavItem,\n        PaginationOverflow], imports: [CommonModule,\n        FormsModule,\n        I18nModule,\n        ExperimentalModule,\n        IconModule,\n        ButtonModule], exports: [Pagination,\n        PaginationNav,\n        PaginationNavItem,\n        PaginationOverflow] });\nPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationModule, imports: [CommonModule,\n        FormsModule,\n        I18nModule,\n        ExperimentalModule,\n        IconModule,\n        ButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: PaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        Pagination,\n                        PaginationNav,\n                        PaginationNavItem,\n                        PaginationOverflow\n                    ],\n                    exports: [\n                        Pagination,\n                        PaginationNav,\n                        PaginationNavItem,\n                        PaginationOverflow\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        I18nModule,\n                        ExperimentalModule,\n                        IconModule,\n                        ButtonModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Pagination, PaginationModel, PaginationModule, PaginationNav, PaginationNavItem, PaginationOverflow };\n"],"x_google_ignoreList":[0]}
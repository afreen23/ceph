{"version":3,"file":"node_modules_async-mutex_index_mjs.js","mappings":"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","names":["E_TIMEOUT","Error","E_ALREADY_LOCKED","E_CANCELED","__awaiter$2","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","result","done","adopt","then","apply","Semaphore","constructor","_value","_cancelError","this","_queue","_weightedWaiters","acquire","weight","priority","task","i","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","arguments","callback","release","waitForUnlock","_couldLockImmediately","insertSorted","a","v","isLocked","getValue","setValue","_dispatchQueue","cancel","forEach","entry","_drainUnlockWaiters","length","shift","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","__awaiter$1","Mutex","cancelError","_semaphore","releaser","__awaiter","withTimeout","sync","timeout","timeoutError","weightOrPriority","isSemaphore","undefined","isTimeout","handle","setTimeout","ticket","Array","isArray","clearTimeout","tryAcquire","alreadyAcquiredError"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/async-mutex/index.mjs"],"sourcesContent":["const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n"],"x_google_ignoreList":[0]}
{"version":3,"file":"default-node_modules_carbon-components-angular_fesm2020_carbon-components-angular-file-uploader_mjs.js","mappings":"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","names":["FileComponent_span_2__svg_svg_1_Template","rf","ctx","i0","FileComponent_span_2_Template","_r1","ctx_r1","remove","emit","isInvalidText","translations","REMOVE_BUTTON","FileComponent_span_3_Template","FileComponent_span_4_Template","CHECKMARK","FileComponent_div_5_Template","fileItem","invalidTitle","invalidText","_c0","_c1","a0","_c2","FileUploader_ng_container_0_label_6_ng_container_2_Template","ctx_r3","dropText","FileUploader_ng_container_0_label_6_3_ng_template_0_Template","FileUploader_ng_container_0_label_6_3_Template","FileUploader_ng_container_0_label_6_Template","_r2","fileInput_r3","click","$event","onDragOver","onDragLeave","onDrop","disabled","dragOver","fileUploaderId","isTemplate","FileUploader_ng_container_0_button_7_Template","_r5","buttonType","size","buttonText","FileUploader_ng_container_0_ng_container_11_Template","_r6","fileItem_r7","$implicit","removeFile","fileItemSize","FileUploader_ng_container_0_Template","onFilesAdded","title","description","drop","accept","multiple","files","FileUploader_ng_template_1_Template","FileComponent","constructor","i18n","this","get","FILE_UPLOADER","EventEmitter","selectedFile","fileSizeSmall","fileSizeMedium","fileSizeLarge","ngOnDestroy","ɵfac","__ngFactoryType__","i1","ɵcmp","type","selectors","hostVars","hostBindings","inputs","outputs","decls","vars","consts","template","file","name","state","invalid","dependencies","i2","i3","i4","encapsulation","noop","FileUploader","OPEN","skeleton","fileUploaderCount","Set","filesChange","onTouchedCallback","onChangeCallback","value","v","onBlur","fileList","Array","from","fileInput","nativeElement","writeValue","createFileItem","uploaded","newFiles","clear","add","event","stopPropagation","preventDefault","transferredFiles","dataTransfer","filter","fileExtension","split","pop","replace","includes","length","forEach","has","delete","TemplateRef","registerOnTouched","fn","registerOnChange","setDisabledState","isDisabled","viewQuery","_t","first","features","provide","NG_VALUE_ACCESSOR","useExisting","multi","skeletonTemplate_r8","i3$1","FileUploaderModule","ɵmod","ɵinj","imports","CommonModule","ButtonModule","LoadingModule","IconModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/carbon-components-angular/fesm2020/carbon-components-angular-file-uploader.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, HostBinding, TemplateRef, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'carbon-components-angular/i18n';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3$1 from 'carbon-components-angular/button';\nimport { ButtonModule } from 'carbon-components-angular/button';\nimport * as i3 from 'carbon-components-angular/loading';\nimport { LoadingModule } from 'carbon-components-angular/loading';\nimport * as i4 from 'carbon-components-angular/icon';\nimport { IconModule } from 'carbon-components-angular/icon';\n\nclass FileComponent {\n    constructor(i18n) {\n        this.i18n = i18n;\n        /**\n         * Accessible translations for the close and complete icons\n         */\n        this.translations = this.i18n.get().FILE_UPLOADER;\n        this.size = \"lg\";\n        this.remove = new EventEmitter();\n        this.selectedFile = true;\n    }\n    get isInvalidText() {\n        return this.fileItem.invalidText;\n    }\n    get fileSizeSmall() {\n        return this.size === \"sm\";\n    }\n    get fileSizeMedium() {\n        return this.size === \"md\";\n    }\n    get fileSizeLarge() {\n        return this.size === \"lg\";\n    }\n    ngOnDestroy() {\n        this.remove.emit();\n    }\n}\nFileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileComponent, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });\nFileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: FileComponent, selector: \"cds-file, ibm-file\", inputs: { translations: \"translations\", fileItem: \"fileItem\", size: \"size\" }, outputs: { remove: \"remove\" }, host: { properties: { \"class.cds--file__selected-file\": \"this.selectedFile\", \"class.cds--file__selected-file--invalid\": \"this.isInvalidText\", \"class.cds--file__selected-file--sm\": \"this.fileSizeSmall\", \"class.cds--file__selected-file--md\": \"this.fileSizeMedium\", \"class.cds--file__selected-file--lg\": \"this.fileSizeLarge\" } }, ngImport: i0, template: `\n\t\t<p class=\"cds--file-filename\" [title]=\"fileItem.file.name\">{{fileItem.file.name}}</p>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'edit'\"\n\t\t\tclass=\"cds--file__state-container\">\n\t\t\t<svg\n\t\t\t\t*ngIf=\"isInvalidText\"\n\t\t\t\tcdsIcon=\"warning--filled\"\n\t\t\t\tclass=\"cds--file--invalid\"\n\t\t\t\tsize=\"16\">\n\t\t\t</svg>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"cds--file-close\"\n\t\t\t\t[attr.aria-label]=\"translations.REMOVE_BUTTON\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t(click)=\"remove.emit()\"\n\t\t\t\t(keyup.enter)=\"remove.emit()\"\n\t\t\t\t(keyup.space)=\"remove.emit()\">\n\t\t\t\t<svg cdsIcon=\"close\" size=\"16\"></svg>\n\t\t\t</button>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'upload'\">\n\t\t\t<div class=\"cds--inline-loading__animation\">\n\t\t\t\t<cds-loading size=\"sm\"></cds-loading>\n\t\t\t</div>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'complete'\" class=\"cds--file__state-container\">\n\t\t\t<svg\n\t\t\t\tcdsIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"cds--file-complete\"\n\t\t\t\t[ariaLabel]=\"translations.CHECKMARK\">\n\t\t\t</svg>\n\t\t</span>\n\t\t<div class=\"cds--form-requirement\" role=\"alert\" *ngIf=\"fileItem.invalid\">\n\t\t\t<div class=\"cds--form-requirement__title\">{{fileItem.invalidTitle}}</div>\n\t\t\t<p class=\"cds--form-requirement__supplement\">{{fileItem.invalidText}}</p>\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.Loading, selector: \"cds-loading, ibm-loading\", inputs: [\"title\", \"isActive\", \"size\", \"overlay\"] }, { kind: \"directive\", type: i4.IconDirective, selector: \"[cdsIcon], [ibmIcon]\", inputs: [\"ibmIcon\", \"cdsIcon\", \"size\", \"title\", \"ariaLabel\", \"ariaLabelledBy\", \"ariaHidden\", \"isFocusable\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-file, ibm-file\",\n                    template: `\n\t\t<p class=\"cds--file-filename\" [title]=\"fileItem.file.name\">{{fileItem.file.name}}</p>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'edit'\"\n\t\t\tclass=\"cds--file__state-container\">\n\t\t\t<svg\n\t\t\t\t*ngIf=\"isInvalidText\"\n\t\t\t\tcdsIcon=\"warning--filled\"\n\t\t\t\tclass=\"cds--file--invalid\"\n\t\t\t\tsize=\"16\">\n\t\t\t</svg>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"cds--file-close\"\n\t\t\t\t[attr.aria-label]=\"translations.REMOVE_BUTTON\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t(click)=\"remove.emit()\"\n\t\t\t\t(keyup.enter)=\"remove.emit()\"\n\t\t\t\t(keyup.space)=\"remove.emit()\">\n\t\t\t\t<svg cdsIcon=\"close\" size=\"16\"></svg>\n\t\t\t</button>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'upload'\">\n\t\t\t<div class=\"cds--inline-loading__animation\">\n\t\t\t\t<cds-loading size=\"sm\"></cds-loading>\n\t\t\t</div>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'complete'\" class=\"cds--file__state-container\">\n\t\t\t<svg\n\t\t\t\tcdsIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"cds--file-complete\"\n\t\t\t\t[ariaLabel]=\"translations.CHECKMARK\">\n\t\t\t</svg>\n\t\t</span>\n\t\t<div class=\"cds--form-requirement\" role=\"alert\" *ngIf=\"fileItem.invalid\">\n\t\t\t<div class=\"cds--form-requirement__title\">{{fileItem.invalidTitle}}</div>\n\t\t\t<p class=\"cds--form-requirement__supplement\">{{fileItem.invalidText}}</p>\n\t\t</div>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { translations: [{\n                type: Input\n            }], fileItem: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], remove: [{\n                type: Output\n            }], selectedFile: [{\n                type: HostBinding,\n                args: [\"class.cds--file__selected-file\"]\n            }], isInvalidText: [{\n                type: HostBinding,\n                args: [\"class.cds--file__selected-file--invalid\"]\n            }], fileSizeSmall: [{\n                type: HostBinding,\n                args: [\"class.cds--file__selected-file--sm\"]\n            }], fileSizeMedium: [{\n                type: HostBinding,\n                args: [\"class.cds--file__selected-file--md\"]\n            }], fileSizeLarge: [{\n                type: HostBinding,\n                args: [\"class.cds--file__selected-file--lg\"]\n            }] } });\n\nconst noop = () => { };\n/**\n * Get started with importing the module:\n *\n * ```typescript\n * import { FileUploaderModule } from 'carbon-components-angular';\n * ```\n *\n * [See demo](../../?path=/story/components-file-uploader--basic)\n */\nclass FileUploader {\n    constructor(i18n) {\n        this.i18n = i18n;\n        /**\n         * Accessible text for the button that opens the upload window.\n         *\n         * Defaults to the `FILE_UPLOADER.OPEN` value from the i18n service\n         */\n        this.buttonText = this.i18n.get().FILE_UPLOADER.OPEN;\n        /**\n         * Type set for button\n         */\n        this.buttonType = \"primary\";\n        /**\n         * Specify the types of files that the input should be able to receive\n         */\n        this.accept = [];\n        /**\n         * Set to `false` to tell the component to only accept a single file on upload.\n         *\n         * Defaults to `true`. Accepts multiple files.\n         */\n        this.multiple = true;\n        /**\n         * Set to `true` for a loading file uploader.\n         */\n        this.skeleton = false;\n        /**\n         * Sets the size of the file items\n         */\n        this.fileItemSize = \"lg\";\n        /**\n         * Set to `true` to enable drag and drop.\n         */\n        this.drop = false;\n        /**\n         * Provides a unique id for the underlying `<input>` node\n         */\n        this.fileUploaderId = `file-uploader-${FileUploader.fileUploaderCount}`;\n        /**\n         * The list of files that have been submitted to be uploaded\n         */\n        this.files = new Set();\n        /**\n         * Set to `true` to disable upload button\n         */\n        this.disabled = false;\n        this.filesChange = new EventEmitter();\n        /**\n         * Controls the state of the drag and drop file container\n         */\n        this.dragOver = false;\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        FileUploader.fileUploaderCount++;\n    }\n    /**\n     * Specifies the property to be used as the return value to `ngModel` and reactive forms.\n     * Updates `this.files`.\n     */\n    get value() {\n        return this.files;\n    }\n    set value(v) {\n        if (v !== this.files) {\n            this.files = v;\n            this.onChangeCallback(v);\n        }\n    }\n    onBlur() {\n        this.onTouchedCallback();\n    }\n    get fileList() {\n        return Array.from(this.fileInput.nativeElement.files);\n    }\n    /**\n     * Propagates the injected `value`.\n     */\n    writeValue(value) {\n        if (value !== this.value) {\n            this.files = value;\n        }\n    }\n    createFileItem(file) {\n        return {\n            uploaded: false,\n            state: \"edit\",\n            invalid: false,\n            invalidText: \"\",\n            file: file\n        };\n    }\n    onFilesAdded() {\n        const newFiles = new Set(this.files);\n        if (!this.multiple) {\n            newFiles.clear();\n        }\n        for (let file of this.fileList) {\n            const fileItem = this.createFileItem(file);\n            newFiles.add(fileItem);\n        }\n        this.value = newFiles;\n        this.filesChange.emit(newFiles);\n    }\n    onDragOver(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        this.dragOver = true;\n    }\n    onDragLeave(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.dragOver = false;\n    }\n    onDrop(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        const transferredFiles = Array.from(event.dataTransfer.files);\n        const newFiles = new Set(this.files);\n        transferredFiles.filter(({ name, type }) => {\n            // Get the file extension and add a \".\" to the beginning.\n            const fileExtension = name.split(\".\").pop().replace(/^/, \".\");\n            // Check if the accept array contains the mime type or extension of the file.\n            return this.accept.includes(type) || this.accept.includes(fileExtension) || !this.accept.length;\n        }).forEach(file => {\n            if (!newFiles.size || this.multiple) {\n                const fileItem = this.createFileItem(file);\n                newFiles.add(fileItem);\n            }\n        });\n        this.value = newFiles;\n        this.filesChange.emit(newFiles);\n        this.dragOver = false;\n    }\n    removeFile(fileItem) {\n        // Deleting an item from this.files removes the <ibm-file> component,\n        // which triggers its ngOnDestroy(), which fires the (remove) event again.\n        // So, (remove) may double-fire and we need to handle it here.\n        if (this.files && this.files.has(fileItem)) {\n            const newFiles = new Set(this.files);\n            newFiles.delete(fileItem);\n            this.filesChange.emit(newFiles);\n            this.value = newFiles;\n        }\n        this.fileInput.nativeElement.value = \"\";\n    }\n    isTemplate(value) {\n        return value instanceof TemplateRef;\n    }\n    /**\n     * Registers the injected function to control the touch use of the `FileUploader`.\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * Sets a method in order to propagate changes back to the form.\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * `ControlValueAccessor` method to programmatically disable the checkbox.\n     *\n     * ex: `this.formGroup.get(\"myFileUploader\").disable();`\n     *\n     * @param isDisabled `true` to disable the file uploader\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\n/**\n * Counter used to create unique ids for file-uploader components\n */\nFileUploader.fileUploaderCount = 0;\nFileUploader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploader, deps: [{ token: i1.I18n }], target: i0.ɵɵFactoryTarget.Component });\nFileUploader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.3.0\", type: FileUploader, selector: \"cds-file-uploader, ibm-file-uploader\", inputs: { buttonText: \"buttonText\", buttonType: \"buttonType\", title: \"title\", description: \"description\", accept: \"accept\", multiple: \"multiple\", skeleton: \"skeleton\", size: \"size\", fileItemSize: \"fileItemSize\", drop: \"drop\", dropText: \"dropText\", fileUploaderId: \"fileUploaderId\", files: \"files\", disabled: \"disabled\" }, outputs: { filesChange: \"filesChange\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: FileUploader,\n            multi: true\n        }\n    ], viewQueries: [{ propertyName: \"fileInput\", first: true, predicate: [\"fileInput\"], descendants: true }], ngImport: i0, template: `\n\t\t<ng-container *ngIf=\"!skeleton; else skeletonTemplate\">\n\t\t\t<label [for]=\"fileUploaderId\" class=\"cds--file--label\">{{title}}</label>\n\t\t\t<p class=\"cds--label-description\" role=\"alert\">{{description}}</p>\n\t\t\t<div class=\"cds--file\">\n\t\t\t\t<label\n\t\t\t\t\t*ngIf=\"drop\"\n\t\t\t\t\tclass=\"cds--file-browse-btn\"\n\t\t\t\t\t(keyup.enter)=\"fileInput.click()\"\n\t\t\t\t\t(keyup.space)=\"fileInput.click()\"\n\t\t\t\t\t[ngClass]=\"{'cds--file-browse-btn--disabled': disabled}\"\n\t\t\t\t\ttabindex=\"0\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"cds--file__drop-container\"\n\t\t\t\t\t\t[ngClass]=\"{'cds--file__drop-container--drag-over': dragOver}\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t(click)=\"fileInput.click()\"\n\t\t\t\t\t\t[attr.for]=\"fileUploaderId\"\n\t\t\t\t\t\t(dragover)=\"onDragOver($event)\"\n\t\t\t\t\t\t(dragleave)=\"onDragLeave($event)\"\n\t\t\t\t\t\t(drop)=\"onDrop($event)\">\n\t\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(dropText)\">{{dropText}}</ng-container>\n\t\t\t\t\t\t<ng-template *ngIf=\"isTemplate(dropText)\" [ngTemplateOutlet]=\"dropText\"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"!drop\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[cdsButton]=\"buttonType\"\n\t\t\t\t\t(click)=\"fileInput.click()\"\n\t\t\t\t\t[attr.for]=\"fileUploaderId\"\n\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t[disabled]=\"disabled\">\n\t\t\t\t\t{{buttonText}}\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\t#fileInput\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tclass=\"cds--file-input\"\n\t\t\t\t\t[accept]=\"accept\"\n\t\t\t\t\t[id]=\"fileUploaderId\"\n\t\t\t\t\t[multiple]=\"multiple\"\n\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t(change)=\"onFilesAdded()\"\n\t\t\t\t\t[disabled]=\"disabled\"/>\n\t\t\t\t<div class=\"cds--file-container\">\n\t\t\t\t\t<ng-container *ngFor=\"let fileItem of files\">\n\t\t\t\t\t\t<cds-file\n\t\t\t\t\t\t\t[fileItem]=\"fileItem\"\n\t\t\t\t\t\t\t(remove)=\"removeFile(fileItem)\"\n\t\t\t\t\t\t\t[size]=\"fileItemSize\">\n\t\t\t\t\t\t</cds-file>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #skeletonTemplate>\n\t\t\t<div class=\"cds--skeleton__text\" style=\"width: 100px\"></div>\n\t\t\t<div class=\"cds--skeleton__text\" style=\"width: 225px\"></div>\n\t\t\t<button cdsButton skeleton=\"true\"></button>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3$1.Button, selector: \"[cdsButton], [ibmButton]\", inputs: [\"ibmButton\", \"cdsButton\", \"size\", \"skeleton\", \"iconOnly\", \"isExpressive\"] }, { kind: \"component\", type: FileComponent, selector: \"cds-file, ibm-file\", inputs: [\"translations\", \"fileItem\", \"size\"], outputs: [\"remove\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"cds-file-uploader, ibm-file-uploader\",\n                    template: `\n\t\t<ng-container *ngIf=\"!skeleton; else skeletonTemplate\">\n\t\t\t<label [for]=\"fileUploaderId\" class=\"cds--file--label\">{{title}}</label>\n\t\t\t<p class=\"cds--label-description\" role=\"alert\">{{description}}</p>\n\t\t\t<div class=\"cds--file\">\n\t\t\t\t<label\n\t\t\t\t\t*ngIf=\"drop\"\n\t\t\t\t\tclass=\"cds--file-browse-btn\"\n\t\t\t\t\t(keyup.enter)=\"fileInput.click()\"\n\t\t\t\t\t(keyup.space)=\"fileInput.click()\"\n\t\t\t\t\t[ngClass]=\"{'cds--file-browse-btn--disabled': disabled}\"\n\t\t\t\t\ttabindex=\"0\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"cds--file__drop-container\"\n\t\t\t\t\t\t[ngClass]=\"{'cds--file__drop-container--drag-over': dragOver}\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t(click)=\"fileInput.click()\"\n\t\t\t\t\t\t[attr.for]=\"fileUploaderId\"\n\t\t\t\t\t\t(dragover)=\"onDragOver($event)\"\n\t\t\t\t\t\t(dragleave)=\"onDragLeave($event)\"\n\t\t\t\t\t\t(drop)=\"onDrop($event)\">\n\t\t\t\t\t\t<ng-container *ngIf=\"!isTemplate(dropText)\">{{dropText}}</ng-container>\n\t\t\t\t\t\t<ng-template *ngIf=\"isTemplate(dropText)\" [ngTemplateOutlet]=\"dropText\"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\t*ngIf=\"!drop\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[cdsButton]=\"buttonType\"\n\t\t\t\t\t(click)=\"fileInput.click()\"\n\t\t\t\t\t[attr.for]=\"fileUploaderId\"\n\t\t\t\t\t[size]=\"size\"\n\t\t\t\t\t[disabled]=\"disabled\">\n\t\t\t\t\t{{buttonText}}\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\t#fileInput\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tclass=\"cds--file-input\"\n\t\t\t\t\t[accept]=\"accept\"\n\t\t\t\t\t[id]=\"fileUploaderId\"\n\t\t\t\t\t[multiple]=\"multiple\"\n\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t(change)=\"onFilesAdded()\"\n\t\t\t\t\t[disabled]=\"disabled\"/>\n\t\t\t\t<div class=\"cds--file-container\">\n\t\t\t\t\t<ng-container *ngFor=\"let fileItem of files\">\n\t\t\t\t\t\t<cds-file\n\t\t\t\t\t\t\t[fileItem]=\"fileItem\"\n\t\t\t\t\t\t\t(remove)=\"removeFile(fileItem)\"\n\t\t\t\t\t\t\t[size]=\"fileItemSize\">\n\t\t\t\t\t\t</cds-file>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #skeletonTemplate>\n\t\t\t<div class=\"cds--skeleton__text\" style=\"width: 100px\"></div>\n\t\t\t<div class=\"cds--skeleton__text\" style=\"width: 225px\"></div>\n\t\t\t<button cdsButton skeleton=\"true\"></button>\n\t\t</ng-template>\n\t`,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: FileUploader,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.I18n }]; }, propDecorators: { buttonText: [{\n                type: Input\n            }], buttonType: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], description: [{\n                type: Input\n            }], accept: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], skeleton: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], fileItemSize: [{\n                type: Input\n            }], drop: [{\n                type: Input\n            }], dropText: [{\n                type: Input\n            }], fileUploaderId: [{\n                type: Input\n            }], fileInput: [{\n                type: ViewChild,\n                args: [\"fileInput\"]\n            }], files: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], filesChange: [{\n                type: Output\n            }] } });\n\nclass FileUploaderModule {\n}\nFileUploaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFileUploaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploaderModule, declarations: [FileUploader, FileComponent], imports: [CommonModule,\n        ButtonModule,\n        LoadingModule,\n        IconModule], exports: [FileUploader, FileComponent] });\nFileUploaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploaderModule, imports: [CommonModule,\n        ButtonModule,\n        LoadingModule,\n        IconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: FileUploaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FileUploader, FileComponent],\n                    exports: [FileUploader, FileComponent],\n                    imports: [\n                        CommonModule,\n                        ButtonModule,\n                        LoadingModule,\n                        IconModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileComponent, FileUploader, FileUploaderModule };\n"],"x_google_ignoreList":[0]}